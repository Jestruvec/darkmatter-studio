import{r as Pm,g as Wy,R as vE,a as Lt}from"./index.aN-q7ZY9.js";var np={exports:{}},xl={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var B0;function _E(){if(B0)return xl;B0=1;var s=Symbol.for("react.transitional.element"),t=Symbol.for("react.fragment");function e(n,i,o){var l=null;if(o!==void 0&&(l=""+o),i.key!==void 0&&(l=""+i.key),"key"in i){o={};for(var c in i)c!=="key"&&(o[c]=i[c])}else o=i;return i=o.ref,{$$typeof:s,type:n,key:l,ref:i!==void 0?i:null,props:o}}return xl.Fragment=t,xl.jsx=e,xl.jsxs=e,xl}var F0;function yE(){return F0||(F0=1,np.exports=_E()),np.exports}var pn=yE();function Co(){return Co=Object.assign?Object.assign.bind():function(s){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)({}).hasOwnProperty.call(e,n)&&(s[n]=e[n])}return s},Co.apply(null,arguments)}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Fo="178",or={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},lr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Xy=0,hm=1,qy=2,xE=3,Yy=0,$h=1,zl=2,Ki=3,Ws=0,ti=1,fs=2,Gs=0,mr=1,fm=2,dm=3,pm=4,Zy=5,va=100,jy=101,Ky=102,Jy=103,Qy=104,$y=200,tx=201,ex=202,nx=203,oh=204,lh=205,ix=206,sx=207,ax=208,rx=209,ox=210,lx=211,cx=212,ux=213,hx=214,ch=0,uh=1,hh=2,yr=3,fh=4,dh=5,ph=6,mh=7,fc=0,fx=1,dx=2,gs=0,px=1,mx=2,gx=3,Im=4,vx=5,_x=6,yx=7,mm="attached",xx="detached",tf=300,Xs=301,Sa=302,Zl=303,jl=304,Ho=306,Kl=1e3,zi=1001,Jl=1002,Ln=1003,Om=1004,SE=1004,Mo=1005,ME=1005,gn=1006,Bl=1007,bE=1007,ps=1008,EE=1008,Fi=1009,zm=1010,Bm=1011,Ro=1012,ef=1013,qs=1014,ci=1015,Vo=1016,nf=1017,sf=1018,Do=1020,Fm=35902,Hm=1021,Vm=1022,Wn=1023,Uo=1026,No=1027,af=1028,dc=1029,Gm=1030,rf=1031,TE=1032,of=1033,Fl=33776,Hl=33777,Vl=33778,Gl=33779,gh=35840,vh=35841,_h=35842,yh=35843,xh=36196,Sh=37492,Mh=37496,bh=37808,Eh=37809,Th=37810,Ah=37811,wh=37812,Ch=37813,Rh=37814,Dh=37815,Uh=37816,Nh=37817,Lh=37818,Ph=37819,Ih=37820,Oh=37821,kl=36492,zh=36494,Bh=36495,km=36283,Fh=36284,Hh=36285,Vh=36286,Sx=2200,Mx=2201,bx=2202,Ql=2300,Gh=2301,nh=2302,fr=2400,dr=2401,$l=2402,lf=2500,Wm=2501,AE=0,wE=1,CE=2,Ex=3200,Tx=3201,RE=3202,DE=3203,Ea=0,Ax=1,Hs="",kn="srgb",Ma="srgb-linear",tc="linear",Ve="srgb",UE=0,cr=7680,NE=7681,LE=7682,PE=7683,IE=34055,OE=34056,zE=5386,BE=512,FE=513,HE=514,VE=515,GE=516,kE=517,WE=518,gm=519,wx=512,Cx=513,Rx=514,Xm=515,Dx=516,Ux=517,Nx=518,Lx=519,ec=35044,XE=35048,qE=35040,YE=35045,ZE=35049,jE=35041,KE=35046,JE=35050,QE=35042,$E="100",vm="300 es",Bi=2e3,nc=2001,t1={COMPUTE:"compute",RENDER:"render"},e1={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},n1={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};let ys=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const i=n[t];if(i!==void 0){const o=i.indexOf(e);o!==-1&&i.splice(o,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let o=0,l=i.length;o<l;o++)i[o].call(this,t);t.target=null}}};const Hn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let H0=1234567;const gr=Math.PI/180,Lo=180/Math.PI;function Ei(){const s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Hn[s&255]+Hn[s>>8&255]+Hn[s>>16&255]+Hn[s>>24&255]+"-"+Hn[t&255]+Hn[t>>8&255]+"-"+Hn[t>>16&15|64]+Hn[t>>24&255]+"-"+Hn[e&63|128]+Hn[e>>8&255]+"-"+Hn[e>>16&255]+Hn[e>>24&255]+Hn[n&255]+Hn[n>>8&255]+Hn[n>>16&255]+Hn[n>>24&255]).toLowerCase()}function pe(s,t,e){return Math.max(t,Math.min(e,s))}function qm(s,t){return(s%t+t)%t}function i1(s,t,e,n,i){return n+(s-t)*(i-n)/(e-t)}function s1(s,t,e){return s!==t?(e-s)/(t-s):0}function Wl(s,t,e){return(1-e)*s+e*t}function a1(s,t,e,n){return Wl(s,t,1-Math.exp(-e*n))}function r1(s,t=1){return t-Math.abs(qm(s,t*2)-t)}function o1(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*(3-2*s))}function l1(s,t,e){return s<=t?0:s>=e?1:(s=(s-t)/(e-t),s*s*s*(s*(s*6-15)+10))}function c1(s,t){return s+Math.floor(Math.random()*(t-s+1))}function u1(s,t){return s+Math.random()*(t-s)}function h1(s){return s*(.5-Math.random())}function f1(s){s!==void 0&&(H0=s);let t=H0+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function d1(s){return s*gr}function p1(s){return s*Lo}function m1(s){return(s&s-1)===0&&s!==0}function g1(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function v1(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function _1(s,t,e,n,i){const o=Math.cos,l=Math.sin,c=o(e/2),h=l(e/2),f=o((t+n)/2),p=l((t+n)/2),m=o((t-n)/2),g=l((t-n)/2),v=o((n-t)/2),x=l((n-t)/2);switch(i){case"XYX":s.set(c*p,h*m,h*g,c*f);break;case"YZY":s.set(h*g,c*p,h*m,c*f);break;case"ZXZ":s.set(h*m,h*g,c*p,c*f);break;case"XZX":s.set(c*p,h*x,h*v,c*f);break;case"YXY":s.set(h*v,c*p,h*x,c*f);break;case"ZYZ":s.set(h*x,h*v,c*p,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function $n(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function _e(s,t){switch(t.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const Ym={DEG2RAD:gr,RAD2DEG:Lo,generateUUID:Ei,clamp:pe,euclideanModulo:qm,mapLinear:i1,inverseLerp:s1,lerp:Wl,damp:a1,pingpong:r1,smoothstep:o1,smootherstep:l1,randInt:c1,randFloat:u1,randFloatSpread:h1,seededRandom:f1,degToRad:d1,radToDeg:p1,isPowerOfTwo:m1,ceilPowerOfTwo:g1,floorPowerOfTwo:v1,setQuaternionFromProperEuler:_1,normalize:_e,denormalize:$n};class ut{constructor(t=0,e=0){ut.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=pe(this.x,t.x,e.x),this.y=pe(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=pe(this.x,t,e),this.y=pe(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(pe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(pe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),o=this.x-t.x,l=this.y-t.y;return this.x=o*n-l*i+t.x,this.y=o*i+l*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Xn{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,o,l,c){let h=n[i+0],f=n[i+1],p=n[i+2],m=n[i+3];const g=o[l+0],v=o[l+1],x=o[l+2],b=o[l+3];if(c===0){t[e+0]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m;return}if(c===1){t[e+0]=g,t[e+1]=v,t[e+2]=x,t[e+3]=b;return}if(m!==b||h!==g||f!==v||p!==x){let S=1-c;const _=h*g+f*v+p*x+m*b,E=_>=0?1:-1,T=1-_*_;if(T>Number.EPSILON){const N=Math.sqrt(T),D=Math.atan2(N,_*E);S=Math.sin(S*D)/N,c=Math.sin(c*D)/N}const A=c*E;if(h=h*S+g*A,f=f*S+v*A,p=p*S+x*A,m=m*S+b*A,S===1-c){const N=1/Math.sqrt(h*h+f*f+p*p+m*m);h*=N,f*=N,p*=N,m*=N}}t[e]=h,t[e+1]=f,t[e+2]=p,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,i,o,l){const c=n[i],h=n[i+1],f=n[i+2],p=n[i+3],m=o[l],g=o[l+1],v=o[l+2],x=o[l+3];return t[e]=c*x+p*m+h*v-f*g,t[e+1]=h*x+p*g+f*m-c*v,t[e+2]=f*x+p*v+c*g-h*m,t[e+3]=p*x-c*m-h*g-f*v,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,o=t._z,l=t._order,c=Math.cos,h=Math.sin,f=c(n/2),p=c(i/2),m=c(o/2),g=h(n/2),v=h(i/2),x=h(o/2);switch(l){case"XYZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"YXZ":this._x=g*p*m+f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"ZXY":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m-g*v*x;break;case"ZYX":this._x=g*p*m-f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m+g*v*x;break;case"YZX":this._x=g*p*m+f*v*x,this._y=f*v*m+g*p*x,this._z=f*p*x-g*v*m,this._w=f*p*m-g*v*x;break;case"XZY":this._x=g*p*m-f*v*x,this._y=f*v*m-g*p*x,this._z=f*p*x+g*v*m,this._w=f*p*m+g*v*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],o=e[8],l=e[1],c=e[5],h=e[9],f=e[2],p=e[6],m=e[10],g=n+c+m;if(g>0){const v=.5/Math.sqrt(g+1);this._w=.25/v,this._x=(p-h)*v,this._y=(o-f)*v,this._z=(l-i)*v}else if(n>c&&n>m){const v=2*Math.sqrt(1+n-c-m);this._w=(p-h)/v,this._x=.25*v,this._y=(i+l)/v,this._z=(o+f)/v}else if(c>m){const v=2*Math.sqrt(1+c-n-m);this._w=(o-f)/v,this._x=(i+l)/v,this._y=.25*v,this._z=(h+p)/v}else{const v=2*Math.sqrt(1+m-n-c);this._w=(l-i)/v,this._x=(o+f)/v,this._y=(h+p)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-8?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(pe(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,o=t._z,l=t._w,c=e._x,h=e._y,f=e._z,p=e._w;return this._x=n*p+l*c+i*f-o*h,this._y=i*p+l*h+o*c-n*f,this._z=o*p+l*f+n*h-i*c,this._w=l*p-n*c-i*h-o*f,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,o=this._z,l=this._w;let c=l*t._w+n*t._x+i*t._y+o*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=l,this._x=n,this._y=i,this._z=o,this;const h=1-c*c;if(h<=Number.EPSILON){const v=1-e;return this._w=v*l+e*this._w,this._x=v*n+e*this._x,this._y=v*i+e*this._y,this._z=v*o+e*this._z,this.normalize(),this}const f=Math.sqrt(h),p=Math.atan2(f,c),m=Math.sin((1-e)*p)/f,g=Math.sin(e*p)/f;return this._w=l*m+this._w*g,this._x=n*m+this._x*g,this._y=i*m+this._y*g,this._z=o*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),o=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),o*Math.sin(e),o*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(t=0,e=0,n=0){I.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(V0.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(V0.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[3]*n+o[6]*i,this.y=o[1]*e+o[4]*n+o[7]*i,this.z=o[2]*e+o[5]*n+o[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=t.elements,l=1/(o[3]*e+o[7]*n+o[11]*i+o[15]);return this.x=(o[0]*e+o[4]*n+o[8]*i+o[12])*l,this.y=(o[1]*e+o[5]*n+o[9]*i+o[13])*l,this.z=(o[2]*e+o[6]*n+o[10]*i+o[14])*l,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,o=t.x,l=t.y,c=t.z,h=t.w,f=2*(l*i-c*n),p=2*(c*e-o*i),m=2*(o*n-l*e);return this.x=e+h*f+l*m-c*p,this.y=n+h*p+c*f-o*m,this.z=i+h*m+o*p-l*f,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i,this.y=o[1]*e+o[5]*n+o[9]*i,this.z=o[2]*e+o[6]*n+o[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=pe(this.x,t.x,e.x),this.y=pe(this.y,t.y,e.y),this.z=pe(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=pe(this.x,t,e),this.y=pe(this.y,t,e),this.z=pe(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(pe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,o=t.z,l=e.x,c=e.y,h=e.z;return this.x=i*h-o*c,this.y=o*l-n*h,this.z=n*c-i*l,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return ip.copy(this).projectOnVector(t),this.sub(ip)}reflect(t){return this.sub(ip.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(pe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ip=new I,V0=new Xn;class me{constructor(t,e,n,i,o,l,c,h,f){me.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f)}set(t,e,n,i,o,l,c,h,f){const p=this.elements;return p[0]=t,p[1]=i,p[2]=c,p[3]=e,p[4]=o,p[5]=h,p[6]=n,p[7]=l,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[3],h=n[6],f=n[1],p=n[4],m=n[7],g=n[2],v=n[5],x=n[8],b=i[0],S=i[3],_=i[6],E=i[1],T=i[4],A=i[7],N=i[2],D=i[5],P=i[8];return o[0]=l*b+c*E+h*N,o[3]=l*S+c*T+h*D,o[6]=l*_+c*A+h*P,o[1]=f*b+p*E+m*N,o[4]=f*S+p*T+m*D,o[7]=f*_+p*A+m*P,o[2]=g*b+v*E+x*N,o[5]=g*S+v*T+x*D,o[8]=g*_+v*A+x*P,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8];return e*l*p-e*c*f-n*o*p+n*c*h+i*o*f-i*l*h}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=p*l-c*f,g=c*h-p*o,v=f*o-l*h,x=e*m+n*g+i*v;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const b=1/x;return t[0]=m*b,t[1]=(i*f-p*n)*b,t[2]=(c*n-i*l)*b,t[3]=g*b,t[4]=(p*e-i*h)*b,t[5]=(i*o-c*e)*b,t[6]=v*b,t[7]=(n*h-f*e)*b,t[8]=(l*e-n*o)*b,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,o,l,c){const h=Math.cos(o),f=Math.sin(o);return this.set(n*h,n*f,-n*(h*l+f*c)+l+t,-i*f,i*h,-i*(-f*l+h*c)+c+e,0,0,1),this}scale(t,e){return this.premultiply(sp.makeScale(t,e)),this}rotate(t){return this.premultiply(sp.makeRotation(-t)),this}translate(t,e){return this.premultiply(sp.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const sp=new me;function Px(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}const y1={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function bo(s,t){return new y1[s](t)}function ic(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function Ix(){const s=ic("canvas");return s.style.display="block",s}const G0={};function Ao(s){s in G0||(G0[s]=!0,console.warn(s))}function x1(s,t,e){return new Promise(function(n,i){function o(){switch(s.clientWaitSync(t,s.SYNC_FLUSH_COMMANDS_BIT,0)){case s.WAIT_FAILED:i();break;case s.TIMEOUT_EXPIRED:setTimeout(o,e);break;default:n()}}setTimeout(o,e)})}function S1(s){const t=s.elements;t[2]=.5*t[2]+.5*t[3],t[6]=.5*t[6]+.5*t[7],t[10]=.5*t[10]+.5*t[11],t[14]=.5*t[14]+.5*t[15]}function M1(s){const t=s.elements;t[11]===-1?(t[10]=-t[10]-1,t[14]=-t[14]):(t[10]=-t[10],t[14]=-t[14]+1)}const k0=new me().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),W0=new me().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function b1(){const s={enabled:!0,workingColorSpace:Ma,spaces:{},convert:function(i,o,l){return this.enabled===!1||o===l||!o||!l||(this.spaces[o].transfer===Ve&&(i.r=ks(i.r),i.g=ks(i.g),i.b=ks(i.b)),this.spaces[o].primaries!==this.spaces[l].primaries&&(i.applyMatrix3(this.spaces[o].toXYZ),i.applyMatrix3(this.spaces[l].fromXYZ)),this.spaces[l].transfer===Ve&&(i.r=wo(i.r),i.g=wo(i.g),i.b=wo(i.b))),i},workingToColorSpace:function(i,o){return this.convert(i,this.workingColorSpace,o)},colorSpaceToWorking:function(i,o){return this.convert(i,o,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Hs?tc:this.spaces[i].transfer},getLuminanceCoefficients:function(i,o=this.workingColorSpace){return i.fromArray(this.spaces[o].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,o,l){return i.copy(this.spaces[o].toXYZ).multiply(this.spaces[l].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,o){return Ao("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),s.workingToColorSpace(i,o)},toWorkingColorSpace:function(i,o){return Ao("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),s.colorSpaceToWorking(i,o)}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return s.define({[Ma]:{primaries:t,whitePoint:n,transfer:tc,toXYZ:k0,fromXYZ:W0,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:kn},outputColorSpaceConfig:{drawingBufferColorSpace:kn}},[kn]:{primaries:t,whitePoint:n,transfer:Ve,toXYZ:k0,fromXYZ:W0,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:kn}}}),s}const Re=b1();function ks(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function wo(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}let $r;class Ox{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{$r===void 0&&($r=ic("canvas")),$r.width=t.width,$r.height=t.height;const i=$r.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),n=$r}return n.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=ic("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),o=i.data;for(let l=0;l<o.length;l++)o[l]=ks(o[l]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(ks(e[n]/255)*255):e[n]=ks(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let E1=0;class ya{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:E1++}),this.uuid=Ei(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight):e!==null?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let o;if(Array.isArray(i)){o=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?o.push(ap(i[l].image)):o.push(ap(i[l]))}else o=ap(i);n.url=o}return e||(t.images[this.uuid]=n),n}}function ap(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?Ox.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let T1=0;const rp=new I;class rn extends ys{constructor(t=rn.DEFAULT_IMAGE,e=rn.DEFAULT_MAPPING,n=zi,i=zi,o=gn,l=ps,c=Wn,h=Fi,f=rn.DEFAULT_ANISOTROPY,p=Hs){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:T1++}),this.uuid=Ei(),this.name="",this.source=new ya(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=o,this.minFilter=l,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=h,this.offset=new ut(0,0),this.repeat=new ut(1,1),this.center=new ut(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new me,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=p,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(rp).x}get height(){return this.source.getSize(rp).y}get depth(){return this.source.getSize(rp).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Texture.setValues(): property '${e}' does not exist.`);continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==tf)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Kl:t.x=t.x-Math.floor(t.x);break;case zi:t.x=t.x<0?0:1;break;case Jl:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Kl:t.y=t.y-Math.floor(t.y);break;case zi:t.y=t.y<0?0:1;break;case Jl:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}rn.DEFAULT_IMAGE=null;rn.DEFAULT_MAPPING=tf;rn.DEFAULT_ANISOTROPY=1;class Me{constructor(t=0,e=0,n=0,i=1){Me.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,o=this.w,l=t.elements;return this.x=l[0]*e+l[4]*n+l[8]*i+l[12]*o,this.y=l[1]*e+l[5]*n+l[9]*i+l[13]*o,this.z=l[2]*e+l[6]*n+l[10]*i+l[14]*o,this.w=l[3]*e+l[7]*n+l[11]*i+l[15]*o,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,o;const h=t.elements,f=h[0],p=h[4],m=h[8],g=h[1],v=h[5],x=h[9],b=h[2],S=h[6],_=h[10];if(Math.abs(p-g)<.01&&Math.abs(m-b)<.01&&Math.abs(x-S)<.01){if(Math.abs(p+g)<.1&&Math.abs(m+b)<.1&&Math.abs(x+S)<.1&&Math.abs(f+v+_-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const T=(f+1)/2,A=(v+1)/2,N=(_+1)/2,D=(p+g)/4,P=(m+b)/4,z=(x+S)/4;return T>A&&T>N?T<.01?(n=0,i=.707106781,o=.707106781):(n=Math.sqrt(T),i=D/n,o=P/n):A>N?A<.01?(n=.707106781,i=0,o=.707106781):(i=Math.sqrt(A),n=D/i,o=z/i):N<.01?(n=.707106781,i=.707106781,o=0):(o=Math.sqrt(N),n=P/o,i=z/o),this.set(n,i,o,e),this}let E=Math.sqrt((S-x)*(S-x)+(m-b)*(m-b)+(g-p)*(g-p));return Math.abs(E)<.001&&(E=1),this.x=(S-x)/E,this.y=(m-b)/E,this.z=(g-p)/E,this.w=Math.acos((f+v+_-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=pe(this.x,t.x,e.x),this.y=pe(this.y,t.y,e.y),this.z=pe(this.z,t.z,e.z),this.w=pe(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=pe(this.x,t,e),this.y=pe(this.y,t,e),this.z=pe(this.z,t,e),this.w=pe(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(pe(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Zm extends ys{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:gn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new Me(0,0,t,e),this.scissorTest=!1,this.viewport=new Me(0,0,t,e);const i={width:t,height:e,depth:n.depth},o=new rn(i);this.textures=[];const l=n.count;for(let c=0;c<l;c++)this.textures[c]=o.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:gn,generateMipmaps:!1,flipY:!1,internalFormat:null};t.mapping!==void 0&&(e.mapping=t.mapping),t.wrapS!==void 0&&(e.wrapS=t.wrapS),t.wrapT!==void 0&&(e.wrapT=t.wrapT),t.wrapR!==void 0&&(e.wrapR=t.wrapR),t.magFilter!==void 0&&(e.magFilter=t.magFilter),t.minFilter!==void 0&&(e.minFilter=t.minFilter),t.format!==void 0&&(e.format=t.format),t.type!==void 0&&(e.type=t.type),t.anisotropy!==void 0&&(e.anisotropy=t.anisotropy),t.colorSpace!==void 0&&(e.colorSpace=t.colorSpace),t.flipY!==void 0&&(e.flipY=t.flipY),t.generateMipmaps!==void 0&&(e.generateMipmaps=t.generateMipmaps),t.internalFormat!==void 0&&(e.internalFormat=t.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,o=this.textures.length;i<o;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new ya(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class _s extends Zm{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class cf extends rn{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ln,this.minFilter=Ln,this.wrapR=zi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class A1 extends _s{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new cf(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class uf extends rn{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ln,this.minFilter=Ln,this.wrapR=zi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class w1 extends _s{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new uf(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class vn{constructor(t=new I(1/0,1/0,1/0),e=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(Yi.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(Yi.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Yi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const o=n.getAttribute("position");if(e===!0&&o!==void 0&&t.isInstancedMesh!==!0)for(let l=0,c=o.count;l<c;l++)t.isMesh===!0?t.getVertexPosition(l,Yi):Yi.fromBufferAttribute(o,l),Yi.applyMatrix4(t.matrixWorld),this.expandByPoint(Yi);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),au.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),au.copy(n.boundingBox)),au.applyMatrix4(t.matrixWorld),this.union(au)}const i=t.children;for(let o=0,l=i.length;o<l;o++)this.expandByObject(i[o],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,Yi),Yi.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Sl),ru.subVectors(this.max,Sl),to.subVectors(t.a,Sl),eo.subVectors(t.b,Sl),no.subVectors(t.c,Sl),ua.subVectors(eo,to),ha.subVectors(no,eo),Ya.subVectors(to,no);let e=[0,-ua.z,ua.y,0,-ha.z,ha.y,0,-Ya.z,Ya.y,ua.z,0,-ua.x,ha.z,0,-ha.x,Ya.z,0,-Ya.x,-ua.y,ua.x,0,-ha.y,ha.x,0,-Ya.y,Ya.x,0];return!op(e,to,eo,no,ru)||(e=[1,0,0,0,1,0,0,0,1],!op(e,to,eo,no,ru))?!1:(ou.crossVectors(ua,ha),e=[ou.x,ou.y,ou.z],op(e,to,eo,no,ru))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Yi).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(Yi).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Ns[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ns[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ns[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ns[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ns[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ns[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ns[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ns[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ns),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const Ns=[new I,new I,new I,new I,new I,new I,new I,new I],Yi=new I,au=new vn,to=new I,eo=new I,no=new I,ua=new I,ha=new I,Ya=new I,Sl=new I,ru=new I,ou=new I,Za=new I;function op(s,t,e,n,i){for(let o=0,l=s.length-3;o<=l;o+=3){Za.fromArray(s,o);const c=i.x*Math.abs(Za.x)+i.y*Math.abs(Za.y)+i.z*Math.abs(Za.z),h=t.dot(Za),f=e.dot(Za),p=n.dot(Za);if(Math.max(-Math.max(h,f,p),Math.min(h,f,p))>c)return!1}return!0}const C1=new vn,Ml=new I,lp=new I;class _n{constructor(t=new I,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):C1.setFromPoints(t).getCenter(n);let i=0;for(let o=0,l=t.length;o<l;o++)i=Math.max(i,n.distanceToSquared(t[o]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Ml.subVectors(t,this.center);const e=Ml.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(Ml,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(lp.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Ml.copy(t.center).add(lp)),this.expandByPoint(Ml.copy(t.center).sub(lp))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const Ls=new I,cp=new I,lu=new I,fa=new I,up=new I,cu=new I,hp=new I;class Mr{constructor(t=new I,e=new I(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Ls)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Ls.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ls.copy(this.origin).addScaledVector(this.direction,e),Ls.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){cp.copy(t).add(e).multiplyScalar(.5),lu.copy(e).sub(t).normalize(),fa.copy(this.origin).sub(cp);const o=t.distanceTo(e)*.5,l=-this.direction.dot(lu),c=fa.dot(this.direction),h=-fa.dot(lu),f=fa.lengthSq(),p=Math.abs(1-l*l);let m,g,v,x;if(p>0)if(m=l*h-c,g=l*c-h,x=o*p,m>=0)if(g>=-x)if(g<=x){const b=1/p;m*=b,g*=b,v=m*(m+l*g+2*c)+g*(l*m+g+2*h)+f}else g=o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g=-o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;else g<=-x?(m=Math.max(0,-(-l*o+c)),g=m>0?-o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f):g<=x?(m=0,g=Math.min(Math.max(-o,-h),o),v=g*(g+2*h)+f):(m=Math.max(0,-(l*o+c)),g=m>0?o:Math.min(Math.max(-o,-h),o),v=-m*m+g*(g+2*h)+f);else g=l>0?-o:o,m=Math.max(0,-(l*g+c)),v=-m*m+g*(g+2*h)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(cp).addScaledVector(lu,g),v}intersectSphere(t,e){Ls.subVectors(t.center,this.origin);const n=Ls.dot(this.direction),i=Ls.dot(Ls)-n*n,o=t.radius*t.radius;if(i>o)return null;const l=Math.sqrt(o-i),c=n-l,h=n+l;return h<0?null:c<0?this.at(h,e):this.at(c,e)}intersectsSphere(t){return t.radius<0?!1:this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,o,l,c,h;const f=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(n=(t.min.x-g.x)*f,i=(t.max.x-g.x)*f):(n=(t.max.x-g.x)*f,i=(t.min.x-g.x)*f),p>=0?(o=(t.min.y-g.y)*p,l=(t.max.y-g.y)*p):(o=(t.max.y-g.y)*p,l=(t.min.y-g.y)*p),n>l||o>i||((o>n||isNaN(n))&&(n=o),(l<i||isNaN(i))&&(i=l),m>=0?(c=(t.min.z-g.z)*m,h=(t.max.z-g.z)*m):(c=(t.max.z-g.z)*m,h=(t.min.z-g.z)*m),n>h||c>i)||((c>n||n!==n)&&(n=c),(h<i||i!==i)&&(i=h),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Ls)!==null}intersectTriangle(t,e,n,i,o){up.subVectors(e,t),cu.subVectors(n,t),hp.crossVectors(up,cu);let l=this.direction.dot(hp),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;fa.subVectors(this.origin,t);const h=c*this.direction.dot(cu.crossVectors(fa,cu));if(h<0)return null;const f=c*this.direction.dot(up.cross(fa));if(f<0||h+f>l)return null;const p=-c*fa.dot(hp);return p<0?null:this.at(p/l,o)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class oe{constructor(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S){oe.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S)}set(t,e,n,i,o,l,c,h,f,p,m,g,v,x,b,S){const _=this.elements;return _[0]=t,_[4]=e,_[8]=n,_[12]=i,_[1]=o,_[5]=l,_[9]=c,_[13]=h,_[2]=f,_[6]=p,_[10]=m,_[14]=g,_[3]=v,_[7]=x,_[11]=b,_[15]=S,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new oe().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/io.setFromMatrixColumn(t,0).length(),o=1/io.setFromMatrixColumn(t,1).length(),l=1/io.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*o,e[5]=n[5]*o,e[6]=n[6]*o,e[7]=0,e[8]=n[8]*l,e[9]=n[9]*l,e[10]=n[10]*l,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,o=t.z,l=Math.cos(n),c=Math.sin(n),h=Math.cos(i),f=Math.sin(i),p=Math.cos(o),m=Math.sin(o);if(t.order==="XYZ"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=-h*m,e[8]=f,e[1]=v+x*f,e[5]=g-b*f,e[9]=-c*h,e[2]=b-g*f,e[6]=x+v*f,e[10]=l*h}else if(t.order==="YXZ"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g+b*c,e[4]=x*c-v,e[8]=l*f,e[1]=l*m,e[5]=l*p,e[9]=-c,e[2]=v*c-x,e[6]=b+g*c,e[10]=l*h}else if(t.order==="ZXY"){const g=h*p,v=h*m,x=f*p,b=f*m;e[0]=g-b*c,e[4]=-l*m,e[8]=x+v*c,e[1]=v+x*c,e[5]=l*p,e[9]=b-g*c,e[2]=-l*f,e[6]=c,e[10]=l*h}else if(t.order==="ZYX"){const g=l*p,v=l*m,x=c*p,b=c*m;e[0]=h*p,e[4]=x*f-v,e[8]=g*f+b,e[1]=h*m,e[5]=b*f+g,e[9]=v*f-x,e[2]=-f,e[6]=c*h,e[10]=l*h}else if(t.order==="YZX"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=b-g*m,e[8]=x*m+v,e[1]=m,e[5]=l*p,e[9]=-c*p,e[2]=-f*p,e[6]=v*m+x,e[10]=g-b*m}else if(t.order==="XZY"){const g=l*h,v=l*f,x=c*h,b=c*f;e[0]=h*p,e[4]=-m,e[8]=f*p,e[1]=g*m+b,e[5]=l*p,e[9]=v*m-x,e[2]=x*m-v,e[6]=c*p,e[10]=b*m+g}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(R1,t,D1)}lookAt(t,e,n){const i=this.elements;return Si.subVectors(t,e),Si.lengthSq()===0&&(Si.z=1),Si.normalize(),da.crossVectors(n,Si),da.lengthSq()===0&&(Math.abs(n.z)===1?Si.x+=1e-4:Si.z+=1e-4,Si.normalize(),da.crossVectors(n,Si)),da.normalize(),uu.crossVectors(Si,da),i[0]=da.x,i[4]=uu.x,i[8]=Si.x,i[1]=da.y,i[5]=uu.y,i[9]=Si.y,i[2]=da.z,i[6]=uu.z,i[10]=Si.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,o=this.elements,l=n[0],c=n[4],h=n[8],f=n[12],p=n[1],m=n[5],g=n[9],v=n[13],x=n[2],b=n[6],S=n[10],_=n[14],E=n[3],T=n[7],A=n[11],N=n[15],D=i[0],P=i[4],z=i[8],C=i[12],w=i[1],F=i[5],$=i[9],W=i[13],J=i[2],rt=i[6],k=i[10],et=i[14],q=i[3],ct=i[7],vt=i[11],yt=i[15];return o[0]=l*D+c*w+h*J+f*q,o[4]=l*P+c*F+h*rt+f*ct,o[8]=l*z+c*$+h*k+f*vt,o[12]=l*C+c*W+h*et+f*yt,o[1]=p*D+m*w+g*J+v*q,o[5]=p*P+m*F+g*rt+v*ct,o[9]=p*z+m*$+g*k+v*vt,o[13]=p*C+m*W+g*et+v*yt,o[2]=x*D+b*w+S*J+_*q,o[6]=x*P+b*F+S*rt+_*ct,o[10]=x*z+b*$+S*k+_*vt,o[14]=x*C+b*W+S*et+_*yt,o[3]=E*D+T*w+A*J+N*q,o[7]=E*P+T*F+A*rt+N*ct,o[11]=E*z+T*$+A*k+N*vt,o[15]=E*C+T*W+A*et+N*yt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],o=t[12],l=t[1],c=t[5],h=t[9],f=t[13],p=t[2],m=t[6],g=t[10],v=t[14],x=t[3],b=t[7],S=t[11],_=t[15];return x*(+o*h*m-i*f*m-o*c*g+n*f*g+i*c*v-n*h*v)+b*(+e*h*v-e*f*g+o*l*g-i*l*v+i*f*p-o*h*p)+S*(+e*f*m-e*c*v-o*l*m+n*l*v+o*c*p-n*f*p)+_*(-i*c*p-e*h*m+e*c*g+i*l*m-n*l*g+n*h*p)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],o=t[3],l=t[4],c=t[5],h=t[6],f=t[7],p=t[8],m=t[9],g=t[10],v=t[11],x=t[12],b=t[13],S=t[14],_=t[15],E=m*S*f-b*g*f+b*h*v-c*S*v-m*h*_+c*g*_,T=x*g*f-p*S*f-x*h*v+l*S*v+p*h*_-l*g*_,A=p*b*f-x*m*f+x*c*v-l*b*v-p*c*_+l*m*_,N=x*m*h-p*b*h-x*c*g+l*b*g+p*c*S-l*m*S,D=e*E+n*T+i*A+o*N;if(D===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/D;return t[0]=E*P,t[1]=(b*g*o-m*S*o-b*i*v+n*S*v+m*i*_-n*g*_)*P,t[2]=(c*S*o-b*h*o+b*i*f-n*S*f-c*i*_+n*h*_)*P,t[3]=(m*h*o-c*g*o-m*i*f+n*g*f+c*i*v-n*h*v)*P,t[4]=T*P,t[5]=(p*S*o-x*g*o+x*i*v-e*S*v-p*i*_+e*g*_)*P,t[6]=(x*h*o-l*S*o-x*i*f+e*S*f+l*i*_-e*h*_)*P,t[7]=(l*g*o-p*h*o+p*i*f-e*g*f-l*i*v+e*h*v)*P,t[8]=A*P,t[9]=(x*m*o-p*b*o-x*n*v+e*b*v+p*n*_-e*m*_)*P,t[10]=(l*b*o-x*c*o+x*n*f-e*b*f-l*n*_+e*c*_)*P,t[11]=(p*c*o-l*m*o-p*n*f+e*m*f+l*n*v-e*c*v)*P,t[12]=N*P,t[13]=(p*b*i-x*m*i+x*n*g-e*b*g-p*n*S+e*m*S)*P,t[14]=(x*c*i-l*b*i-x*n*h+e*b*h+l*n*S-e*c*S)*P,t[15]=(l*m*i-p*c*i+p*n*h-e*m*h-l*n*g+e*c*g)*P,this}scale(t){const e=this.elements,n=t.x,i=t.y,o=t.z;return e[0]*=n,e[4]*=i,e[8]*=o,e[1]*=n,e[5]*=i,e[9]*=o,e[2]*=n,e[6]*=i,e[10]*=o,e[3]*=n,e[7]*=i,e[11]*=o,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),o=1-n,l=t.x,c=t.y,h=t.z,f=o*l,p=o*c;return this.set(f*l+n,f*c-i*h,f*h+i*c,0,f*c+i*h,p*c+n,p*h-i*l,0,f*h-i*c,p*h+i*l,o*h*h+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,o,l){return this.set(1,n,o,0,t,1,l,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,o=e._x,l=e._y,c=e._z,h=e._w,f=o+o,p=l+l,m=c+c,g=o*f,v=o*p,x=o*m,b=l*p,S=l*m,_=c*m,E=h*f,T=h*p,A=h*m,N=n.x,D=n.y,P=n.z;return i[0]=(1-(b+_))*N,i[1]=(v+A)*N,i[2]=(x-T)*N,i[3]=0,i[4]=(v-A)*D,i[5]=(1-(g+_))*D,i[6]=(S+E)*D,i[7]=0,i[8]=(x+T)*P,i[9]=(S-E)*P,i[10]=(1-(g+b))*P,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let o=io.set(i[0],i[1],i[2]).length();const l=io.set(i[4],i[5],i[6]).length(),c=io.set(i[8],i[9],i[10]).length();this.determinant()<0&&(o=-o),t.x=i[12],t.y=i[13],t.z=i[14],Zi.copy(this);const f=1/o,p=1/l,m=1/c;return Zi.elements[0]*=f,Zi.elements[1]*=f,Zi.elements[2]*=f,Zi.elements[4]*=p,Zi.elements[5]*=p,Zi.elements[6]*=p,Zi.elements[8]*=m,Zi.elements[9]*=m,Zi.elements[10]*=m,e.setFromRotationMatrix(Zi),n.x=o,n.y=l,n.z=c,this}makePerspective(t,e,n,i,o,l,c=Bi){const h=this.elements,f=2*o/(e-t),p=2*o/(n-i),m=(e+t)/(e-t),g=(n+i)/(n-i);let v,x;if(c===Bi)v=-(l+o)/(l-o),x=-2*l*o/(l-o);else if(c===nc)v=-l/(l-o),x=-l*o/(l-o);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return h[0]=f,h[4]=0,h[8]=m,h[12]=0,h[1]=0,h[5]=p,h[9]=g,h[13]=0,h[2]=0,h[6]=0,h[10]=v,h[14]=x,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,n,i,o,l,c=Bi){const h=this.elements,f=1/(e-t),p=1/(n-i),m=1/(l-o),g=(e+t)*f,v=(n+i)*p;let x,b;if(c===Bi)x=(l+o)*m,b=-2*m;else if(c===nc)x=o*m,b=-1*m;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return h[0]=2*f,h[4]=0,h[8]=0,h[12]=-g,h[1]=0,h[5]=2*p,h[9]=0,h[13]=-v,h[2]=0,h[6]=0,h[10]=b,h[14]=-x,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const io=new I,Zi=new oe,R1=new I(0,0,0),D1=new I(1,1,1),da=new I,uu=new I,Si=new I,X0=new oe,q0=new Xn;class Ti{constructor(t=0,e=0,n=0,i=Ti.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,o=i[0],l=i[4],c=i[8],h=i[1],f=i[5],p=i[9],m=i[2],g=i[6],v=i[10];switch(e){case"XYZ":this._y=Math.asin(pe(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,v),this._z=Math.atan2(-l,o)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-pe(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-m,o),this._z=0);break;case"ZXY":this._x=Math.asin(pe(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,v),this._z=Math.atan2(-l,f)):(this._y=0,this._z=Math.atan2(h,o));break;case"ZYX":this._y=Math.asin(-pe(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,v),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-l,f));break;case"YZX":this._z=Math.asin(pe(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-m,o)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-pe(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-p,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return X0.makeRotationFromQuaternion(t),this.setFromRotationMatrix(X0,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return q0.setFromEuler(this),this.setFromQuaternion(q0,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ti.DEFAULT_ORDER="XYZ";class Po{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let U1=0;const Y0=new I,so=new Xn,Ps=new oe,hu=new I,bl=new I,N1=new I,L1=new Xn,Z0=new I(1,0,0),j0=new I(0,1,0),K0=new I(0,0,1),J0={type:"added"},P1={type:"removed"},ao={type:"childadded",child:null},fp={type:"childremoved",child:null};class Le extends ys{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:U1++}),this.uuid=Ei(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Le.DEFAULT_UP.clone();const t=new I,e=new Ti,n=new Xn,i=new I(1,1,1);function o(){n.setFromEuler(e,!1)}function l(){e.setFromQuaternion(n,void 0,!1)}e._onChange(o),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new oe},normalMatrix:{value:new me}}),this.matrix=new oe,this.matrixWorld=new oe,this.matrixAutoUpdate=Le.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Le.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Po,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return so.setFromAxisAngle(t,e),this.quaternion.multiply(so),this}rotateOnWorldAxis(t,e){return so.setFromAxisAngle(t,e),this.quaternion.premultiply(so),this}rotateX(t){return this.rotateOnAxis(Z0,t)}rotateY(t){return this.rotateOnAxis(j0,t)}rotateZ(t){return this.rotateOnAxis(K0,t)}translateOnAxis(t,e){return Y0.copy(t).applyQuaternion(this.quaternion),this.position.add(Y0.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Z0,t)}translateY(t){return this.translateOnAxis(j0,t)}translateZ(t){return this.translateOnAxis(K0,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Ps.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?hu.copy(t):hu.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),bl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ps.lookAt(bl,hu,this.up):Ps.lookAt(hu,bl,this.up),this.quaternion.setFromRotationMatrix(Ps),i&&(Ps.extractRotation(i.matrixWorld),so.setFromRotationMatrix(Ps),this.quaternion.premultiply(so.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(J0),ao.child=t,this.dispatchEvent(ao),ao.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(P1),fp.child=t,this.dispatchEvent(fp),fp.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Ps.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Ps.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ps),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(J0),ao.child=t,this.dispatchEvent(ao),ao.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(t,e);if(l!==void 0)return l}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(bl,t,N1),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(bl,L1,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let o=0,l=i.length;o<l;o++)i[o].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(c=>({...c,boundingBox:c.boundingBox?c.boundingBox.toJSON():void 0,boundingSphere:c.boundingSphere?c.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(c=>({...c})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function o(c,h){return c[h.uuid]===void 0&&(c[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=o(t.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const h=c.shapes;if(Array.isArray(h))for(let f=0,p=h.length;f<p;f++){const m=h[f];o(t.shapes,m)}else o(t.shapes,h)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(o(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let h=0,f=this.material.length;h<f;h++)c.push(o(t.materials,this.material[h]));i.material=c}else i.material=o(t.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const h=this.animations[c];i.animations.push(o(t.animations,h))}}if(e){const c=l(t.geometries),h=l(t.materials),f=l(t.textures),p=l(t.images),m=l(t.shapes),g=l(t.skeletons),v=l(t.animations),x=l(t.nodes);c.length>0&&(n.geometries=c),h.length>0&&(n.materials=h),f.length>0&&(n.textures=f),p.length>0&&(n.images=p),m.length>0&&(n.shapes=m),g.length>0&&(n.skeletons=g),v.length>0&&(n.animations=v),x.length>0&&(n.nodes=x)}return n.object=i,n;function l(c){const h=[];for(const f in c){const p=c[f];delete p.metadata,h.push(p)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Le.DEFAULT_UP=new I(0,1,0);Le.DEFAULT_MATRIX_AUTO_UPDATE=!0;Le.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ji=new I,Is=new I,dp=new I,Os=new I,ro=new I,oo=new I,Q0=new I,pp=new I,mp=new I,gp=new I,vp=new Me,_p=new Me,yp=new Me;class li{constructor(t=new I,e=new I,n=new I){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),ji.subVectors(t,e),i.cross(ji);const o=i.lengthSq();return o>0?i.multiplyScalar(1/Math.sqrt(o)):i.set(0,0,0)}static getBarycoord(t,e,n,i,o){ji.subVectors(i,e),Is.subVectors(n,e),dp.subVectors(t,e);const l=ji.dot(ji),c=ji.dot(Is),h=ji.dot(dp),f=Is.dot(Is),p=Is.dot(dp),m=l*f-c*c;if(m===0)return o.set(0,0,0),null;const g=1/m,v=(f*h-c*p)*g,x=(l*p-c*h)*g;return o.set(1-v-x,x,v)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Os)===null?!1:Os.x>=0&&Os.y>=0&&Os.x+Os.y<=1}static getInterpolation(t,e,n,i,o,l,c,h){return this.getBarycoord(t,e,n,i,Os)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(o,Os.x),h.addScaledVector(l,Os.y),h.addScaledVector(c,Os.z),h)}static getInterpolatedAttribute(t,e,n,i,o,l){return vp.setScalar(0),_p.setScalar(0),yp.setScalar(0),vp.fromBufferAttribute(t,e),_p.fromBufferAttribute(t,n),yp.fromBufferAttribute(t,i),l.setScalar(0),l.addScaledVector(vp,o.x),l.addScaledVector(_p,o.y),l.addScaledVector(yp,o.z),l}static isFrontFacing(t,e,n,i){return ji.subVectors(n,e),Is.subVectors(t,e),ji.cross(Is).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ji.subVectors(this.c,this.b),Is.subVectors(this.a,this.b),ji.cross(Is).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return li.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return li.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,o){return li.getInterpolation(t,this.a,this.b,this.c,e,n,i,o)}containsPoint(t){return li.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return li.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,o=this.c;let l,c;ro.subVectors(i,n),oo.subVectors(o,n),pp.subVectors(t,n);const h=ro.dot(pp),f=oo.dot(pp);if(h<=0&&f<=0)return e.copy(n);mp.subVectors(t,i);const p=ro.dot(mp),m=oo.dot(mp);if(p>=0&&m<=p)return e.copy(i);const g=h*m-p*f;if(g<=0&&h>=0&&p<=0)return l=h/(h-p),e.copy(n).addScaledVector(ro,l);gp.subVectors(t,o);const v=ro.dot(gp),x=oo.dot(gp);if(x>=0&&v<=x)return e.copy(o);const b=v*f-h*x;if(b<=0&&f>=0&&x<=0)return c=f/(f-x),e.copy(n).addScaledVector(oo,c);const S=p*x-v*m;if(S<=0&&m-p>=0&&v-x>=0)return Q0.subVectors(o,i),c=(m-p)/(m-p+(v-x)),e.copy(i).addScaledVector(Q0,c);const _=1/(S+b+g);return l=b*_,c=g*_,e.copy(n).addScaledVector(ro,l).addScaledVector(oo,c)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const zx={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},pa={h:0,s:0,l:0},fu={h:0,s:0,l:0};function xp(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}class Gt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=kn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Re.colorSpaceToWorking(this,e),this}setRGB(t,e,n,i=Re.workingColorSpace){return this.r=t,this.g=e,this.b=n,Re.colorSpaceToWorking(this,i),this}setHSL(t,e,n,i=Re.workingColorSpace){if(t=qm(t,1),e=pe(e,0,1),n=pe(n,0,1),e===0)this.r=this.g=this.b=n;else{const o=n<=.5?n*(1+e):n+e-n*e,l=2*n-o;this.r=xp(l,o,t+1/3),this.g=xp(l,o,t),this.b=xp(l,o,t-1/3)}return Re.colorSpaceToWorking(this,i),this}setStyle(t,e=kn){function n(o){o!==void 0&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let o;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(255,parseInt(o[1],10))/255,Math.min(255,parseInt(o[2],10))/255,Math.min(255,parseInt(o[3],10))/255,e);if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setRGB(Math.min(100,parseInt(o[1],10))/100,Math.min(100,parseInt(o[2],10))/100,Math.min(100,parseInt(o[3],10))/100,e);break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(o[4]),this.setHSL(parseFloat(o[1])/360,parseFloat(o[2])/100,parseFloat(o[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const o=i[1],l=o.length;if(l===3)return this.setRGB(parseInt(o.charAt(0),16)/15,parseInt(o.charAt(1),16)/15,parseInt(o.charAt(2),16)/15,e);if(l===6)return this.setHex(parseInt(o,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=kn){const n=zx[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=ks(t.r),this.g=ks(t.g),this.b=ks(t.b),this}copyLinearToSRGB(t){return this.r=wo(t.r),this.g=wo(t.g),this.b=wo(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=kn){return Re.workingToColorSpace(Vn.copy(this),t),Math.round(pe(Vn.r*255,0,255))*65536+Math.round(pe(Vn.g*255,0,255))*256+Math.round(pe(Vn.b*255,0,255))}getHexString(t=kn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Re.workingColorSpace){Re.workingToColorSpace(Vn.copy(this),e);const n=Vn.r,i=Vn.g,o=Vn.b,l=Math.max(n,i,o),c=Math.min(n,i,o);let h,f;const p=(c+l)/2;if(c===l)h=0,f=0;else{const m=l-c;switch(f=p<=.5?m/(l+c):m/(2-l-c),l){case n:h=(i-o)/m+(i<o?6:0);break;case i:h=(o-n)/m+2;break;case o:h=(n-i)/m+4;break}h/=6}return t.h=h,t.s=f,t.l=p,t}getRGB(t,e=Re.workingColorSpace){return Re.workingToColorSpace(Vn.copy(this),e),t.r=Vn.r,t.g=Vn.g,t.b=Vn.b,t}getStyle(t=kn){Re.workingToColorSpace(Vn.copy(this),t);const e=Vn.r,n=Vn.g,i=Vn.b;return t!==kn?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(pa),this.setHSL(pa.h+t,pa.s+e,pa.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(pa),t.getHSL(fu);const n=Wl(pa.h,fu.h,e),i=Wl(pa.s,fu.s,e),o=Wl(pa.l,fu.l,e);return this.setHSL(n,i,o),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,o=t.elements;return this.r=o[0]*e+o[3]*n+o[6]*i,this.g=o[1]*e+o[4]*n+o[7]*i,this.b=o[2]*e+o[5]*n+o[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Vn=new Gt;Gt.NAMES=zx;let I1=0;class qn extends ys{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:I1++}),this.uuid=Ei(),this.name="",this.type="Material",this.blending=mr,this.side=Ws,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=oh,this.blendDst=lh,this.blendEquation=va,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Gt(0,0,0),this.blendAlpha=0,this.depthFunc=yr,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=gm,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=cr,this.stencilZFail=cr,this.stencilZPass=cr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==mr&&(n.blending=this.blending),this.side!==Ws&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==oh&&(n.blendSrc=this.blendSrc),this.blendDst!==lh&&(n.blendDst=this.blendDst),this.blendEquation!==va&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==yr&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==gm&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==cr&&(n.stencilFail=this.stencilFail),this.stencilZFail!==cr&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==cr&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}if(e){const o=i(t.textures),l=i(t.images);o.length>0&&(n.textures=o),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let o=0;o!==i;++o)n[o]=e[o].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class Ta extends qn{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Gt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.combine=fc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Vs=O1();function O1(){const s=new ArrayBuffer(4),t=new Float32Array(s),e=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let h=0;h<256;++h){const f=h-127;f<-27?(n[h]=0,n[h|256]=32768,i[h]=24,i[h|256]=24):f<-14?(n[h]=1024>>-f-14,n[h|256]=1024>>-f-14|32768,i[h]=-f-1,i[h|256]=-f-1):f<=15?(n[h]=f+15<<10,n[h|256]=f+15<<10|32768,i[h]=13,i[h|256]=13):f<128?(n[h]=31744,n[h|256]=64512,i[h]=24,i[h|256]=24):(n[h]=31744,n[h|256]=64512,i[h]=13,i[h|256]=13)}const o=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let h=1;h<1024;++h){let f=h<<13,p=0;for(;(f&8388608)===0;)f<<=1,p-=8388608;f&=-8388609,p+=947912704,o[h]=f|p}for(let h=1024;h<2048;++h)o[h]=939524096+(h-1024<<13);for(let h=1;h<31;++h)l[h]=h<<23;l[31]=1199570944,l[32]=2147483648;for(let h=33;h<63;++h)l[h]=2147483648+(h-32<<23);l[63]=3347054592;for(let h=1;h<64;++h)h!==32&&(c[h]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:o,exponentTable:l,offsetTable:c}}function ri(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=pe(s,-65504,65504),Vs.floatView[0]=s;const t=Vs.uint32View[0],e=t>>23&511;return Vs.baseTable[e]+((t&8388607)>>Vs.shiftTable[e])}function Pl(s){const t=s>>10;return Vs.uint32View[0]=Vs.mantissaTable[Vs.offsetTable[t]+(s&1023)]+Vs.exponentTable[t],Vs.floatView[0]}class z1{static toHalfFloat(t){return ri(t)}static fromHalfFloat(t){return Pl(t)}}const dn=new I,du=new ut;let B1=0;class We{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:B1++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=ec,this.updateRanges=[],this.gpuType=ci,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,o=this.itemSize;i<o;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)du.fromBufferAttribute(this,e),du.applyMatrix3(t),this.setXY(e,du.x,du.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)dn.fromBufferAttribute(this,e),dn.applyMatrix3(t),this.setXYZ(e,dn.x,dn.y,dn.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)dn.fromBufferAttribute(this,e),dn.applyMatrix4(t),this.setXYZ(e,dn.x,dn.y,dn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)dn.fromBufferAttribute(this,e),dn.applyNormalMatrix(t),this.setXYZ(e,dn.x,dn.y,dn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)dn.fromBufferAttribute(this,e),dn.transformDirection(t),this.setXYZ(e,dn.x,dn.y,dn.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=$n(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=_e(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=$n(e,this.array)),e}setX(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=$n(e,this.array)),e}setY(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=$n(e,this.array)),e}setZ(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=$n(e,this.array)),e}setW(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array),i=_e(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array),i=_e(i,this.array),o=_e(o,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=o,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==ec&&(t.usage=this.usage),t}}class F1 extends We{constructor(t,e,n){super(new Int8Array(t),e,n)}}class H1 extends We{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class V1 extends We{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class G1 extends We{constructor(t,e,n){super(new Int16Array(t),e,n)}}class jm extends We{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class k1 extends We{constructor(t,e,n){super(new Int32Array(t),e,n)}}class Km extends We{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class W1 extends We{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=Pl(this.array[t*this.itemSize]);return this.normalized&&(e=$n(e,this.array)),e}setX(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize]=ri(e),this}getY(t){let e=Pl(this.array[t*this.itemSize+1]);return this.normalized&&(e=$n(e,this.array)),e}setY(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize+1]=ri(e),this}getZ(t){let e=Pl(this.array[t*this.itemSize+2]);return this.normalized&&(e=$n(e,this.array)),e}setZ(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize+2]=ri(e),this}getW(t){let e=Pl(this.array[t*this.itemSize+3]);return this.normalized&&(e=$n(e,this.array)),e}setW(t,e){return this.normalized&&(e=_e(e,this.array)),this.array[t*this.itemSize+3]=ri(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array)),this.array[t+0]=ri(e),this.array[t+1]=ri(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array),i=_e(i,this.array)),this.array[t+0]=ri(e),this.array[t+1]=ri(n),this.array[t+2]=ri(i),this}setXYZW(t,e,n,i,o){return t*=this.itemSize,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array),i=_e(i,this.array),o=_e(o,this.array)),this.array[t+0]=ri(e),this.array[t+1]=ri(n),this.array[t+2]=ri(i),this.array[t+3]=ri(o),this}}class Zt extends We{constructor(t,e,n){super(new Float32Array(t),e,n)}}let X1=0;const Oi=new oe,Sp=new Le,lo=new I,Mi=new vn,El=new vn,En=new I;class ye extends ys{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:X1++}),this.uuid=Ei(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Px(t)?Km:jm)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const o=new me().getNormalMatrix(t);n.applyNormalMatrix(o),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Oi.makeRotationFromQuaternion(t),this.applyMatrix4(Oi),this}rotateX(t){return Oi.makeRotationX(t),this.applyMatrix4(Oi),this}rotateY(t){return Oi.makeRotationY(t),this.applyMatrix4(Oi),this}rotateZ(t){return Oi.makeRotationZ(t),this.applyMatrix4(Oi),this}translate(t,e,n){return Oi.makeTranslation(t,e,n),this.applyMatrix4(Oi),this}scale(t,e,n){return Oi.makeScale(t,e,n),this.applyMatrix4(Oi),this}lookAt(t){return Sp.lookAt(t),Sp.updateMatrix(),this.applyMatrix4(Sp.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(lo).negate(),this.translate(lo.x,lo.y,lo.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,o=t.length;i<o;i++){const l=t[i];n.push(l.x,l.y,l.z||0)}this.setAttribute("position",new Zt(n,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const o=t[i];e.setXYZ(i,o.x,o.y,o.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new vn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const o=e[n];Mi.setFromBufferAttribute(o),this.morphTargetsRelative?(En.addVectors(this.boundingBox.min,Mi.min),this.boundingBox.expandByPoint(En),En.addVectors(this.boundingBox.max,Mi.max),this.boundingBox.expandByPoint(En)):(this.boundingBox.expandByPoint(Mi.min),this.boundingBox.expandByPoint(Mi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new _n);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new I,1/0);return}if(t){const n=this.boundingSphere.center;if(Mi.setFromBufferAttribute(t),e)for(let o=0,l=e.length;o<l;o++){const c=e[o];El.setFromBufferAttribute(c),this.morphTargetsRelative?(En.addVectors(Mi.min,El.min),Mi.expandByPoint(En),En.addVectors(Mi.max,El.max),Mi.expandByPoint(En)):(Mi.expandByPoint(El.min),Mi.expandByPoint(El.max))}Mi.getCenter(n);let i=0;for(let o=0,l=t.count;o<l;o++)En.fromBufferAttribute(t,o),i=Math.max(i,n.distanceToSquared(En));if(e)for(let o=0,l=e.length;o<l;o++){const c=e[o],h=this.morphTargetsRelative;for(let f=0,p=c.count;f<p;f++)En.fromBufferAttribute(c,f),h&&(lo.fromBufferAttribute(t,f),En.add(lo)),i=Math.max(i,n.distanceToSquared(En))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,o=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new We(new Float32Array(4*n.count),4));const l=this.getAttribute("tangent"),c=[],h=[];for(let z=0;z<n.count;z++)c[z]=new I,h[z]=new I;const f=new I,p=new I,m=new I,g=new ut,v=new ut,x=new ut,b=new I,S=new I;function _(z,C,w){f.fromBufferAttribute(n,z),p.fromBufferAttribute(n,C),m.fromBufferAttribute(n,w),g.fromBufferAttribute(o,z),v.fromBufferAttribute(o,C),x.fromBufferAttribute(o,w),p.sub(f),m.sub(f),v.sub(g),x.sub(g);const F=1/(v.x*x.y-x.x*v.y);isFinite(F)&&(b.copy(p).multiplyScalar(x.y).addScaledVector(m,-v.y).multiplyScalar(F),S.copy(m).multiplyScalar(v.x).addScaledVector(p,-x.x).multiplyScalar(F),c[z].add(b),c[C].add(b),c[w].add(b),h[z].add(S),h[C].add(S),h[w].add(S))}let E=this.groups;E.length===0&&(E=[{start:0,count:t.count}]);for(let z=0,C=E.length;z<C;++z){const w=E[z],F=w.start,$=w.count;for(let W=F,J=F+$;W<J;W+=3)_(t.getX(W+0),t.getX(W+1),t.getX(W+2))}const T=new I,A=new I,N=new I,D=new I;function P(z){N.fromBufferAttribute(i,z),D.copy(N);const C=c[z];T.copy(C),T.sub(N.multiplyScalar(N.dot(C))).normalize(),A.crossVectors(D,C);const F=A.dot(h[z])<0?-1:1;l.setXYZW(z,T.x,T.y,T.z,F)}for(let z=0,C=E.length;z<C;++z){const w=E[z],F=w.start,$=w.count;for(let W=F,J=F+$;W<J;W+=3)P(t.getX(W+0)),P(t.getX(W+1)),P(t.getX(W+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new We(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let g=0,v=n.count;g<v;g++)n.setXYZ(g,0,0,0);const i=new I,o=new I,l=new I,c=new I,h=new I,f=new I,p=new I,m=new I;if(t)for(let g=0,v=t.count;g<v;g+=3){const x=t.getX(g+0),b=t.getX(g+1),S=t.getX(g+2);i.fromBufferAttribute(e,x),o.fromBufferAttribute(e,b),l.fromBufferAttribute(e,S),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),c.fromBufferAttribute(n,x),h.fromBufferAttribute(n,b),f.fromBufferAttribute(n,S),c.add(p),h.add(p),f.add(p),n.setXYZ(x,c.x,c.y,c.z),n.setXYZ(b,h.x,h.y,h.z),n.setXYZ(S,f.x,f.y,f.z)}else for(let g=0,v=e.count;g<v;g+=3)i.fromBufferAttribute(e,g+0),o.fromBufferAttribute(e,g+1),l.fromBufferAttribute(e,g+2),p.subVectors(l,o),m.subVectors(i,o),p.cross(m),n.setXYZ(g+0,p.x,p.y,p.z),n.setXYZ(g+1,p.x,p.y,p.z),n.setXYZ(g+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)En.fromBufferAttribute(t,e),En.normalize(),t.setXYZ(e,En.x,En.y,En.z)}toNonIndexed(){function t(c,h){const f=c.array,p=c.itemSize,m=c.normalized,g=new f.constructor(h.length*p);let v=0,x=0;for(let b=0,S=h.length;b<S;b++){c.isInterleavedBufferAttribute?v=h[b]*c.data.stride+c.offset:v=h[b]*p;for(let _=0;_<p;_++)g[x++]=f[v++]}return new We(g,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new ye,n=this.index.array,i=this.attributes;for(const c in i){const h=i[c],f=t(h,n);e.setAttribute(c,f)}const o=this.morphAttributes;for(const c in o){const h=[],f=o[c];for(let p=0,m=f.length;p<m;p++){const g=f[p],v=t(g,n);h.push(v)}e.morphAttributes[c]=h}e.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,h=l.length;c<h;c++){const f=l[c];e.addGroup(f.start,f.count,f.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const f in h)h[f]!==void 0&&(t[f]=h[f]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const h in n){const f=n[h];t.data.attributes[h]=f.toJSON(t.data)}const i={};let o=!1;for(const h in this.morphAttributes){const f=this.morphAttributes[h],p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m];p.push(v.toJSON(t.data))}p.length>0&&(i[h]=p,o=!0)}o&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(t.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(t.data.boundingSphere=c.toJSON()),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone());const i=t.attributes;for(const f in i){const p=i[f];this.setAttribute(f,p.clone(e))}const o=t.morphAttributes;for(const f in o){const p=[],m=o[f];for(let g=0,v=m.length;g<v;g++)p.push(m[g].clone(e));this.morphAttributes[f]=p}this.morphTargetsRelative=t.morphTargetsRelative;const l=t.groups;for(let f=0,p=l.length;f<p;f++){const m=l[f];this.addGroup(m.start,m.count,m.materialIndex)}const c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const $0=new oe,ja=new Mr,pu=new _n,t_=new I,mu=new I,gu=new I,vu=new I,Mp=new I,_u=new I,e_=new I,yu=new I;class cn extends Le{constructor(t=new ye,e=new Ta){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,o=n.morphAttributes.position,l=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const c=this.morphTargetInfluences;if(o&&c){_u.set(0,0,0);for(let h=0,f=o.length;h<f;h++){const p=c[h],m=o[h];p!==0&&(Mp.fromBufferAttribute(m,t),l?_u.addScaledVector(Mp,p):_u.addScaledVector(Mp.sub(e),p))}e.add(_u)}return e}raycast(t,e){const n=this.geometry,i=this.material,o=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),pu.copy(n.boundingSphere),pu.applyMatrix4(o),ja.copy(t.ray).recast(t.near),!(pu.containsPoint(ja.origin)===!1&&(ja.intersectSphere(pu,t_)===null||ja.origin.distanceToSquared(t_)>(t.far-t.near)**2))&&($0.copy(o).invert(),ja.copy(t.ray).applyMatrix4($0),!(n.boundingBox!==null&&ja.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,ja)))}_computeIntersections(t,e,n){let i;const o=this.geometry,l=this.material,c=o.index,h=o.attributes.position,f=o.attributes.uv,p=o.attributes.uv1,m=o.attributes.normal,g=o.groups,v=o.drawRange;if(c!==null)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),T=Math.min(c.count,Math.min(S.start+S.count,v.start+v.count));for(let A=E,N=T;A<N;A+=3){const D=c.getX(A),P=c.getX(A+1),z=c.getX(A+2);i=xu(this,_,t,n,f,p,m,D,P,z),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(c.count,v.start+v.count);for(let S=x,_=b;S<_;S+=3){const E=c.getX(S),T=c.getX(S+1),A=c.getX(S+2);i=xu(this,l,t,n,f,p,m,E,T,A),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}else if(h!==void 0)if(Array.isArray(l))for(let x=0,b=g.length;x<b;x++){const S=g[x],_=l[S.materialIndex],E=Math.max(S.start,v.start),T=Math.min(h.count,Math.min(S.start+S.count,v.start+v.count));for(let A=E,N=T;A<N;A+=3){const D=A,P=A+1,z=A+2;i=xu(this,_,t,n,f,p,m,D,P,z),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=S.materialIndex,e.push(i))}}else{const x=Math.max(0,v.start),b=Math.min(h.count,v.start+v.count);for(let S=x,_=b;S<_;S+=3){const E=S,T=S+1,A=S+2;i=xu(this,l,t,n,f,p,m,E,T,A),i&&(i.faceIndex=Math.floor(S/3),e.push(i))}}}}function q1(s,t,e,n,i,o,l,c){let h;if(t.side===ti?h=n.intersectTriangle(l,o,i,!0,c):h=n.intersectTriangle(i,o,l,t.side===Ws,c),h===null)return null;yu.copy(c),yu.applyMatrix4(s.matrixWorld);const f=e.ray.origin.distanceTo(yu);return f<e.near||f>e.far?null:{distance:f,point:yu.clone(),object:s}}function xu(s,t,e,n,i,o,l,c,h,f){s.getVertexPosition(c,mu),s.getVertexPosition(h,gu),s.getVertexPosition(f,vu);const p=q1(s,t,e,n,mu,gu,vu,e_);if(p){const m=new I;li.getBarycoord(e_,mu,gu,vu,m),i&&(p.uv=li.getInterpolatedAttribute(i,c,h,f,m,new ut)),o&&(p.uv1=li.getInterpolatedAttribute(o,c,h,f,m,new ut)),l&&(p.normal=li.getInterpolatedAttribute(l,c,h,f,m,new I),p.normal.dot(n.direction)>0&&p.normal.multiplyScalar(-1));const g={a:c,b:h,c:f,normal:new I,materialIndex:0};li.getNormal(mu,gu,vu,g.normal),p.face=g,p.barycoord=m}return p}class br extends ye{constructor(t=1,e=1,n=1,i=1,o=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:o,depthSegments:l};const c=this;i=Math.floor(i),o=Math.floor(o),l=Math.floor(l);const h=[],f=[],p=[],m=[];let g=0,v=0;x("z","y","x",-1,-1,n,e,t,l,o,0),x("z","y","x",1,-1,n,e,-t,l,o,1),x("x","z","y",1,1,t,n,e,i,l,2),x("x","z","y",1,-1,t,n,-e,i,l,3),x("x","y","z",1,-1,t,e,n,i,o,4),x("x","y","z",-1,-1,t,e,-n,i,o,5),this.setIndex(h),this.setAttribute("position",new Zt(f,3)),this.setAttribute("normal",new Zt(p,3)),this.setAttribute("uv",new Zt(m,2));function x(b,S,_,E,T,A,N,D,P,z,C){const w=A/P,F=N/z,$=A/2,W=N/2,J=D/2,rt=P+1,k=z+1;let et=0,q=0;const ct=new I;for(let vt=0;vt<k;vt++){const yt=vt*F-W;for(let Ot=0;Ot<rt;Ot++){const Qt=Ot*w-$;ct[b]=Qt*E,ct[S]=yt*T,ct[_]=J,f.push(ct.x,ct.y,ct.z),ct[b]=0,ct[S]=0,ct[_]=D>0?1:-1,p.push(ct.x,ct.y,ct.z),m.push(Ot/P),m.push(1-vt/z),et+=1}}for(let vt=0;vt<z;vt++)for(let yt=0;yt<P;yt++){const Ot=g+yt+rt*vt,Qt=g+yt+rt*(vt+1),nt=g+(yt+1)+rt*(vt+1),St=g+(yt+1)+rt*vt;h.push(Ot,Qt,St),h.push(Qt,nt,St),q+=6}c.addGroup(v,q,C),v+=q,g+=et}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new br(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Io(s){const t={};for(const e in s){t[e]={};for(const n in s[e]){const i=s[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function Qn(s){const t={};for(let e=0;e<s.length;e++){const n=Io(s[e]);for(const i in n)t[i]=n[i]}return t}function Y1(s){const t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}function Bx(s){const t=s.getRenderTarget();return t===null?s.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:Re.workingColorSpace}const kh={clone:Io,merge:Qn};var Z1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,j1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ai extends qn{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Z1,this.fragmentShader=j1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Io(t.uniforms),this.uniformsGroups=Y1(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?e.uniforms[i]={type:"t",value:l.toJSON(t).uuid}:l&&l.isColor?e.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?e.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?e.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?e.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?e.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?e.uniforms[i]={type:"m4",value:l.toArray()}:e.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class hf extends Le{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new oe,this.projectionMatrix=new oe,this.projectionMatrixInverse=new oe,this.coordinateSystem=Bi}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const ma=new I,n_=new ut,i_=new ut;class ln extends hf{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Lo*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(gr*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Lo*2*Math.atan(Math.tan(gr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){ma.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(ma.x,ma.y).multiplyScalar(-t/ma.z),ma.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(ma.x,ma.y).multiplyScalar(-t/ma.z)}getViewSize(t,e){return this.getViewBounds(t,n_,i_),e.subVectors(i_,n_)}setViewOffset(t,e,n,i,o,l){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(gr*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,o=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const h=l.fullWidth,f=l.fullHeight;o+=l.offsetX*i/h,e-=l.offsetY*n/f,i*=l.width/h,n*=l.height/f}const c=this.filmOffset;c!==0&&(o+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const co=-90,uo=1;class Fx extends Le{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new ln(co,uo,t,e);i.layers=this.layers,this.add(i);const o=new ln(co,uo,t,e);o.layers=this.layers,this.add(o);const l=new ln(co,uo,t,e);l.layers=this.layers,this.add(l);const c=new ln(co,uo,t,e);c.layers=this.layers,this.add(c);const h=new ln(co,uo,t,e);h.layers=this.layers,this.add(h);const f=new ln(co,uo,t,e);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,o,l,c,h]=e;for(const f of e)this.remove(f);if(t===Bi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),o.up.set(0,0,-1),o.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(t===nc)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),o.up.set(0,0,1),o.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const f of e)this.add(f),f.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[o,l,c,h,f,p]=this.children,m=t.getRenderTarget(),g=t.getActiveCubeFace(),v=t.getActiveMipmapLevel(),x=t.xr.enabled;t.xr.enabled=!1;const b=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,o),t.setRenderTarget(n,1,i),t.render(e,l),t.setRenderTarget(n,2,i),t.render(e,c),t.setRenderTarget(n,3,i),t.render(e,h),t.setRenderTarget(n,4,i),t.render(e,f),n.texture.generateMipmaps=b,t.setRenderTarget(n,5,i),t.render(e,p),t.setRenderTarget(m,g,v),t.xr.enabled=x,n.texture.needsPMREMUpdate=!0}}class pc extends rn{constructor(t=[],e=Xs,n,i,o,l,c,h,f,p){super(t,e,n,i,o,l,c,h,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class Hx extends _s{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new pc(i),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new br(5,5,5),o=new Ai({name:"CubemapFromEquirect",uniforms:Io(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:ti,blending:Gs});o.uniforms.tEquirect.value=e;const l=new cn(i,o),c=e.minFilter;return e.minFilter===ps&&(e.minFilter=gn),new Fx(1,10,this).update(t,l),e.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(t,e=!0,n=!0,i=!0){const o=t.getRenderTarget();for(let l=0;l<6;l++)t.setRenderTarget(this,l),t.clear(e,n,i);t.setRenderTarget(o)}}class Eo extends Le{constructor(){super(),this.isGroup=!0,this.type="Group"}}const K1={type:"move"};class ih{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Eo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Eo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Eo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,o=null,l=null;const c=this._targetRay,h=this._grip,f=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(f&&t.hand){l=!0;for(const b of t.hand.values()){const S=e.getJointPose(b,n),_=this._getHandJoint(f,b);S!==null&&(_.matrix.fromArray(S.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=S.radius),_.visible=S!==null}const p=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=p.position.distanceTo(m.position),v=.02,x=.005;f.inputState.pinching&&g>v+x?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!f.inputState.pinching&&g<=v-x&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else h!==null&&t.gripSpace&&(o=e.getPose(t.gripSpace,n),o!==null&&(h.matrix.fromArray(o.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,o.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(o.linearVelocity)):h.hasLinearVelocity=!1,o.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(o.angularVelocity)):h.hasAngularVelocity=!1));c!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&o!==null&&(i=o),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(K1)))}return c!==null&&(c.visible=i!==null),h!==null&&(h.visible=o!==null),f!==null&&(f.visible=l!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new Eo;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class ff{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new Gt(t),this.density=e}clone(){return new ff(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class df{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new Gt(t),this.near=e,this.far=n}clone(){return new df(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Jm extends Le{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ti,this.environmentIntensity=1,this.environmentRotation=new Ti,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class pf{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=ec,this.updateRanges=[],this.version=0,this.uuid=Ei()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,o=this.stride;i<o;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ei()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ei()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Jn=new I;class bi{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Jn.fromBufferAttribute(this,e),Jn.applyMatrix4(t),this.setXYZ(e,Jn.x,Jn.y,Jn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Jn.fromBufferAttribute(this,e),Jn.applyNormalMatrix(t),this.setXYZ(e,Jn.x,Jn.y,Jn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Jn.fromBufferAttribute(this,e),Jn.transformDirection(t),this.setXYZ(e,Jn.x,Jn.y,Jn.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=$n(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=_e(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=_e(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=_e(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=_e(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=_e(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=$n(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=$n(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=$n(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=$n(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array),i=_e(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,o){return t=t*this.data.stride+this.offset,this.normalized&&(e=_e(e,this.array),n=_e(n,this.array),i=_e(i,this.array),o=_e(o,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=o,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return new We(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new bi(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let o=0;o<this.itemSize;o++)e.push(this.data.array[i+o])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Qm extends qn{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Gt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let ho;const Tl=new I,fo=new I,po=new I,mo=new ut,Al=new ut,Vx=new oe,Su=new I,wl=new I,Mu=new I,s_=new ut,bp=new ut,a_=new ut;class Gx extends Le{constructor(t=new Qm){if(super(),this.isSprite=!0,this.type="Sprite",ho===void 0){ho=new ye;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new pf(e,5);ho.setIndex([0,1,2,0,2,3]),ho.setAttribute("position",new bi(n,3,0,!1)),ho.setAttribute("uv",new bi(n,2,3,!1))}this.geometry=ho,this.material=t,this.center=new ut(.5,.5),this.count=1}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),fo.setFromMatrixScale(this.matrixWorld),Vx.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),po.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&fo.multiplyScalar(-po.z);const n=this.material.rotation;let i,o;n!==0&&(o=Math.cos(n),i=Math.sin(n));const l=this.center;bu(Su.set(-.5,-.5,0),po,l,fo,i,o),bu(wl.set(.5,-.5,0),po,l,fo,i,o),bu(Mu.set(.5,.5,0),po,l,fo,i,o),s_.set(0,0),bp.set(1,0),a_.set(1,1);let c=t.ray.intersectTriangle(Su,wl,Mu,!1,Tl);if(c===null&&(bu(wl.set(-.5,.5,0),po,l,fo,i,o),bp.set(0,1),c=t.ray.intersectTriangle(Su,Mu,wl,!1,Tl),c===null))return;const h=t.ray.origin.distanceTo(Tl);h<t.near||h>t.far||e.push({distance:h,point:Tl.clone(),uv:li.getInterpolation(Tl,Su,wl,Mu,s_,bp,a_,new ut),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function bu(s,t,e,n,i,o){mo.subVectors(s,e).addScalar(.5).multiply(n),i!==void 0?(Al.x=o*mo.x-i*mo.y,Al.y=i*mo.x+o*mo.y):Al.copy(mo),s.copy(t),s.x+=Al.x,s.y+=Al.y,s.applyMatrix4(Vx)}const Eu=new I,r_=new I;class kx extends Le{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const o=e[n];this.addLevel(o.object.clone(),o.distance,o.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let o;for(o=0;o<i.length&&!(e<i[o].distance);o++);return i.splice(o,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const i=e.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let o=e[n].distance;if(e[n].object.visible&&(o-=o*e[n].hysteresis),t<o)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){Eu.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(Eu);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){Eu.setFromMatrixPosition(t.matrixWorld),r_.setFromMatrixPosition(this.matrixWorld);const n=Eu.distanceTo(r_)/t.zoom;e[0].object.visible=!0;let i,o;for(i=1,o=e.length;i<o;i++){let l=e[i].distance;if(e[i].object.visible&&(l-=l*e[i].hysteresis),n>=l)e[i-1].object.visible=!1,e[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<o;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,o=n.length;i<o;i++){const l=n[i];e.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return e}}const o_=new I,l_=new Me,c_=new Me,J1=new I,u_=new oe,Tu=new I,Ep=new _n,h_=new oe,Tp=new Mr;class Wx extends cn{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=mm,this.bindMatrix=new oe,this.bindMatrixInverse=new oe,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new vn),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,Tu),this.boundingBox.expandByPoint(Tu)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new _n),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,Tu),this.boundingSphere.expandByPoint(Tu)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ep.copy(this.boundingSphere),Ep.applyMatrix4(i),t.ray.intersectsSphere(Ep)!==!1&&(h_.copy(i).invert(),Tp.copy(t.ray).applyMatrix4(h_),!(this.boundingBox!==null&&Tp.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,Tp)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new Me,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const o=1/t.manhattanLength();o!==1/0?t.multiplyScalar(o):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===mm?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===xx?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;l_.fromBufferAttribute(i.attributes.skinIndex,t),c_.fromBufferAttribute(i.attributes.skinWeight,t),o_.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let o=0;o<4;o++){const l=c_.getComponent(o);if(l!==0){const c=l_.getComponent(o);u_.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),e.addScaledVector(J1.copy(o_).applyMatrix4(u_),l)}}return e.applyMatrix4(this.bindMatrixInverse)}}class $m extends Le{constructor(){super(),this.isBone=!0,this.type="Bone"}}class vs extends rn{constructor(t=null,e=1,n=1,i,o,l,c,h,f=Ln,p=Ln,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const f_=new oe,Q1=new oe;class mf{constructor(t=[],e=[]){this.uuid=Ei(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new oe)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new oe;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let o=0,l=t.length;o<l;o++){const c=t[o]?t[o].matrixWorld:Q1;f_.multiplyMatrices(c,e[o]),f_.toArray(n,o*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new mf(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new vs(e,t,t,Wn,ci);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const o=t.bones[n];let l=e[o];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",o),l=new $m),this.bones.push(l),this.boneInverses.push(new oe().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,o=e.length;i<o;i++){const l=e[i];t.bones.push(l.uuid);const c=n[i];t.boneInverses.push(c.toArray())}return t}}class Oo extends We{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const go=new oe,d_=new oe,Au=[],p_=new vn,$1=new oe,Cl=new cn,Rl=new _n;class Xx extends cn{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Oo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,$1)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new vn),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,go),p_.copy(t.boundingBox).applyMatrix4(go),this.boundingBox.union(p_)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new _n),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,go),Rl.copy(t.boundingSphere).applyMatrix4(go),this.boundingSphere.union(Rl)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,o=n.length+1,l=t*o+1;for(let c=0;c<n.length;c++)n[c]=i[l+c]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(Cl.geometry=this.geometry,Cl.material=this.material,Cl.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Rl.copy(this.boundingSphere),Rl.applyMatrix4(n),t.ray.intersectsSphere(Rl)!==!1))for(let o=0;o<i;o++){this.getMatrixAt(o,go),d_.multiplyMatrices(n,go),Cl.matrixWorld=d_,Cl.raycast(t,Au);for(let l=0,c=Au.length;l<c;l++){const h=Au[l];h.instanceId=o,h.object=this,e.push(h)}Au.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new Oo(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new vs(new Float32Array(i*this.count),i,this.count,af,ci));const o=this.morphTexture.source.data.data;let l=0;for(let f=0;f<n.length;f++)l+=n[f];const c=this.geometry.morphTargetsRelative?1:1-l,h=i*t;o[h]=c,o.set(n,h+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Ap=new I,tT=new I,eT=new me;class Fs{constructor(t=new I(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=Ap.subVectors(n,e).cross(tT.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(Ap),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const o=-(t.start.dot(this.normal)+this.constant)/i;return o<0||o>1?null:e.copy(t.start).addScaledVector(n,o)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||eT.getNormalMatrix(t),i=this.coplanarPoint(Ap).applyMatrix4(t),o=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ka=new _n,nT=new ut(.5,.5),wu=new I;class Go{constructor(t=new Fs,e=new Fs,n=new Fs,i=new Fs,o=new Fs,l=new Fs){this.planes=[t,e,n,i,o,l]}set(t,e,n,i,o,l){const c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(n),c[3].copy(i),c[4].copy(o),c[5].copy(l),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=Bi){const n=this.planes,i=t.elements,o=i[0],l=i[1],c=i[2],h=i[3],f=i[4],p=i[5],m=i[6],g=i[7],v=i[8],x=i[9],b=i[10],S=i[11],_=i[12],E=i[13],T=i[14],A=i[15];if(n[0].setComponents(h-o,g-f,S-v,A-_).normalize(),n[1].setComponents(h+o,g+f,S+v,A+_).normalize(),n[2].setComponents(h+l,g+p,S+x,A+E).normalize(),n[3].setComponents(h-l,g-p,S-x,A-E).normalize(),n[4].setComponents(h-c,g-m,S-b,A-T).normalize(),e===Bi)n[5].setComponents(h+c,g+m,S+b,A+T).normalize();else if(e===nc)n[5].setComponents(c,m,b,T).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Ka.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Ka.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Ka)}intersectsSprite(t){Ka.center.set(0,0,0);const e=nT.distanceTo(t.center);return Ka.radius=.7071067811865476+e,Ka.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ka)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let o=0;o<6;o++)if(e[o].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(wu.x=i.normal.x>0?t.max.x:t.min.x,wu.y=i.normal.y>0?t.max.y:t.min.y,wu.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(wu)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const os=new oe,ls=new Go;class gf{constructor(){this.coordinateSystem=Bi}intersectsObject(t,e){if(!e.isArrayCamera||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(os.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ls.setFromProjectionMatrix(os,this.coordinateSystem),ls.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(os.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ls.setFromProjectionMatrix(os,this.coordinateSystem),ls.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(os.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ls.setFromProjectionMatrix(os,this.coordinateSystem),ls.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(os.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ls.setFromProjectionMatrix(os,this.coordinateSystem),ls.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(os.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),ls.setFromProjectionMatrix(os,this.coordinateSystem),ls.containsPoint(t))return!0}return!1}clone(){return new gf}}function wp(s,t){return s-t}function iT(s,t){return s.z-t.z}function sT(s,t){return t.z-s.z}class aT{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const o=this.pool,l=this.list;this.index>=o.length&&o.push({start:-1,count:-1,z:-1,index:-1});const c=o[this.index];l.push(c),this.index++,c.start=t,c.count=e,c.z=n,c.index=i}reset(){this.list.length=0,this.index=0}}const ai=new oe,rT=new Gt(1,1,1),m_=new Go,oT=new gf,Cu=new vn,Ja=new _n,Dl=new I,g_=new I,lT=new I,Cp=new aT,Gn=new cn,Ru=[];function cT(s,t,e=0){const n=t.itemSize;if(s.isInterleavedBufferAttribute||s.array.constructor!==t.array.constructor){const i=s.count;for(let o=0;o<i;o++)for(let l=0;l<n;l++)t.setComponent(o+e,l,s.getComponent(o,l))}else t.array.set(s.array,e*n);t.needsUpdate=!0}function Qa(s,t){if(s.constructor!==t.constructor){const e=Math.min(s.length,t.length);for(let n=0;n<e;n++)t[n]=s[n]}else{const e=Math.min(s.length,t.length);t.set(new s.constructor(s.buffer,0,e))}}class qx extends cn{constructor(t,e,n=e*2,i){super(new ye,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new vs(e,t,t,Wn,ci);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new vs(e,t,t,dc,qs);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new vs(e,t,t,Wn,ci);n.colorSpace=Re.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const o in t.attributes){const l=t.getAttribute(o),{array:c,itemSize:h,normalized:f}=l,p=new c.constructor(n*h),m=new We(p,h,f);e.setAttribute(o,m)}if(t.getIndex()!==null){const o=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new We(o,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),o=e.getAttribute(n);if(i.itemSize!==o.itemSize||i.normalized!==o.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new vn);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,ai),this.getBoundingBoxAt(o,Cu).applyMatrix4(ai),t.union(Cu)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new _n);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const o=e[n].geometryIndex;this.getMatrixAt(n,ai),this.getBoundingSphereAt(o,Ja).applyMatrix4(ai),t.union(Ja)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(wp),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const o=this._matricesTexture;ai.identity().toArray(o.image.data,i*16),o.needsUpdate=!0;const l=this._colorsTexture;return l&&(rT.toArray(l.image.data,i*4),l.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},o=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const l=t.getIndex();if(l!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?l.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let h;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(wp),h=this._availableGeometryIds.shift(),o[h]=i):(h=this._geometryCount,this._geometryCount++,o.push(i)),this.setGeometryAt(h,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,h}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=n.getIndex()!==null,o=n.getIndex(),l=e.getIndex(),c=this._geometryInfo[t];if(i&&l.count>c.reservedIndexCount||e.attributes.position.count>c.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const h=c.vertexStart,f=c.reservedVertexCount;c.vertexCount=e.getAttribute("position").count;for(const p in n.attributes){const m=e.getAttribute(p),g=n.getAttribute(p);cT(m,g,h);const v=m.itemSize;for(let x=m.count,b=f;x<b;x++){const S=h+x;for(let _=0;_<v;_++)g.setComponent(S,_,0)}g.needsUpdate=!0,g.addUpdateRange(h*v,f*v)}if(i){const p=c.indexStart,m=c.reservedIndexCount;c.indexCount=e.getIndex().count;for(let g=0;g<l.count;g++)o.setX(p+g,h+l.getX(g));for(let g=l.count,v=m;g<v;g++)o.setX(p+g,h);o.needsUpdate=!0,o.addUpdateRange(p,c.reservedIndexCount)}return c.start=i?c.indexStart:c.vertexStart,c.count=i?c.indexCount:c.vertexCount,c.boundingBox=null,e.boundingBox!==null&&(c.boundingBox=e.boundingBox.clone()),c.boundingSphere=null,e.boundingSphere!==null&&(c.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let i=0,o=n.length;i<o;i++)n[i].active&&n[i].geometryIndex===t&&this.deleteInstance(i);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((l,c)=>c).sort((l,c)=>n[l].vertexStart-n[c].vertexStart),o=this.geometry;for(let l=0,c=n.length;l<c;l++){const h=i[l],f=n[h];if(f.active!==!1){if(o.index!==null){if(f.indexStart!==e){const{indexStart:p,vertexStart:m,reservedIndexCount:g}=f,v=o.index,x=v.array,b=t-m;for(let S=p;S<p+g;S++)x[S]=x[S]+b;v.array.copyWithin(e,p,p+g),v.addUpdateRange(e,g),f.indexStart=e}e+=f.reservedIndexCount}if(f.vertexStart!==t){const{vertexStart:p,reservedVertexCount:m}=f,g=o.attributes;for(const v in g){const x=g[v],{array:b,itemSize:S}=x;b.copyWithin(t*S,p*S,(p+m)*S),x.addUpdateRange(t*S,m*S)}f.vertexStart=t}t+=f.reservedVertexCount,f.start=o.index?f.indexStart:f.vertexStart,this._nextIndexStart=o.index?f.indexStart+f.reservedIndexCount:0,this._nextVertexStart=f.vertexStart+f.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingBox===null){const o=new vn,l=n.index,c=n.attributes.position;for(let h=i.start,f=i.start+i.count;h<f;h++){let p=h;l&&(p=l.getX(p)),o.expandByPoint(Dl.fromBufferAttribute(c,p))}i.boundingBox=o}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingSphere===null){const o=new _n;this.getBoundingBoxAt(t,Cu),Cu.getCenter(o.center);const l=n.index,c=n.attributes.position;let h=0;for(let f=i.start,p=i.start+i.count;f<p;f++){let m=f;l&&(m=l.getX(m)),Dl.fromBufferAttribute(c,m),h=Math.max(h,o.center.distanceToSquared(Dl))}o.radius=Math.sqrt(h),i.boundingSphere=o}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(wp);e[e.length-1]===n.length;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const i=new Int32Array(t),o=new Int32Array(t);Qa(this._multiDrawCounts,i),Qa(this._multiDrawStarts,o),this._multiDrawCounts=i,this._multiDrawStarts=o,this._maxInstanceCount=t;const l=this._indirectTexture,c=this._matricesTexture,h=this._colorsTexture;l.dispose(),this._initIndirectTexture(),Qa(l.image.data,this._indirectTexture.image.data),c.dispose(),this._initMatricesTexture(),Qa(c.image.data,this._matricesTexture.image.data),h&&(h.dispose(),this._initColorsTexture(),Qa(h.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(c=>c.active);if(Math.max(...n.map(c=>c.vertexStart+c.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(h=>h.indexStart+h.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const o=this.geometry;o.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new ye,this._initializeGeometry(o));const l=this.geometry;o.index&&Qa(o.index.array,l.index.array);for(const c in o.attributes)Qa(o.attributes[c].array,l.attributes[c].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,o=this.matrixWorld,l=this.geometry;Gn.material=this.material,Gn.geometry.index=l.index,Gn.geometry.attributes=l.attributes,Gn.geometry.boundingBox===null&&(Gn.geometry.boundingBox=new vn),Gn.geometry.boundingSphere===null&&(Gn.geometry.boundingSphere=new _n);for(let c=0,h=n.length;c<h;c++){if(!n[c].visible||!n[c].active)continue;const f=n[c].geometryIndex,p=i[f];Gn.geometry.setDrawRange(p.start,p.count),this.getMatrixAt(c,Gn.matrixWorld).premultiply(o),this.getBoundingBoxAt(f,Gn.geometry.boundingBox),this.getBoundingSphereAt(f,Gn.geometry.boundingSphere),Gn.raycast(t,Ru);for(let m=0,g=Ru.length;m<g;m++){const v=Ru[m];v.object=this,v.batchId=c,e.push(v)}Ru.length=0}Gn.material=null,Gn.geometry.index=null,Gn.geometry.attributes={},Gn.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,i,o){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const l=i.getIndex(),c=l===null?1:l.array.BYTES_PER_ELEMENT,h=this._instanceInfo,f=this._multiDrawStarts,p=this._multiDrawCounts,m=this._geometryInfo,g=this.perObjectFrustumCulled,v=this._indirectTexture,x=v.image.data,b=n.isArrayCamera?oT:m_;g&&!n.isArrayCamera&&(ai.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),m_.setFromProjectionMatrix(ai,t.coordinateSystem));let S=0;if(this.sortObjects){ai.copy(this.matrixWorld).invert(),Dl.setFromMatrixPosition(n.matrixWorld).applyMatrix4(ai),g_.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(ai);for(let T=0,A=h.length;T<A;T++)if(h[T].visible&&h[T].active){const N=h[T].geometryIndex;this.getMatrixAt(T,ai),this.getBoundingSphereAt(N,Ja).applyMatrix4(ai);let D=!1;if(g&&(D=!b.intersectsSphere(Ja,n)),!D){const P=m[N],z=lT.subVectors(Ja.center,Dl).dot(g_);Cp.push(P.start,P.count,z,T)}}const _=Cp.list,E=this.customSort;E===null?_.sort(o.transparent?sT:iT):E.call(this,_,n);for(let T=0,A=_.length;T<A;T++){const N=_[T];f[S]=N.start*c,p[S]=N.count,x[S]=N.index,S++}Cp.reset()}else for(let _=0,E=h.length;_<E;_++)if(h[_].visible&&h[_].active){const T=h[_].geometryIndex;let A=!1;if(g&&(this.getMatrixAt(_,ai),this.getBoundingSphereAt(T,Ja).applyMatrix4(ai),A=!b.intersectsSphere(Ja,n)),!A){const N=m[T];f[S]=N.start*c,p[S]=N.count,x[S]=_,S++}}v.needsUpdate=!0,this._multiDrawCount=S,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,o,l){this.onBeforeRender(t,null,i,o,l)}}class ei extends qn{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Gt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Wh=new I,Xh=new I,v_=new oe,Ul=new Mr,Du=new _n,Rp=new I,__=new I;let ba=class extends Le{constructor(t=new ye,e=new ei){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,o=e.count;i<o;i++)Wh.fromBufferAttribute(e,i-1),Xh.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Wh.distanceTo(Xh);t.setAttribute("lineDistance",new Zt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Du.copy(n.boundingSphere),Du.applyMatrix4(i),Du.radius+=o,t.ray.intersectsSphere(Du)===!1)return;v_.copy(i).invert(),Ul.copy(t.ray).applyMatrix4(v_);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=this.isLineSegments?2:1,p=n.index,g=n.attributes.position;if(p!==null){const v=Math.max(0,l.start),x=Math.min(p.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const _=p.getX(b),E=p.getX(b+1),T=Uu(this,t,Ul,h,_,E,b);T&&e.push(T)}if(this.isLineLoop){const b=p.getX(x-1),S=p.getX(v),_=Uu(this,t,Ul,h,b,S,x-1);_&&e.push(_)}}else{const v=Math.max(0,l.start),x=Math.min(g.count,l.start+l.count);for(let b=v,S=x-1;b<S;b+=f){const _=Uu(this,t,Ul,h,b,b+1,b);_&&e.push(_)}if(this.isLineLoop){const b=Uu(this,t,Ul,h,x-1,v,x-1);b&&e.push(b)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}};function Uu(s,t,e,n,i,o,l){const c=s.geometry.attributes.position;if(Wh.fromBufferAttribute(c,i),Xh.fromBufferAttribute(c,o),e.distanceSqToSegment(Wh,Xh,Rp,__)>n)return;Rp.applyMatrix4(s.matrixWorld);const f=t.ray.origin.distanceTo(Rp);if(!(f<t.near||f>t.far))return{distance:f,point:__.clone().applyMatrix4(s.matrixWorld),index:l,face:null,faceIndex:null,barycoord:null,object:s}}const y_=new I,x_=new I;class xs extends ba{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,o=e.count;i<o;i+=2)y_.fromBufferAttribute(e,i),x_.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+y_.distanceTo(x_);t.setAttribute("lineDistance",new Zt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Yx extends ba{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class tg extends qn{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Gt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const S_=new oe,_m=new Mr,Nu=new _n,Lu=new I;class Zx extends Le{constructor(t=new ye,e=new tg){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,o=t.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Nu.copy(n.boundingSphere),Nu.applyMatrix4(i),Nu.radius+=o,t.ray.intersectsSphere(Nu)===!1)return;S_.copy(i).invert(),_m.copy(t.ray).applyMatrix4(S_);const c=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=c*c,f=n.index,m=n.attributes.position;if(f!==null){const g=Math.max(0,l.start),v=Math.min(f.count,l.start+l.count);for(let x=g,b=v;x<b;x++){const S=f.getX(x);Lu.fromBufferAttribute(m,S),M_(Lu,S,h,i,t,e,this)}}else{const g=Math.max(0,l.start),v=Math.min(m.count,l.start+l.count);for(let x=g,b=v;x<b;x++)Lu.fromBufferAttribute(m,x),M_(Lu,x,h,i,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,l=i.length;o<l;o++){const c=i[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}}function M_(s,t,e,n,i,o,l){const c=_m.distanceSqToPoint(s);if(c<e){const h=new I;_m.closestPointToPoint(s,h),h.applyMatrix4(n);const f=i.ray.origin.distanceTo(h);if(f<i.near||f>i.far)return;o.push({distance:f,distanceToRay:Math.sqrt(c),point:h,index:t,face:null,faceIndex:null,barycoord:null,object:l})}}class jx extends rn{constructor(t,e,n,i,o=gn,l=gn,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isVideoTexture=!0,this.generateMipmaps=!1;const p=this;function m(){p.needsUpdate=!0,t.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class uT extends jx{constructor(t,e,n,i,o,l,c,h){super({},t,e,n,i,o,l,c,h),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class hT extends rn{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=Ln,this.minFilter=Ln,this.generateMipmaps=!1,this.needsUpdate=!0}}class vf extends rn{constructor(t,e,n,i,o,l,c,h,f,p,m,g){super(null,l,c,h,f,p,i,o,m,g),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class fT extends vf{constructor(t,e,n,i,o,l){super(t,e,n,o,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=zi,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class dT extends vf{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,Xs),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class pT extends rn{constructor(t,e,n,i,o,l,c,h,f){super(t,e,n,i,o,l,c,h,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}class eg extends rn{constructor(t,e,n=qs,i,o,l,c=Ln,h=Ln,f,p=Uo,m=1){if(p!==Uo&&p!==No)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const g={width:t,height:e,depth:m};super(g,i,o,l,c,h,p,n,f),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new ya(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class _f extends ye{constructor(t=1,e=1,n=4,i=8,o=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:i,heightSegments:o},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),o=Math.max(1,Math.floor(o));const l=[],c=[],h=[],f=[],p=e/2,m=Math.PI/2*t,g=e,v=2*m+g,x=n*2+o,b=i+1,S=new I,_=new I;for(let E=0;E<=x;E++){let T=0,A=0,N=0,D=0;if(E<=n){const C=E/n,w=C*Math.PI/2;A=-p-t*Math.cos(w),N=t*Math.sin(w),D=-t*Math.cos(w),T=C*m}else if(E<=n+o){const C=(E-n)/o;A=-p+C*e,N=t,D=0,T=m+C*g}else{const C=(E-n-o)/n,w=C*Math.PI/2;A=p+t*Math.sin(w),N=t*Math.cos(w),D=t*Math.sin(w),T=m+g+C*m}const P=Math.max(0,Math.min(1,T/v));let z=0;E===0?z=.5/i:E===x&&(z=-.5/i);for(let C=0;C<=i;C++){const w=C/i,F=w*Math.PI*2,$=Math.sin(F),W=Math.cos(F);_.x=-N*W,_.y=A,_.z=N*$,c.push(_.x,_.y,_.z),S.set(-N*W,D,N*$),S.normalize(),h.push(S.x,S.y,S.z),f.push(w+z,P)}if(E>0){const C=(E-1)*b;for(let w=0;w<i;w++){const F=C+w,$=C+w+1,W=E*b+w,J=E*b+w+1;l.push(F,$,W),l.push($,J,W)}}}this.setIndex(l),this.setAttribute("position",new Zt(c,3)),this.setAttribute("normal",new Zt(h,3)),this.setAttribute("uv",new Zt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new _f(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class yf extends ye{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const o=[],l=[],c=[],h=[],f=new I,p=new ut;l.push(0,0,0),c.push(0,0,1),h.push(.5,.5);for(let m=0,g=3;m<=e;m++,g+=3){const v=n+m/e*i;f.x=t*Math.cos(v),f.y=t*Math.sin(v),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(l[g]/t+1)/2,p.y=(l[g+1]/t+1)/2,h.push(p.x,p.y)}for(let m=1;m<=e;m++)o.push(m,m+1,0);this.setIndex(o),this.setAttribute("position",new Zt(l,3)),this.setAttribute("normal",new Zt(c,3)),this.setAttribute("uv",new Zt(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new yf(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class mc extends ye{constructor(t=1,e=1,n=1,i=32,o=1,l=!1,c=0,h=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:o,openEnded:l,thetaStart:c,thetaLength:h};const f=this;i=Math.floor(i),o=Math.floor(o);const p=[],m=[],g=[],v=[];let x=0;const b=[],S=n/2;let _=0;E(),l===!1&&(t>0&&T(!0),e>0&&T(!1)),this.setIndex(p),this.setAttribute("position",new Zt(m,3)),this.setAttribute("normal",new Zt(g,3)),this.setAttribute("uv",new Zt(v,2));function E(){const A=new I,N=new I;let D=0;const P=(e-t)/n;for(let z=0;z<=o;z++){const C=[],w=z/o,F=w*(e-t)+t;for(let $=0;$<=i;$++){const W=$/i,J=W*h+c,rt=Math.sin(J),k=Math.cos(J);N.x=F*rt,N.y=-w*n+S,N.z=F*k,m.push(N.x,N.y,N.z),A.set(rt,P,k).normalize(),g.push(A.x,A.y,A.z),v.push(W,1-w),C.push(x++)}b.push(C)}for(let z=0;z<i;z++)for(let C=0;C<o;C++){const w=b[C][z],F=b[C+1][z],$=b[C+1][z+1],W=b[C][z+1];(t>0||C!==0)&&(p.push(w,F,W),D+=3),(e>0||C!==o-1)&&(p.push(F,$,W),D+=3)}f.addGroup(_,D,0),_+=D}function T(A){const N=x,D=new ut,P=new I;let z=0;const C=A===!0?t:e,w=A===!0?1:-1;for(let $=1;$<=i;$++)m.push(0,S*w,0),g.push(0,w,0),v.push(.5,.5),x++;const F=x;for(let $=0;$<=i;$++){const J=$/i*h+c,rt=Math.cos(J),k=Math.sin(J);P.x=C*k,P.y=S*w,P.z=C*rt,m.push(P.x,P.y,P.z),g.push(0,w,0),D.x=rt*.5+.5,D.y=k*.5*w+.5,v.push(D.x,D.y),x++}for(let $=0;$<i;$++){const W=N+$,J=F+$;A===!0?p.push(J,J+1,W):p.push(J+1,J,W),z+=3}f.addGroup(_,z,A===!0?1:2),_+=z}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new mc(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class gc extends mc{constructor(t=1,e=1,n=32,i=1,o=!1,l=0,c=Math.PI*2){super(0,t,e,n,i,o,l,c),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:o,thetaStart:l,thetaLength:c}}static fromJSON(t){return new gc(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Aa extends ye{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const o=[],l=[];c(i),f(n),p(),this.setAttribute("position",new Zt(o,3)),this.setAttribute("normal",new Zt(o.slice(),3)),this.setAttribute("uv",new Zt(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(E){const T=new I,A=new I,N=new I;for(let D=0;D<e.length;D+=3)v(e[D+0],T),v(e[D+1],A),v(e[D+2],N),h(T,A,N,E)}function h(E,T,A,N){const D=N+1,P=[];for(let z=0;z<=D;z++){P[z]=[];const C=E.clone().lerp(A,z/D),w=T.clone().lerp(A,z/D),F=D-z;for(let $=0;$<=F;$++)$===0&&z===D?P[z][$]=C:P[z][$]=C.clone().lerp(w,$/F)}for(let z=0;z<D;z++)for(let C=0;C<2*(D-z)-1;C++){const w=Math.floor(C/2);C%2===0?(g(P[z][w+1]),g(P[z+1][w]),g(P[z][w])):(g(P[z][w+1]),g(P[z+1][w+1]),g(P[z+1][w]))}}function f(E){const T=new I;for(let A=0;A<o.length;A+=3)T.x=o[A+0],T.y=o[A+1],T.z=o[A+2],T.normalize().multiplyScalar(E),o[A+0]=T.x,o[A+1]=T.y,o[A+2]=T.z}function p(){const E=new I;for(let T=0;T<o.length;T+=3){E.x=o[T+0],E.y=o[T+1],E.z=o[T+2];const A=S(E)/2/Math.PI+.5,N=_(E)/Math.PI+.5;l.push(A,1-N)}x(),m()}function m(){for(let E=0;E<l.length;E+=6){const T=l[E+0],A=l[E+2],N=l[E+4],D=Math.max(T,A,N),P=Math.min(T,A,N);D>.9&&P<.1&&(T<.2&&(l[E+0]+=1),A<.2&&(l[E+2]+=1),N<.2&&(l[E+4]+=1))}}function g(E){o.push(E.x,E.y,E.z)}function v(E,T){const A=E*3;T.x=t[A+0],T.y=t[A+1],T.z=t[A+2]}function x(){const E=new I,T=new I,A=new I,N=new I,D=new ut,P=new ut,z=new ut;for(let C=0,w=0;C<o.length;C+=9,w+=6){E.set(o[C+0],o[C+1],o[C+2]),T.set(o[C+3],o[C+4],o[C+5]),A.set(o[C+6],o[C+7],o[C+8]),D.set(l[w+0],l[w+1]),P.set(l[w+2],l[w+3]),z.set(l[w+4],l[w+5]),N.copy(E).add(T).add(A).divideScalar(3);const F=S(N);b(D,w+0,E,F),b(P,w+2,T,F),b(z,w+4,A,F)}}function b(E,T,A,N){N<0&&E.x===1&&(l[T]=E.x-1),A.x===0&&A.z===0&&(l[T]=N/2/Math.PI+.5)}function S(E){return Math.atan2(E.z,-E.x)}function _(E){return Math.atan2(-E.y,Math.sqrt(E.x*E.x+E.z*E.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Aa(t.vertices,t.indices,t.radius,t.details)}}class xf extends Aa{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n,o=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(o,l,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new xf(t.radius,t.detail)}}const Pu=new I,Iu=new I,Dp=new I,Ou=new li;class Kx extends ye{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const i=Math.pow(10,4),o=Math.cos(gr*e),l=t.getIndex(),c=t.getAttribute("position"),h=l?l.count:c.count,f=[0,0,0],p=["a","b","c"],m=new Array(3),g={},v=[];for(let x=0;x<h;x+=3){l?(f[0]=l.getX(x),f[1]=l.getX(x+1),f[2]=l.getX(x+2)):(f[0]=x,f[1]=x+1,f[2]=x+2);const{a:b,b:S,c:_}=Ou;if(b.fromBufferAttribute(c,f[0]),S.fromBufferAttribute(c,f[1]),_.fromBufferAttribute(c,f[2]),Ou.getNormal(Dp),m[0]=`${Math.round(b.x*i)},${Math.round(b.y*i)},${Math.round(b.z*i)}`,m[1]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,m[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let E=0;E<3;E++){const T=(E+1)%3,A=m[E],N=m[T],D=Ou[p[E]],P=Ou[p[T]],z=`${A}_${N}`,C=`${N}_${A}`;C in g&&g[C]?(Dp.dot(g[C].normal)<=o&&(v.push(D.x,D.y,D.z),v.push(P.x,P.y,P.z)),g[C]=null):z in g||(g[z]={index0:f[E],index1:f[T],normal:Dp.clone()})}}for(const x in g)if(g[x]){const{index0:b,index1:S}=g[x];Pu.fromBufferAttribute(c,b),Iu.fromBufferAttribute(c,S),v.push(Pu.x,Pu.y,Pu.z),v.push(Iu.x,Iu.y,Iu.z)}this.setAttribute("position",new Zt(v,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class $i{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),o=0;e.push(0);for(let l=1;l<=t;l++)n=this.getPoint(l/t),o+=n.distanceTo(i),e.push(o),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let i=0;const o=n.length;let l;e?l=e:l=t*n[o-1];let c=0,h=o-1,f;for(;c<=h;)if(i=Math.floor(c+(h-c)/2),f=n[i]-l,f<0)c=i+1;else if(f>0)h=i-1;else{h=i;break}if(i=h,n[i]===l)return i/(o-1);const p=n[i],g=n[i+1]-p,v=(l-p)/g;return(i+v)/(o-1)}getTangent(t,e){let i=t-1e-4,o=t+1e-4;i<0&&(i=0),o>1&&(o=1);const l=this.getPoint(i),c=this.getPoint(o),h=e||(l.isVector2?new ut:new I);return h.copy(c).sub(l).normalize(),h}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new I,i=[],o=[],l=[],c=new I,h=new oe;for(let v=0;v<=t;v++){const x=v/t;i[v]=this.getTangentAt(x,new I)}o[0]=new I,l[0]=new I;let f=Number.MAX_VALUE;const p=Math.abs(i[0].x),m=Math.abs(i[0].y),g=Math.abs(i[0].z);p<=f&&(f=p,n.set(1,0,0)),m<=f&&(f=m,n.set(0,1,0)),g<=f&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),o[0].crossVectors(i[0],c),l[0].crossVectors(i[0],o[0]);for(let v=1;v<=t;v++){if(o[v]=o[v-1].clone(),l[v]=l[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const x=Math.acos(pe(i[v-1].dot(i[v]),-1,1));o[v].applyMatrix4(h.makeRotationAxis(c,x))}l[v].crossVectors(i[v],o[v])}if(e===!0){let v=Math.acos(pe(o[0].dot(o[t]),-1,1));v/=t,i[0].dot(c.crossVectors(o[0],o[t]))>0&&(v=-v);for(let x=1;x<=t;x++)o[x].applyMatrix4(h.makeRotationAxis(i[x],v*x)),l[x].crossVectors(i[x],o[x])}return{tangents:i,normals:o,binormals:l}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Sf extends $i{constructor(t=0,e=0,n=1,i=1,o=0,l=Math.PI*2,c=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=o,this.aEndAngle=l,this.aClockwise=c,this.aRotation=h}getPoint(t,e=new ut){const n=e,i=Math.PI*2;let o=this.aEndAngle-this.aStartAngle;const l=Math.abs(o)<Number.EPSILON;for(;o<0;)o+=i;for(;o>i;)o-=i;o<Number.EPSILON&&(l?o=0:o=i),this.aClockwise===!0&&!l&&(o===i?o=-i:o=o-i);const c=this.aStartAngle+t*o;let h=this.aX+this.xRadius*Math.cos(c),f=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const p=Math.cos(this.aRotation),m=Math.sin(this.aRotation),g=h-this.aX,v=f-this.aY;h=g*p-v*m+this.aX,f=g*m+v*p+this.aY}return n.set(h,f)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class Jx extends Sf{constructor(t,e,n,i,o,l){super(t,e,n,n,i,o,l),this.isArcCurve=!0,this.type="ArcCurve"}}function ng(){let s=0,t=0,e=0,n=0;function i(o,l,c,h){s=o,t=c,e=-3*o+3*l-2*c-h,n=2*o-2*l+c+h}return{initCatmullRom:function(o,l,c,h,f){i(l,c,f*(c-o),f*(h-l))},initNonuniformCatmullRom:function(o,l,c,h,f,p,m){let g=(l-o)/f-(c-o)/(f+p)+(c-l)/p,v=(c-l)/p-(h-l)/(p+m)+(h-c)/m;g*=p,v*=p,i(l,c,g,v)},calc:function(o){const l=o*o,c=l*o;return s+t*o+e*l+n*c}}}const zu=new I,Up=new ng,Np=new ng,Lp=new ng;class Qx extends $i{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new I){const n=e,i=this.points,o=i.length,l=(o-(this.closed?0:1))*t;let c=Math.floor(l),h=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/o)+1)*o:h===0&&c===o-1&&(c=o-2,h=1);let f,p;this.closed||c>0?f=i[(c-1)%o]:(zu.subVectors(i[0],i[1]).add(i[0]),f=zu);const m=i[c%o],g=i[(c+1)%o];if(this.closed||c+2<o?p=i[(c+2)%o]:(zu.subVectors(i[o-1],i[o-2]).add(i[o-1]),p=zu),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let x=Math.pow(f.distanceToSquared(m),v),b=Math.pow(m.distanceToSquared(g),v),S=Math.pow(g.distanceToSquared(p),v);b<1e-4&&(b=1),x<1e-4&&(x=b),S<1e-4&&(S=b),Up.initNonuniformCatmullRom(f.x,m.x,g.x,p.x,x,b,S),Np.initNonuniformCatmullRom(f.y,m.y,g.y,p.y,x,b,S),Lp.initNonuniformCatmullRom(f.z,m.z,g.z,p.z,x,b,S)}else this.curveType==="catmullrom"&&(Up.initCatmullRom(f.x,m.x,g.x,p.x,this.tension),Np.initCatmullRom(f.y,m.y,g.y,p.y,this.tension),Lp.initCatmullRom(f.z,m.z,g.z,p.z,this.tension));return n.set(Up.calc(h),Np.calc(h),Lp.calc(h)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new I().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function b_(s,t,e,n,i){const o=(n-t)*.5,l=(i-e)*.5,c=s*s,h=s*c;return(2*e-2*n+o+l)*h+(-3*e+3*n-2*o-l)*c+o*s+e}function mT(s,t){const e=1-s;return e*e*t}function gT(s,t){return 2*(1-s)*s*t}function vT(s,t){return s*s*t}function Xl(s,t,e,n){return mT(s,t)+gT(s,e)+vT(s,n)}function _T(s,t){const e=1-s;return e*e*e*t}function yT(s,t){const e=1-s;return 3*e*e*s*t}function xT(s,t){return 3*(1-s)*s*s*t}function ST(s,t){return s*s*s*t}function ql(s,t,e,n,i){return _T(s,t)+yT(s,e)+xT(s,n)+ST(s,i)}class ig extends $i{constructor(t=new ut,e=new ut,n=new ut,i=new ut){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new ut){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(ql(t,i.x,o.x,l.x,c.x),ql(t,i.y,o.y,l.y,c.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class $x extends $i{constructor(t=new I,e=new I,n=new I,i=new I){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new I){const n=e,i=this.v0,o=this.v1,l=this.v2,c=this.v3;return n.set(ql(t,i.x,o.x,l.x,c.x),ql(t,i.y,o.y,l.y,c.y),ql(t,i.z,o.z,l.z,c.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class sg extends $i{constructor(t=new ut,e=new ut){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new ut){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new ut){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class tS extends $i{constructor(t=new I,e=new I){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new I){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new I){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ag extends $i{constructor(t=new ut,e=new ut,n=new ut){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ut){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Xl(t,i.x,o.x,l.x),Xl(t,i.y,o.y,l.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class rg extends $i{constructor(t=new I,e=new I,n=new I){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new I){const n=e,i=this.v0,o=this.v1,l=this.v2;return n.set(Xl(t,i.x,o.x,l.x),Xl(t,i.y,o.y,l.y),Xl(t,i.z,o.z,l.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class og extends $i{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new ut){const n=e,i=this.points,o=(i.length-1)*t,l=Math.floor(o),c=o-l,h=i[l===0?l:l-1],f=i[l],p=i[l>i.length-2?i.length-1:l+1],m=i[l>i.length-3?i.length-1:l+2];return n.set(b_(c,h.x,f.x,p.x,m.x),b_(c,h.y,f.y,p.y,m.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new ut().fromArray(i))}return this}}var qh=Object.freeze({__proto__:null,ArcCurve:Jx,CatmullRomCurve3:Qx,CubicBezierCurve:ig,CubicBezierCurve3:$x,EllipseCurve:Sf,LineCurve:sg,LineCurve3:tS,QuadraticBezierCurve:ag,QuadraticBezierCurve3:rg,SplineCurve:og});class eS extends $i{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new qh[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let o=0;for(;o<i.length;){if(i[o]>=n){const l=i[o]-n,c=this.curves[o],h=c.getLength(),f=h===0?0:1-l/h;return c.getPointAt(f,e)}o++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,o=this.curves;i<o.length;i++){const l=o[i],c=l.isEllipseCurve?t*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?t*l.points.length:t,h=l.getPoints(c);for(let f=0;f<h.length;f++){const p=h[f];n&&n.equals(p)||(e.push(p),n=p)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new qh[i.type]().fromJSON(i))}return this}}class Yh extends eS{constructor(t){super(),this.type="Path",this.currentPoint=new ut,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new sg(this.currentPoint.clone(),new ut(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const o=new ag(this.currentPoint.clone(),new ut(t,e),new ut(n,i));return this.curves.push(o),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,o,l){const c=new ig(this.currentPoint.clone(),new ut(t,e),new ut(n,i),new ut(o,l));return this.curves.push(c),this.currentPoint.set(o,l),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new og(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+c,e+h,n,i,o,l),this}absarc(t,e,n,i,o,l){return this.absellipse(t,e,n,n,i,o,l),this}ellipse(t,e,n,i,o,l,c,h){const f=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(t+f,e+p,n,i,o,l,c,h),this}absellipse(t,e,n,i,o,l,c,h){const f=new Sf(t,e,n,i,o,l,c,h);if(this.curves.length>0){const m=f.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(f);const p=f.getPoint(1);return this.currentPoint.copy(p),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class vr extends Yh{constructor(t){super(t),this.uuid=Ei(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Yh().fromJSON(i))}return this}}function MT(s,t,e=2){const n=t&&t.length,i=n?t[0]*e:s.length;let o=nS(s,0,i,e,!0);const l=[];if(!o||o.next===o.prev)return l;let c,h,f;if(n&&(o=wT(s,t,o,e)),s.length>80*e){c=1/0,h=1/0;let p=-1/0,m=-1/0;for(let g=e;g<i;g+=e){const v=s[g],x=s[g+1];v<c&&(c=v),x<h&&(h=x),v>p&&(p=v),x>m&&(m=x)}f=Math.max(p-c,m-h),f=f!==0?32767/f:0}return sc(o,l,e,c,h,f,0),l}function nS(s,t,e,n,i){let o;if(i===BT(s,t,e,n)>0)for(let l=t;l<e;l+=n)o=E_(l/n|0,s[l],s[l+1],o);else for(let l=e-n;l>=t;l-=n)o=E_(l/n|0,s[l],s[l+1],o);return o&&zo(o,o.next)&&(rc(o),o=o.next),o}function xr(s,t){if(!s)return s;t||(t=s);let e=s,n;do if(n=!1,!e.steiner&&(zo(e,e.next)||tn(e.prev,e,e.next)===0)){if(rc(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function sc(s,t,e,n,i,o,l){if(!s)return;!l&&o&&NT(s,n,i,o);let c=s;for(;s.prev!==s.next;){const h=s.prev,f=s.next;if(o?ET(s,n,i,o):bT(s)){t.push(h.i,s.i,f.i),rc(s),s=f.next,c=f.next;continue}if(s=f,s===c){l?l===1?(s=TT(xr(s),t),sc(s,t,e,n,i,o,2)):l===2&&AT(s,t,e,n,i,o):sc(xr(s),t,e,n,i,o,1);break}}}function bT(s){const t=s.prev,e=s,n=s.next;if(tn(t,e,n)>=0)return!1;const i=t.x,o=e.x,l=n.x,c=t.y,h=e.y,f=n.y,p=Math.min(i,o,l),m=Math.min(c,h,f),g=Math.max(i,o,l),v=Math.max(c,h,f);let x=n.next;for(;x!==t;){if(x.x>=p&&x.x<=g&&x.y>=m&&x.y<=v&&Il(i,c,o,h,l,f,x.x,x.y)&&tn(x.prev,x,x.next)>=0)return!1;x=x.next}return!0}function ET(s,t,e,n){const i=s.prev,o=s,l=s.next;if(tn(i,o,l)>=0)return!1;const c=i.x,h=o.x,f=l.x,p=i.y,m=o.y,g=l.y,v=Math.min(c,h,f),x=Math.min(p,m,g),b=Math.max(c,h,f),S=Math.max(p,m,g),_=ym(v,x,t,e,n),E=ym(b,S,t,e,n);let T=s.prevZ,A=s.nextZ;for(;T&&T.z>=_&&A&&A.z<=E;){if(T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Il(c,p,h,m,f,g,T.x,T.y)&&tn(T.prev,T,T.next)>=0||(T=T.prevZ,A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Il(c,p,h,m,f,g,A.x,A.y)&&tn(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;T&&T.z>=_;){if(T.x>=v&&T.x<=b&&T.y>=x&&T.y<=S&&T!==i&&T!==l&&Il(c,p,h,m,f,g,T.x,T.y)&&tn(T.prev,T,T.next)>=0)return!1;T=T.prevZ}for(;A&&A.z<=E;){if(A.x>=v&&A.x<=b&&A.y>=x&&A.y<=S&&A!==i&&A!==l&&Il(c,p,h,m,f,g,A.x,A.y)&&tn(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function TT(s,t){let e=s;do{const n=e.prev,i=e.next.next;!zo(n,i)&&sS(n,e,e.next,i)&&ac(n,i)&&ac(i,n)&&(t.push(n.i,e.i,i.i),rc(e),rc(e.next),e=s=i),e=e.next}while(e!==s);return xr(e)}function AT(s,t,e,n,i,o){let l=s;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&IT(l,c)){let h=aS(l,c);l=xr(l,l.next),h=xr(h,h.next),sc(l,t,e,n,i,o,0),sc(h,t,e,n,i,o,0);return}c=c.next}l=l.next}while(l!==s)}function wT(s,t,e,n){const i=[];for(let o=0,l=t.length;o<l;o++){const c=t[o]*n,h=o<l-1?t[o+1]*n:s.length,f=nS(s,c,h,n,!1);f===f.next&&(f.steiner=!0),i.push(PT(f))}i.sort(CT);for(let o=0;o<i.length;o++)e=RT(i[o],e);return e}function CT(s,t){let e=s.x-t.x;if(e===0&&(e=s.y-t.y,e===0)){const n=(s.next.y-s.y)/(s.next.x-s.x),i=(t.next.y-t.y)/(t.next.x-t.x);e=n-i}return e}function RT(s,t){const e=DT(s,t);if(!e)return t;const n=aS(e,s);return xr(n,n.next),xr(e,e.next)}function DT(s,t){let e=t;const n=s.x,i=s.y;let o=-1/0,l;if(zo(s,e))return e;do{if(zo(s,e.next))return e.next;if(i<=e.y&&i>=e.next.y&&e.next.y!==e.y){const m=e.x+(i-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(m<=n&&m>o&&(o=m,l=e.x<e.next.x?e:e.next,m===n))return l}e=e.next}while(e!==t);if(!l)return null;const c=l,h=l.x,f=l.y;let p=1/0;e=l;do{if(n>=e.x&&e.x>=h&&n!==e.x&&iS(i<f?n:o,i,h,f,i<f?o:n,i,e.x,e.y)){const m=Math.abs(i-e.y)/(n-e.x);ac(e,s)&&(m<p||m===p&&(e.x>l.x||e.x===l.x&&UT(l,e)))&&(l=e,p=m)}e=e.next}while(e!==c);return l}function UT(s,t){return tn(s.prev,s,t.prev)<0&&tn(t.next,s,s.next)<0}function NT(s,t,e,n){let i=s;do i.z===0&&(i.z=ym(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,LT(i)}function LT(s){let t,e=1;do{let n=s,i;s=null;let o=null;for(t=0;n;){t++;let l=n,c=0;for(let f=0;f<e&&(c++,l=l.nextZ,!!l);f++);let h=e;for(;c>0||h>0&&l;)c!==0&&(h===0||!l||n.z<=l.z)?(i=n,n=n.nextZ,c--):(i=l,l=l.nextZ,h--),o?o.nextZ=i:s=i,i.prevZ=o,o=i;n=l}o.nextZ=null,e*=2}while(t>1);return s}function ym(s,t,e,n,i){return s=(s-e)*i|0,t=(t-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,s|t<<1}function PT(s){let t=s,e=s;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==s);return e}function iS(s,t,e,n,i,o,l,c){return(i-l)*(t-c)>=(s-l)*(o-c)&&(s-l)*(n-c)>=(e-l)*(t-c)&&(e-l)*(o-c)>=(i-l)*(n-c)}function Il(s,t,e,n,i,o,l,c){return!(s===l&&t===c)&&iS(s,t,e,n,i,o,l,c)}function IT(s,t){return s.next.i!==t.i&&s.prev.i!==t.i&&!OT(s,t)&&(ac(s,t)&&ac(t,s)&&zT(s,t)&&(tn(s.prev,s,t.prev)||tn(s,t.prev,t))||zo(s,t)&&tn(s.prev,s,s.next)>0&&tn(t.prev,t,t.next)>0)}function tn(s,t,e){return(t.y-s.y)*(e.x-t.x)-(t.x-s.x)*(e.y-t.y)}function zo(s,t){return s.x===t.x&&s.y===t.y}function sS(s,t,e,n){const i=Fu(tn(s,t,e)),o=Fu(tn(s,t,n)),l=Fu(tn(e,n,s)),c=Fu(tn(e,n,t));return!!(i!==o&&l!==c||i===0&&Bu(s,e,t)||o===0&&Bu(s,n,t)||l===0&&Bu(e,s,n)||c===0&&Bu(e,t,n))}function Bu(s,t,e){return t.x<=Math.max(s.x,e.x)&&t.x>=Math.min(s.x,e.x)&&t.y<=Math.max(s.y,e.y)&&t.y>=Math.min(s.y,e.y)}function Fu(s){return s>0?1:s<0?-1:0}function OT(s,t){let e=s;do{if(e.i!==s.i&&e.next.i!==s.i&&e.i!==t.i&&e.next.i!==t.i&&sS(e,e.next,s,t))return!0;e=e.next}while(e!==s);return!1}function ac(s,t){return tn(s.prev,s,s.next)<0?tn(s,t,s.next)>=0&&tn(s,s.prev,t)>=0:tn(s,t,s.prev)<0||tn(s,s.next,t)<0}function zT(s,t){let e=s,n=!1;const i=(s.x+t.x)/2,o=(s.y+t.y)/2;do e.y>o!=e.next.y>o&&e.next.y!==e.y&&i<(e.next.x-e.x)*(o-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==s);return n}function aS(s,t){const e=xm(s.i,s.x,s.y),n=xm(t.i,t.x,t.y),i=s.next,o=t.prev;return s.next=t,t.prev=s,e.next=i,i.prev=e,n.next=e,e.prev=n,o.next=n,n.prev=o,n}function E_(s,t,e,n){const i=xm(s,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function rc(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function xm(s,t,e){return{i:s,x:t,y:e,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function BT(s,t,e,n){let i=0;for(let o=t,l=e-n;o<e;o+=n)i+=(s[l]-s[o])*(s[o+1]+s[l+1]),l=o;return i}class FT{static triangulate(t,e,n=2){return MT(t,e,n)}}class Qi{static area(t){const e=t.length;let n=0;for(let i=e-1,o=0;o<e;i=o++)n+=t[i].x*t[o].y-t[o].x*t[i].y;return n*.5}static isClockWise(t){return Qi.area(t)<0}static triangulateShape(t,e){const n=[],i=[],o=[];T_(t),A_(n,t);let l=t.length;e.forEach(T_);for(let h=0;h<e.length;h++)i.push(l),l+=e[h].length,A_(n,e[h]);const c=FT.triangulate(n,i);for(let h=0;h<c.length;h+=3)o.push(c.slice(h,h+3));return o}}function T_(s){const t=s.length;t>2&&s[t-1].equals(s[0])&&s.pop()}function A_(s,t){for(let e=0;e<t.length;e++)s.push(t[e].x),s.push(t[e].y)}class Mf extends ye{constructor(t=new vr([new ut(.5,.5),new ut(-.5,.5),new ut(-.5,-.5),new ut(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],o=[];for(let c=0,h=t.length;c<h;c++){const f=t[c];l(f)}this.setAttribute("position",new Zt(i,3)),this.setAttribute("uv",new Zt(o,2)),this.computeVertexNormals();function l(c){const h=[],f=e.curveSegments!==void 0?e.curveSegments:12,p=e.steps!==void 0?e.steps:1,m=e.depth!==void 0?e.depth:1;let g=e.bevelEnabled!==void 0?e.bevelEnabled:!0,v=e.bevelThickness!==void 0?e.bevelThickness:.2,x=e.bevelSize!==void 0?e.bevelSize:v-.1,b=e.bevelOffset!==void 0?e.bevelOffset:0,S=e.bevelSegments!==void 0?e.bevelSegments:3;const _=e.extrudePath,E=e.UVGenerator!==void 0?e.UVGenerator:HT;let T,A=!1,N,D,P,z;_&&(T=_.getSpacedPoints(p),A=!0,g=!1,N=_.computeFrenetFrames(p,!1),D=new I,P=new I,z=new I),g||(S=0,v=0,x=0,b=0);const C=c.extractPoints(f);let w=C.shape;const F=C.holes;if(!Qi.isClockWise(w)){w=w.reverse();for(let O=0,Ct=F.length;O<Ct;O++){const xt=F[O];Qi.isClockWise(xt)&&(F[O]=xt.reverse())}}function W(O){const xt=10000000000000001e-36;let At=O[0];for(let ht=1;ht<=O.length;ht++){const Ht=ht%O.length,_t=O[Ht],Bt=_t.x-At.x,ce=_t.y-At.y,B=Bt*Bt+ce*ce,R=Math.max(Math.abs(_t.x),Math.abs(_t.y),Math.abs(At.x),Math.abs(At.y)),K=xt*R*R;if(B<=K){O.splice(Ht,1),ht--;continue}At=_t}}W(w),F.forEach(W);const J=F.length,rt=w;for(let O=0;O<J;O++){const Ct=F[O];w=w.concat(Ct)}function k(O,Ct,xt){return Ct||console.error("THREE.ExtrudeGeometry: vec does not exist"),O.clone().addScaledVector(Ct,xt)}const et=w.length;function q(O,Ct,xt){let At,ht,Ht;const _t=O.x-Ct.x,Bt=O.y-Ct.y,ce=xt.x-O.x,B=xt.y-O.y,R=_t*_t+Bt*Bt,K=_t*B-Bt*ce;if(Math.abs(K)>Number.EPSILON){const ot=Math.sqrt(R),pt=Math.sqrt(ce*ce+B*B),lt=Ct.x-Bt/ot,Jt=Ct.y+_t/ot,Dt=xt.x-B/pt,Xt=xt.y+ce/pt,jt=((Dt-lt)*B-(Xt-Jt)*ce)/(_t*B-Bt*ce);At=lt+_t*jt-O.x,ht=Jt+Bt*jt-O.y;const mt=At*At+ht*ht;if(mt<=2)return new ut(At,ht);Ht=Math.sqrt(mt/2)}else{let ot=!1;_t>Number.EPSILON?ce>Number.EPSILON&&(ot=!0):_t<-Number.EPSILON?ce<-Number.EPSILON&&(ot=!0):Math.sign(Bt)===Math.sign(B)&&(ot=!0),ot?(At=-Bt,ht=_t,Ht=Math.sqrt(R)):(At=_t,ht=Bt,Ht=Math.sqrt(R/2))}return new ut(At/Ht,ht/Ht)}const ct=[];for(let O=0,Ct=rt.length,xt=Ct-1,At=O+1;O<Ct;O++,xt++,At++)xt===Ct&&(xt=0),At===Ct&&(At=0),ct[O]=q(rt[O],rt[xt],rt[At]);const vt=[];let yt,Ot=ct.concat();for(let O=0,Ct=J;O<Ct;O++){const xt=F[O];yt=[];for(let At=0,ht=xt.length,Ht=ht-1,_t=At+1;At<ht;At++,Ht++,_t++)Ht===ht&&(Ht=0),_t===ht&&(_t=0),yt[At]=q(xt[At],xt[Ht],xt[_t]);vt.push(yt),Ot=Ot.concat(yt)}let Qt;if(S===0)Qt=Qi.triangulateShape(rt,F);else{const O=[],Ct=[];for(let xt=0;xt<S;xt++){const At=xt/S,ht=v*Math.cos(At*Math.PI/2),Ht=x*Math.sin(At*Math.PI/2)+b;for(let _t=0,Bt=rt.length;_t<Bt;_t++){const ce=k(rt[_t],ct[_t],Ht);fe(ce.x,ce.y,-ht),At===0&&O.push(ce)}for(let _t=0,Bt=J;_t<Bt;_t++){const ce=F[_t];yt=vt[_t];const B=[];for(let R=0,K=ce.length;R<K;R++){const ot=k(ce[R],yt[R],Ht);fe(ot.x,ot.y,-ht),At===0&&B.push(ot)}At===0&&Ct.push(B)}}Qt=Qi.triangulateShape(O,Ct)}const nt=Qt.length,St=x+b;for(let O=0;O<et;O++){const Ct=g?k(w[O],Ot[O],St):w[O];A?(P.copy(N.normals[0]).multiplyScalar(Ct.x),D.copy(N.binormals[0]).multiplyScalar(Ct.y),z.copy(T[0]).add(P).add(D),fe(z.x,z.y,z.z)):fe(Ct.x,Ct.y,0)}for(let O=1;O<=p;O++)for(let Ct=0;Ct<et;Ct++){const xt=g?k(w[Ct],Ot[Ct],St):w[Ct];A?(P.copy(N.normals[O]).multiplyScalar(xt.x),D.copy(N.binormals[O]).multiplyScalar(xt.y),z.copy(T[O]).add(P).add(D),fe(z.x,z.y,z.z)):fe(xt.x,xt.y,m/p*O)}for(let O=S-1;O>=0;O--){const Ct=O/S,xt=v*Math.cos(Ct*Math.PI/2),At=x*Math.sin(Ct*Math.PI/2)+b;for(let ht=0,Ht=rt.length;ht<Ht;ht++){const _t=k(rt[ht],ct[ht],At);fe(_t.x,_t.y,m+xt)}for(let ht=0,Ht=F.length;ht<Ht;ht++){const _t=F[ht];yt=vt[ht];for(let Bt=0,ce=_t.length;Bt<ce;Bt++){const B=k(_t[Bt],yt[Bt],At);A?fe(B.x,B.y+T[p-1].y,T[p-1].x+xt):fe(B.x,B.y,m+xt)}}}qt(),Ut();function qt(){const O=i.length/3;if(g){let Ct=0,xt=et*Ct;for(let At=0;At<nt;At++){const ht=Qt[At];ee(ht[2]+xt,ht[1]+xt,ht[0]+xt)}Ct=p+S*2,xt=et*Ct;for(let At=0;At<nt;At++){const ht=Qt[At];ee(ht[0]+xt,ht[1]+xt,ht[2]+xt)}}else{for(let Ct=0;Ct<nt;Ct++){const xt=Qt[Ct];ee(xt[2],xt[1],xt[0])}for(let Ct=0;Ct<nt;Ct++){const xt=Qt[Ct];ee(xt[0]+et*p,xt[1]+et*p,xt[2]+et*p)}}n.addGroup(O,i.length/3-O,0)}function Ut(){const O=i.length/3;let Ct=0;Yt(rt,Ct),Ct+=rt.length;for(let xt=0,At=F.length;xt<At;xt++){const ht=F[xt];Yt(ht,Ct),Ct+=ht.length}n.addGroup(O,i.length/3-O,1)}function Yt(O,Ct){let xt=O.length;for(;--xt>=0;){const At=xt;let ht=xt-1;ht<0&&(ht=O.length-1);for(let Ht=0,_t=p+S*2;Ht<_t;Ht++){const Bt=et*Ht,ce=et*(Ht+1),B=Ct+At+Bt,R=Ct+ht+Bt,K=Ct+ht+ce,ot=Ct+At+ce;Ue(B,R,K,ot)}}}function fe(O,Ct,xt){h.push(O),h.push(Ct),h.push(xt)}function ee(O,Ct,xt){ge(O),ge(Ct),ge(xt);const At=i.length/3,ht=E.generateTopUV(n,i,At-3,At-2,At-1);re(ht[0]),re(ht[1]),re(ht[2])}function Ue(O,Ct,xt,At){ge(O),ge(Ct),ge(At),ge(Ct),ge(xt),ge(At);const ht=i.length/3,Ht=E.generateSideWallUV(n,i,ht-6,ht-3,ht-2,ht-1);re(Ht[0]),re(Ht[1]),re(Ht[3]),re(Ht[1]),re(Ht[2]),re(Ht[3])}function ge(O){i.push(h[O*3+0]),i.push(h[O*3+1]),i.push(h[O*3+2])}function re(O){o.push(O.x),o.push(O.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return VT(e,n,t)}static fromJSON(t,e){const n=[];for(let o=0,l=t.shapes.length;o<l;o++){const c=e[t.shapes[o]];n.push(c)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new qh[i.type]().fromJSON(i)),new Mf(n,t.options)}}const HT={generateTopUV:function(s,t,e,n,i){const o=t[e*3],l=t[e*3+1],c=t[n*3],h=t[n*3+1],f=t[i*3],p=t[i*3+1];return[new ut(o,l),new ut(c,h),new ut(f,p)]},generateSideWallUV:function(s,t,e,n,i,o){const l=t[e*3],c=t[e*3+1],h=t[e*3+2],f=t[n*3],p=t[n*3+1],m=t[n*3+2],g=t[i*3],v=t[i*3+1],x=t[i*3+2],b=t[o*3],S=t[o*3+1],_=t[o*3+2];return Math.abs(c-p)<Math.abs(l-f)?[new ut(l,1-h),new ut(f,1-m),new ut(g,1-x),new ut(b,1-_)]:[new ut(c,1-h),new ut(p,1-m),new ut(v,1-x),new ut(S,1-_)]}};function VT(s,t,e){if(e.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const o=s[n];e.shapes.push(o.uuid)}else e.shapes.push(s.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class bf extends Aa{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],o=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,o,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new bf(t.radius,t.detail)}}class Ef extends ye{constructor(t=[new ut(0,-.5),new ut(.5,0),new ut(0,.5)],e=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=pe(i,0,Math.PI*2);const o=[],l=[],c=[],h=[],f=[],p=1/e,m=new I,g=new ut,v=new I,x=new I,b=new I;let S=0,_=0;for(let E=0;E<=t.length-1;E++)switch(E){case 0:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,b.copy(v),v.normalize(),h.push(v.x,v.y,v.z);break;case t.length-1:h.push(b.x,b.y,b.z);break;default:S=t[E+1].x-t[E].x,_=t[E+1].y-t[E].y,v.x=_*1,v.y=-S,v.z=_*0,x.copy(v),v.x+=b.x,v.y+=b.y,v.z+=b.z,v.normalize(),h.push(v.x,v.y,v.z),b.copy(x)}for(let E=0;E<=e;E++){const T=n+E*p*i,A=Math.sin(T),N=Math.cos(T);for(let D=0;D<=t.length-1;D++){m.x=t[D].x*A,m.y=t[D].y,m.z=t[D].x*N,l.push(m.x,m.y,m.z),g.x=E/e,g.y=D/(t.length-1),c.push(g.x,g.y);const P=h[3*D+0]*A,z=h[3*D+1],C=h[3*D+0]*N;f.push(P,z,C)}}for(let E=0;E<e;E++)for(let T=0;T<t.length-1;T++){const A=T+E*t.length,N=A,D=A+t.length,P=A+t.length+1,z=A+1;o.push(N,D,z),o.push(P,z,D)}this.setIndex(o),this.setAttribute("position",new Zt(l,3)),this.setAttribute("uv",new Zt(c,2)),this.setAttribute("normal",new Zt(f,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ef(t.points,t.segments,t.phiStart,t.phiLength)}}class vc extends Aa{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new vc(t.radius,t.detail)}}class ko extends ye{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const o=t/2,l=e/2,c=Math.floor(n),h=Math.floor(i),f=c+1,p=h+1,m=t/c,g=e/h,v=[],x=[],b=[],S=[];for(let _=0;_<p;_++){const E=_*g-l;for(let T=0;T<f;T++){const A=T*m-o;x.push(A,-E,0),b.push(0,0,1),S.push(T/c),S.push(1-_/h)}}for(let _=0;_<h;_++)for(let E=0;E<c;E++){const T=E+f*_,A=E+f*(_+1),N=E+1+f*(_+1),D=E+1+f*_;v.push(T,A,D),v.push(A,N,D)}this.setIndex(v),this.setAttribute("position",new Zt(x,3)),this.setAttribute("normal",new Zt(b,3)),this.setAttribute("uv",new Zt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ko(t.width,t.height,t.widthSegments,t.heightSegments)}}class Tf extends ye{constructor(t=.5,e=1,n=32,i=1,o=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:o,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],h=[],f=[],p=[];let m=t;const g=(e-t)/i,v=new I,x=new ut;for(let b=0;b<=i;b++){for(let S=0;S<=n;S++){const _=o+S/n*l;v.x=m*Math.cos(_),v.y=m*Math.sin(_),h.push(v.x,v.y,v.z),f.push(0,0,1),x.x=(v.x/e+1)/2,x.y=(v.y/e+1)/2,p.push(x.x,x.y)}m+=g}for(let b=0;b<i;b++){const S=b*(n+1);for(let _=0;_<n;_++){const E=_+S,T=E,A=E+n+1,N=E+n+2,D=E+1;c.push(T,A,D),c.push(A,N,D)}}this.setIndex(c),this.setAttribute("position",new Zt(h,3)),this.setAttribute("normal",new Zt(f,3)),this.setAttribute("uv",new Zt(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Tf(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Af extends ye{constructor(t=new vr([new ut(0,.5),new ut(-.5,-.5),new ut(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],o=[],l=[];let c=0,h=0;if(Array.isArray(t)===!1)f(t);else for(let p=0;p<t.length;p++)f(t[p]),this.addGroup(c,h,p),c+=h,h=0;this.setIndex(n),this.setAttribute("position",new Zt(i,3)),this.setAttribute("normal",new Zt(o,3)),this.setAttribute("uv",new Zt(l,2));function f(p){const m=i.length/3,g=p.extractPoints(e);let v=g.shape;const x=g.holes;Qi.isClockWise(v)===!1&&(v=v.reverse());for(let S=0,_=x.length;S<_;S++){const E=x[S];Qi.isClockWise(E)===!0&&(x[S]=E.reverse())}const b=Qi.triangulateShape(v,x);for(let S=0,_=x.length;S<_;S++){const E=x[S];v=v.concat(E)}for(let S=0,_=v.length;S<_;S++){const E=v[S];i.push(E.x,E.y,0),o.push(0,0,1),l.push(E.x,E.y)}for(let S=0,_=b.length;S<_;S++){const E=b[S],T=E[0]+m,A=E[1]+m,N=E[2]+m;n.push(T,A,N),h+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return GT(e,t)}static fromJSON(t,e){const n=[];for(let i=0,o=t.shapes.length;i<o;i++){const l=e[t.shapes[i]];n.push(l)}return new Af(n,t.curveSegments)}}function GT(s,t){if(t.shapes=[],Array.isArray(s))for(let e=0,n=s.length;e<n;e++){const i=s[e];t.shapes.push(i.uuid)}else t.shapes.push(s.uuid);return t}class _c extends ye{constructor(t=1,e=32,n=16,i=0,o=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:o,thetaStart:l,thetaLength:c},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const h=Math.min(l+c,Math.PI);let f=0;const p=[],m=new I,g=new I,v=[],x=[],b=[],S=[];for(let _=0;_<=n;_++){const E=[],T=_/n;let A=0;_===0&&l===0?A=.5/e:_===n&&h===Math.PI&&(A=-.5/e);for(let N=0;N<=e;N++){const D=N/e;m.x=-t*Math.cos(i+D*o)*Math.sin(l+T*c),m.y=t*Math.cos(l+T*c),m.z=t*Math.sin(i+D*o)*Math.sin(l+T*c),x.push(m.x,m.y,m.z),g.copy(m).normalize(),b.push(g.x,g.y,g.z),S.push(D+A,1-T),E.push(f++)}p.push(E)}for(let _=0;_<n;_++)for(let E=0;E<e;E++){const T=p[_][E+1],A=p[_][E],N=p[_+1][E],D=p[_+1][E+1];(_!==0||l>0)&&v.push(T,A,D),(_!==n-1||h<Math.PI)&&v.push(A,N,D)}this.setIndex(v),this.setAttribute("position",new Zt(x,3)),this.setAttribute("normal",new Zt(b,3)),this.setAttribute("uv",new Zt(S,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new _c(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class wf extends Aa{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new wf(t.radius,t.detail)}}class Cf extends ye{constructor(t=1,e=.4,n=12,i=48,o=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:o},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],h=[],f=[],p=new I,m=new I,g=new I;for(let v=0;v<=n;v++)for(let x=0;x<=i;x++){const b=x/i*o,S=v/n*Math.PI*2;m.x=(t+e*Math.cos(S))*Math.cos(b),m.y=(t+e*Math.cos(S))*Math.sin(b),m.z=e*Math.sin(S),c.push(m.x,m.y,m.z),p.x=t*Math.cos(b),p.y=t*Math.sin(b),g.subVectors(m,p).normalize(),h.push(g.x,g.y,g.z),f.push(x/i),f.push(v/n)}for(let v=1;v<=n;v++)for(let x=1;x<=i;x++){const b=(i+1)*v+x-1,S=(i+1)*(v-1)+x-1,_=(i+1)*(v-1)+x,E=(i+1)*v+x;l.push(b,S,E),l.push(S,_,E)}this.setIndex(l),this.setAttribute("position",new Zt(c,3)),this.setAttribute("normal",new Zt(h,3)),this.setAttribute("uv",new Zt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Cf(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Rf extends ye{constructor(t=1,e=.4,n=64,i=8,o=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:o,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],h=[],f=[],p=[],m=new I,g=new I,v=new I,x=new I,b=new I,S=new I,_=new I;for(let T=0;T<=n;++T){const A=T/n*o*Math.PI*2;E(A,o,l,t,v),E(A+.01,o,l,t,x),S.subVectors(x,v),_.addVectors(x,v),b.crossVectors(S,_),_.crossVectors(b,S),b.normalize(),_.normalize();for(let N=0;N<=i;++N){const D=N/i*Math.PI*2,P=-e*Math.cos(D),z=e*Math.sin(D);m.x=v.x+(P*_.x+z*b.x),m.y=v.y+(P*_.y+z*b.y),m.z=v.z+(P*_.z+z*b.z),h.push(m.x,m.y,m.z),g.subVectors(m,v).normalize(),f.push(g.x,g.y,g.z),p.push(T/n),p.push(N/i)}}for(let T=1;T<=n;T++)for(let A=1;A<=i;A++){const N=(i+1)*(T-1)+(A-1),D=(i+1)*T+(A-1),P=(i+1)*T+A,z=(i+1)*(T-1)+A;c.push(N,D,z),c.push(D,P,z)}this.setIndex(c),this.setAttribute("position",new Zt(h,3)),this.setAttribute("normal",new Zt(f,3)),this.setAttribute("uv",new Zt(p,2));function E(T,A,N,D,P){const z=Math.cos(T),C=Math.sin(T),w=N/A*T,F=Math.cos(w);P.x=D*(2+F)*.5*z,P.y=D*(2+F)*C*.5,P.z=D*Math.sin(w)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Rf(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class Df extends ye{constructor(t=new rg(new I(-1,-1,0),new I(-1,1,0),new I(1,1,0)),e=64,n=1,i=8,o=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:o};const l=t.computeFrenetFrames(e,o);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new I,h=new I,f=new ut;let p=new I;const m=[],g=[],v=[],x=[];b(),this.setIndex(x),this.setAttribute("position",new Zt(m,3)),this.setAttribute("normal",new Zt(g,3)),this.setAttribute("uv",new Zt(v,2));function b(){for(let T=0;T<e;T++)S(T);S(o===!1?e:0),E(),_()}function S(T){p=t.getPointAt(T/e,p);const A=l.normals[T],N=l.binormals[T];for(let D=0;D<=i;D++){const P=D/i*Math.PI*2,z=Math.sin(P),C=-Math.cos(P);h.x=C*A.x+z*N.x,h.y=C*A.y+z*N.y,h.z=C*A.z+z*N.z,h.normalize(),g.push(h.x,h.y,h.z),c.x=p.x+n*h.x,c.y=p.y+n*h.y,c.z=p.z+n*h.z,m.push(c.x,c.y,c.z)}}function _(){for(let T=1;T<=e;T++)for(let A=1;A<=i;A++){const N=(i+1)*(T-1)+(A-1),D=(i+1)*T+(A-1),P=(i+1)*T+A,z=(i+1)*(T-1)+A;x.push(N,D,z),x.push(D,P,z)}}function E(){for(let T=0;T<=e;T++)for(let A=0;A<=i;A++)f.x=T/e,f.y=A/i,v.push(f.x,f.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new Df(new qh[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class lg extends ye{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,i=new I,o=new I;if(t.index!==null){const l=t.attributes.position,c=t.index;let h=t.groups;h.length===0&&(h=[{start:0,count:c.count,materialIndex:0}]);for(let f=0,p=h.length;f<p;++f){const m=h[f],g=m.start,v=m.count;for(let x=g,b=g+v;x<b;x+=3)for(let S=0;S<3;S++){const _=c.getX(x+S),E=c.getX(x+(S+1)%3);i.fromBufferAttribute(l,_),o.fromBufferAttribute(l,E),w_(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}}else{const l=t.attributes.position;for(let c=0,h=l.count/3;c<h;c++)for(let f=0;f<3;f++){const p=3*c+f,m=3*c+(f+1)%3;i.fromBufferAttribute(l,p),o.fromBufferAttribute(l,m),w_(i,o,n)===!0&&(e.push(i.x,i.y,i.z),e.push(o.x,o.y,o.z))}}this.setAttribute("position",new Zt(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function w_(s,t,e){const n=`${s.x},${s.y},${s.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${s.x},${s.y},${s.z}`;return e.has(n)===!0||e.has(i)===!0?!1:(e.add(n),e.add(i),!0)}var C_=Object.freeze({__proto__:null,BoxGeometry:br,CapsuleGeometry:_f,CircleGeometry:yf,ConeGeometry:gc,CylinderGeometry:mc,DodecahedronGeometry:xf,EdgesGeometry:Kx,ExtrudeGeometry:Mf,IcosahedronGeometry:bf,LatheGeometry:Ef,OctahedronGeometry:vc,PlaneGeometry:ko,PolyhedronGeometry:Aa,RingGeometry:Tf,ShapeGeometry:Af,SphereGeometry:_c,TetrahedronGeometry:wf,TorusGeometry:Cf,TorusKnotGeometry:Rf,TubeGeometry:Df,WireframeGeometry:lg});class rS extends qn{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Gt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class oS extends Ai{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class cg extends qn{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Gt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Gt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ea,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class lS extends cg{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ut(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return pe(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Gt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Gt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Gt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class cS extends qn{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Gt(16777215),this.specular=new Gt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Gt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ea,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.combine=fc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class uS extends qn{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Gt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Gt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ea,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class hS extends qn{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ea,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class fS extends qn{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Gt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Gt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ea,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ti,this.combine=fc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class ug extends qn{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Ex,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class hg extends qn{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class dS extends qn{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Gt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ea,this.normalScale=new ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class pS extends ei{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function pr(s,t){return!s||s.constructor===t?s:typeof t.BYTES_PER_ELEMENT=="number"?new t(s):Array.prototype.slice.call(s)}function mS(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function gS(s){function t(i,o){return s[i]-s[o]}const e=s.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n}function Sm(s,t,e){const n=s.length,i=new s.constructor(n);for(let o=0,l=0;l!==n;++o){const c=e[o]*t;for(let h=0;h!==t;++h)i[l++]=s[c+h]}return i}function fg(s,t,e,n){let i=1,o=s[0];for(;o!==void 0&&o[n]===void 0;)o=s[i++];if(o===void 0)return;let l=o[n];if(l!==void 0)if(Array.isArray(l))do l=o[n],l!==void 0&&(t.push(o.time),e.push(...l)),o=s[i++];while(o!==void 0);else if(l.toArray!==void 0)do l=o[n],l!==void 0&&(t.push(o.time),l.toArray(e,e.length)),o=s[i++];while(o!==void 0);else do l=o[n],l!==void 0&&(t.push(o.time),e.push(l)),o=s[i++];while(o!==void 0)}function kT(s,t,e,n,i=30){const o=s.clone();o.name=t;const l=[];for(let h=0;h<o.tracks.length;++h){const f=o.tracks[h],p=f.getValueSize(),m=[],g=[];for(let v=0;v<f.times.length;++v){const x=f.times[v]*i;if(!(x<e||x>=n)){m.push(f.times[v]);for(let b=0;b<p;++b)g.push(f.values[v*p+b])}}m.length!==0&&(f.times=pr(m,f.times.constructor),f.values=pr(g,f.values.constructor),l.push(f))}o.tracks=l;let c=1/0;for(let h=0;h<o.tracks.length;++h)c>o.tracks[h].times[0]&&(c=o.tracks[h].times[0]);for(let h=0;h<o.tracks.length;++h)o.tracks[h].shift(-1*c);return o.resetDuration(),o}function WT(s,t=0,e=s,n=30){n<=0&&(n=30);const i=e.tracks.length,o=t/n;for(let l=0;l<i;++l){const c=e.tracks[l],h=c.ValueTypeName;if(h==="bool"||h==="string")continue;const f=s.tracks.find(function(_){return _.name===c.name&&_.ValueTypeName===h});if(f===void 0)continue;let p=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=m/3);let g=0;const v=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(g=v/3);const x=c.times.length-1;let b;if(o<=c.times[0]){const _=p,E=m-p;b=c.values.slice(_,E)}else if(o>=c.times[x]){const _=x*m+p,E=_+m-p;b=c.values.slice(_,E)}else{const _=c.createInterpolant(),E=p,T=m-p;_.evaluate(o),b=_.resultBuffer.slice(E,T)}h==="quaternion"&&new Xn().fromArray(b).normalize().conjugate().toArray(b);const S=f.times.length;for(let _=0;_<S;++_){const E=_*v+g;if(h==="quaternion")Xn.multiplyQuaternionsFlat(f.values,E,b,0,f.values,E);else{const T=v-g*2;for(let A=0;A<T;++A)f.values[E+A]-=b[A]}}}return s.blendMode=Wm,s}class XT{static convertArray(t,e){return pr(t,e)}static isTypedArray(t){return mS(t)}static getKeyframeOrder(t){return gS(t)}static sortedArray(t,e,n){return Sm(t,e,n)}static flattenJSON(t,e,n,i){fg(t,e,n,i)}static subclip(t,e,n,i,o=30){return kT(t,e,n,i,o)}static makeClipAdditive(t,e=0,n=t,i=30){return WT(t,e,n,i)}}class yc{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],o=e[n-1];t:{e:{let l;n:{i:if(!(t<i)){for(let c=n+2;;){if(i===void 0){if(t<o)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(o=i,i=e[++n],t<i)break e}l=e.length;break n}if(!(t>=o)){const c=e[1];t<c&&(n=2,o=c);for(let h=n-2;;){if(o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===h)break;if(i=o,o=e[--n-1],t>=o)break e}l=n,n=0;break n}break t}for(;n<l;){const c=n+l>>>1;t<e[c]?l=c:n=c+1}if(i=e[n],o=e[n-1],o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,o,i)}return this.interpolate_(n,o,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,o=t*i;for(let l=0;l!==i;++l)e[l]=n[o+l];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class vS extends yc{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:fr,endingEnd:fr}}intervalChanged_(t,e,n){const i=this.parameterPositions;let o=t-2,l=t+1,c=i[o],h=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case dr:o=t,c=2*e-n;break;case $l:o=i.length-2,c=e+i[o]-i[o+1];break;default:o=t,c=n}if(h===void 0)switch(this.getSettings_().endingEnd){case dr:l=t,h=2*n-e;break;case $l:l=1,h=n+i[1]-i[0];break;default:l=t-1,h=e}const f=(n-e)*.5,p=this.valueSize;this._weightPrev=f/(e-c),this._weightNext=f/(h-n),this._offsetPrev=o*p,this._offsetNext=l*p}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,v=this._weightNext,x=(n-e)/(i-e),b=x*x,S=b*x,_=-g*S+2*g*b-g*x,E=(1+g)*S+(-1.5-2*g)*b+(-.5+g)*x+1,T=(-1-v)*S+(1.5+v)*b+.5*x,A=v*S-v*b;for(let N=0;N!==c;++N)o[N]=_*l[p+N]+E*l[f+N]+T*l[h+N]+A*l[m+N];return o}}class dg extends yc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=t*c,f=h-c,p=(n-e)/(i-e),m=1-p;for(let g=0;g!==c;++g)o[g]=l[f+g]*m+l[h+g]*p;return o}}class _S extends yc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class Hi{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=pr(e,this.TimeBufferType),this.values=pr(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:pr(t.times,Array),values:pr(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new _S(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new dg(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new vS(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Ql:e=this.InterpolantFactoryMethodDiscrete;break;case Gh:e=this.InterpolantFactoryMethodLinear;break;case nh:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ql;case this.InterpolantFactoryMethodLinear:return Gh;case this.InterpolantFactoryMethodSmooth:return nh}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let o=0,l=i-1;for(;o!==i&&n[o]<t;)++o;for(;l!==-1&&n[l]>e;)--l;if(++l,o!==0||l!==i){o>=l&&(l=Math.max(l,1),o=l-1);const c=this.getValueSize();this.times=n.slice(o,l),this.values=this.values.slice(o*c,l*c)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,o=n.length;o===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let l=null;for(let c=0;c!==o;c++){const h=n[c];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,h),t=!1;break}if(l!==null&&l>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,h,l),t=!1;break}l=h}if(i!==void 0&&mS(i))for(let c=0,h=i.length;c!==h;++c){const f=i[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===nh,o=t.length-1;let l=1;for(let c=1;c<o;++c){let h=!1;const f=t[c],p=t[c+1];if(f!==p&&(c!==1||f!==t[0]))if(i)h=!0;else{const m=c*n,g=m-n,v=m+n;for(let x=0;x!==n;++x){const b=e[m+x];if(b!==e[g+x]||b!==e[v+x]){h=!0;break}}}if(h){if(c!==l){t[l]=t[c];const m=c*n,g=l*n;for(let v=0;v!==n;++v)e[g+v]=e[m+v]}++l}}if(o>0){t[l]=t[o];for(let c=o*n,h=l*n,f=0;f!==n;++f)e[h+f]=e[c+f];++l}return l!==t.length?(this.times=t.slice(0,l),this.values=e.slice(0,l*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}Hi.prototype.ValueTypeName="";Hi.prototype.TimeBufferType=Float32Array;Hi.prototype.ValueBufferType=Float32Array;Hi.prototype.DefaultInterpolation=Gh;class Er extends Hi{constructor(t,e,n){super(t,e,n)}}Er.prototype.ValueTypeName="bool";Er.prototype.ValueBufferType=Array;Er.prototype.DefaultInterpolation=Ql;Er.prototype.InterpolantFactoryMethodLinear=void 0;Er.prototype.InterpolantFactoryMethodSmooth=void 0;class pg extends Hi{constructor(t,e,n,i){super(t,e,n,i)}}pg.prototype.ValueTypeName="color";class oc extends Hi{constructor(t,e,n,i){super(t,e,n,i)}}oc.prototype.ValueTypeName="number";class yS extends yc{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const o=this.resultBuffer,l=this.sampleValues,c=this.valueSize,h=(n-e)/(i-e);let f=t*c;for(let p=f+c;f!==p;f+=4)Xn.slerpFlat(o,0,l,f-c,l,f,h);return o}}class xc extends Hi{constructor(t,e,n,i){super(t,e,n,i)}InterpolantFactoryMethodLinear(t){return new yS(this.times,this.values,this.getValueSize(),t)}}xc.prototype.ValueTypeName="quaternion";xc.prototype.InterpolantFactoryMethodSmooth=void 0;class Tr extends Hi{constructor(t,e,n){super(t,e,n)}}Tr.prototype.ValueTypeName="string";Tr.prototype.ValueBufferType=Array;Tr.prototype.DefaultInterpolation=Ql;Tr.prototype.InterpolantFactoryMethodLinear=void 0;Tr.prototype.InterpolantFactoryMethodSmooth=void 0;class lc extends Hi{constructor(t,e,n,i){super(t,e,n,i)}}lc.prototype.ValueTypeName="vector";class cc{constructor(t="",e=-1,n=[],i=lf){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=Ei(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let l=0,c=n.length;l!==c;++l)e.push(YT(n[l]).scale(i));const o=new this(t.name,t.duration,e,t.blendMode);return o.uuid=t.uuid,o}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let o=0,l=n.length;o!==l;++o)e.push(Hi.toJSON(n[o]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const o=e.length,l=[];for(let c=0;c<o;c++){let h=[],f=[];h.push((c+o-1)%o,c,(c+1)%o),f.push(0,1,0);const p=gS(h);h=Sm(h,1,p),f=Sm(f,1,p),!i&&h[0]===0&&(h.push(o),f.push(f[0])),l.push(new oc(".morphTargetInfluences["+e[c].name+"]",h,f).scale(1/n))}return new this(t,-1,l)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},o=/^([\w-]*?)([\d]+)$/;for(let c=0,h=t.length;c<h;c++){const f=t[c],p=f.name.match(o);if(p&&p.length>1){const m=p[1];let g=i[m];g||(i[m]=g=[]),g.push(f)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],e,n));return l}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,g,v,x,b){if(v.length!==0){const S=[],_=[];fg(v,S,_,x),S.length!==0&&b.push(new m(g,S,_))}},i=[],o=t.name||"default",l=t.fps||30,c=t.blendMode;let h=t.length||-1;const f=t.hierarchy||[];for(let m=0;m<f.length;m++){const g=f[m].keys;if(!(!g||g.length===0))if(g[0].morphTargets){const v={};let x;for(x=0;x<g.length;x++)if(g[x].morphTargets)for(let b=0;b<g[x].morphTargets.length;b++)v[g[x].morphTargets[b]]=-1;for(const b in v){const S=[],_=[];for(let E=0;E!==g[x].morphTargets.length;++E){const T=g[x];S.push(T.time),_.push(T.morphTarget===b?1:0)}i.push(new oc(".morphTargetInfluence["+b+"]",S,_))}h=v.length*l}else{const v=".bones["+e[m].name+"]";n(lc,v+".position",g,"pos",i),n(xc,v+".quaternion",g,"rot",i),n(lc,v+".scale",g,"scl",i)}}return i.length===0?null:new this(o,h,i,c)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const o=this.tracks[n];e=Math.max(e,o.times[o.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function qT(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return oc;case"vector":case"vector2":case"vector3":case"vector4":return lc;case"color":return pg;case"quaternion":return xc;case"bool":case"boolean":return Er;case"string":return Tr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function YT(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=qT(s.type);if(s.times===void 0){const e=[],n=[];fg(s.keys,e,n,"value"),s.times=e,s.values=n}return t.parse!==void 0?t.parse(s):new t(s.name,s.times,s.values,s.interpolation)}const ms={enabled:!1,files:{},add:function(s,t){this.enabled!==!1&&(this.files[s]=t)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class mg{constructor(t,e,n){const i=this;let o=!1,l=0,c=0,h;const f=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(p){c++,o===!1&&i.onStart!==void 0&&i.onStart(p,l,c),o=!0},this.itemEnd=function(p){l++,i.onProgress!==void 0&&i.onProgress(p,l,c),l===c&&(o=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return h?h(p):p},this.setURLModifier=function(p){return h=p,this},this.addHandler=function(p,m){return f.push(p,m),this},this.removeHandler=function(p){const m=f.indexOf(p);return m!==-1&&f.splice(m,2),this},this.getHandler=function(p){for(let m=0,g=f.length;m<g;m+=2){const v=f[m],x=f[m+1];if(v.global&&(v.lastIndex=0),v.test(p))return x}return null}}}const xS=new mg;class ui{constructor(t){this.manager=t!==void 0?t:xS,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,o){n.load(t,i,e,o)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}ui.DEFAULT_MATERIAL_NAME="__DEFAULT";const zs={};class ZT extends Error{constructor(t,e){super(t),this.response=e}}class Ys extends ui{constructor(t){super(t),this.mimeType="",this.responseType=""}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=ms.get(`file:${t}`);if(o!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(o),this.manager.itemEnd(t)},0),o;if(zs[t]!==void 0){zs[t].push({onLoad:e,onProgress:n,onError:i});return}zs[t]=[],zs[t].push({onLoad:e,onProgress:n,onError:i});const l=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,h=this.responseType;fetch(l).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const p=zs[t],m=f.body.getReader(),g=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=g?parseInt(g):0,x=v!==0;let b=0;const S=new ReadableStream({start(_){E();function E(){m.read().then(({done:T,value:A})=>{if(T)_.close();else{b+=A.byteLength;const N=new ProgressEvent("progress",{lengthComputable:x,loaded:b,total:v});for(let D=0,P=p.length;D<P;D++){const z=p[D];z.onProgress&&z.onProgress(N)}_.enqueue(A),E()}},T=>{_.error(T)})}}});return new Response(S)}else throw new ZT(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(h){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(p=>new DOMParser().parseFromString(p,c));case"json":return f.json();default:if(c==="")return f.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),g=m&&m[1]?m[1].toLowerCase():void 0,v=new TextDecoder(g);return f.arrayBuffer().then(x=>v.decode(x))}}}).then(f=>{ms.add(`file:${t}`,f);const p=zs[t];delete zs[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onLoad&&v.onLoad(f)}}).catch(f=>{const p=zs[t];if(p===void 0)throw this.manager.itemError(t),f;delete zs[t];for(let m=0,g=p.length;m<g;m++){const v=p[m];v.onError&&v.onError(f)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class jT extends ui{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Ys(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=cc.parse(t[n]);e.push(i)}return e}}class KT extends ui{constructor(t){super(t)}load(t,e,n,i){const o=this,l=[],c=new vf,h=new Ys(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(o.withCredentials);let f=0;function p(m){h.load(t[m],function(g){const v=o.parse(g,!0);l[m]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},f+=1,f===6&&(v.mipmapCount===1&&(c.minFilter=gn),c.image=l,c.format=v.format,c.needsUpdate=!0,e&&e(c))},n,i)}if(Array.isArray(t))for(let m=0,g=t.length;m<g;++m)p(m);else h.load(t,function(m){const g=o.parse(m,!0);if(g.isCubemap){const v=g.mipmaps.length/g.mipmapCount;for(let x=0;x<v;x++){l[x]={mipmaps:[]};for(let b=0;b<g.mipmapCount;b++)l[x].mipmaps.push(g.mipmaps[x*g.mipmapCount+b]),l[x].format=g.format,l[x].width=g.width,l[x].height=g.height}c.image=l}else c.image.width=g.width,c.image.height=g.height,c.mipmaps=g.mipmaps;g.mipmapCount===1&&(c.minFilter=gn),c.format=g.format,c.needsUpdate=!0,e&&e(c)},n,i);return c}}const vo=new WeakMap;class uc extends ui{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=ms.get(`image:${t}`);if(l!==void 0){if(l.complete===!0)o.manager.itemStart(t),setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0);else{let m=vo.get(l);m===void 0&&(m=[],vo.set(l,m)),m.push({onLoad:e,onError:i})}return l}const c=ic("img");function h(){p(),e&&e(this);const m=vo.get(this)||[];for(let g=0;g<m.length;g++){const v=m[g];v.onLoad&&v.onLoad(this)}vo.delete(this),o.manager.itemEnd(t)}function f(m){p(),i&&i(m),ms.remove(`image:${t}`);const g=vo.get(this)||[];for(let v=0;v<g.length;v++){const x=g[v];x.onError&&x.onError(m)}vo.delete(this),o.manager.itemError(t),o.manager.itemEnd(t)}function p(){c.removeEventListener("load",h,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",h,!1),c.addEventListener("error",f,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),ms.add(`image:${t}`,c),o.manager.itemStart(t),c.src=t,c}}class JT extends ui{constructor(t){super(t)}load(t,e,n,i){const o=new pc;o.colorSpace=kn;const l=new uc(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function h(f){l.load(t[f],function(p){o.images[f]=p,c++,c===6&&(o.needsUpdate=!0,e&&e(o))},void 0,i)}for(let f=0;f<t.length;++f)h(f);return o}}class QT extends ui{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new vs,c=new Ys(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(o.withCredentials),c.load(t,function(h){let f;try{f=o.parse(h)}catch(p){if(i!==void 0)i(p);else{console.error(p);return}}f.image!==void 0?l.image=f.image:f.data!==void 0&&(l.image.width=f.width,l.image.height=f.height,l.image.data=f.data),l.wrapS=f.wrapS!==void 0?f.wrapS:zi,l.wrapT=f.wrapT!==void 0?f.wrapT:zi,l.magFilter=f.magFilter!==void 0?f.magFilter:gn,l.minFilter=f.minFilter!==void 0?f.minFilter:gn,l.anisotropy=f.anisotropy!==void 0?f.anisotropy:1,f.colorSpace!==void 0&&(l.colorSpace=f.colorSpace),f.flipY!==void 0&&(l.flipY=f.flipY),f.format!==void 0&&(l.format=f.format),f.type!==void 0&&(l.type=f.type),f.mipmaps!==void 0&&(l.mipmaps=f.mipmaps,l.minFilter=ps),f.mipmapCount===1&&(l.minFilter=gn),f.generateMipmaps!==void 0&&(l.generateMipmaps=f.generateMipmaps),l.needsUpdate=!0,e&&e(l,f)},n,i),l}}class $T extends ui{constructor(t){super(t)}load(t,e,n,i){const o=new rn,l=new uc(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(t,function(c){o.image=c,o.needsUpdate=!0,e!==void 0&&e(o)},n,i),o}}class wa extends Le{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Gt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class SS extends wa{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Gt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const Pp=new oe,R_=new I,D_=new I;class gg{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ut(512,512),this.mapType=Fi,this.map=null,this.mapPass=null,this.matrix=new oe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Go,this._frameExtents=new ut(1,1),this._viewportCount=1,this._viewports=[new Me(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;R_.setFromMatrixPosition(t.matrixWorld),e.position.copy(R_),D_.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(D_),e.updateMatrixWorld(),Pp.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Pp),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Pp)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class tA extends gg{constructor(){super(new ln(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=Lo*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,o=t.distance||e.far;(n!==e.fov||i!==e.aspect||o!==e.far)&&(e.fov=n,e.aspect=i,e.far=o,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class MS extends wa{constructor(t,e,n=0,i=Math.PI/3,o=0,l=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.target=new Le,this.distance=n,this.angle=i,this.penumbra=o,this.decay=l,this.map=null,this.shadow=new tA}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const U_=new oe,Nl=new I,Ip=new I;class eA extends gg{constructor(){super(new ln(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ut(4,2),this._viewportCount=6,this._viewports=[new Me(2,1,1,1),new Me(0,1,1,1),new Me(3,1,1,1),new Me(1,1,1,1),new Me(3,0,1,1),new Me(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,o=t.distance||n.far;o!==n.far&&(n.far=o,n.updateProjectionMatrix()),Nl.setFromMatrixPosition(t.matrixWorld),n.position.copy(Nl),Ip.copy(n.position),Ip.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Ip),n.updateMatrixWorld(),i.makeTranslation(-Nl.x,-Nl.y,-Nl.z),U_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(U_)}}class bS extends wa{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new eA}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class xa extends hf{constructor(t=-1,e=1,n=1,i=-1,o=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=o,this.far=l,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,o,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=o,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let o=n-t,l=n+t,c=i+e,h=i-e;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=f*this.view.offsetX,l=o+f*this.view.width,c-=p*this.view.offsetY,h=c-p*this.view.height}this.projectionMatrix.makeOrthographic(o,l,c,h,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class nA extends gg{constructor(){super(new xa(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ES extends wa{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Le.DEFAULT_UP),this.updateMatrix(),this.target=new Le,this.shadow=new nA}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class TS extends wa{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class AS extends wa{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class wS{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new I)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.282095),e.addScaledVector(l[1],.488603*i),e.addScaledVector(l[2],.488603*o),e.addScaledVector(l[3],.488603*n),e.addScaledVector(l[4],1.092548*(n*i)),e.addScaledVector(l[5],1.092548*(i*o)),e.addScaledVector(l[6],.315392*(3*o*o-1)),e.addScaledVector(l[7],1.092548*(n*o)),e.addScaledVector(l[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,o=t.z,l=this.coefficients;return e.copy(l[0]).multiplyScalar(.886227),e.addScaledVector(l[1],2*.511664*i),e.addScaledVector(l[2],2*.511664*o),e.addScaledVector(l[3],2*.511664*n),e.addScaledVector(l[4],2*.429043*n*i),e.addScaledVector(l[5],2*.429043*i*o),e.addScaledVector(l[6],.743125*o*o-.247708),e.addScaledVector(l[7],2*.429043*n*o),e.addScaledVector(l[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,o=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*o,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*o,e[6]=.315392*(3*o*o-1),e[7]=1.092548*n*o,e[8]=.546274*(n*n-i*i)}}class CS extends wa{constructor(t=new wS,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class Uf extends ui{constructor(t){super(t),this.textures={}}load(t,e,n,i){const o=this,l=new Ys(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(o){return e[o]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",o),e[o]}const i=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=t.sheen),t.sheenColor!==void 0&&(i.sheenColor=new Gt().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(i.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.specularIntensity!==void 0&&(i.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(i.dispersion=t.dispersion),t.iridescence!==void 0&&(i.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(i.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(i.transmission=t.transmission),t.thickness!==void 0&&(i.thickness=t.thickness),t.attenuationDistance!==void 0&&(i.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(i.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(i.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.shadowSide!==void 0&&(i.shadowSide=t.shadowSide),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(i.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(i.depthFunc=t.depthFunc),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(i.blendSrc=t.blendSrc),t.blendDst!==void 0&&(i.blendDst=t.blendDst),t.blendEquation!==void 0&&(i.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(i.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(i.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==void 0&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(i.dithering=t.dithering),t.alphaToCoverage!==void 0&&(i.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(i.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const o in t.uniforms){const l=t.uniforms[o];switch(i.uniforms[o]={},l.type){case"t":i.uniforms[o].value=n(l.value);break;case"c":i.uniforms[o].value=new Gt().setHex(l.value);break;case"v2":i.uniforms[o].value=new ut().fromArray(l.value);break;case"v3":i.uniforms[o].value=new I().fromArray(l.value);break;case"v4":i.uniforms[o].value=new Me().fromArray(l.value);break;case"m3":i.uniforms[o].value=new me().fromArray(l.value);break;case"m4":i.uniforms[o].value=new oe().fromArray(l.value);break;default:i.uniforms[o].value=l.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(i.glslVersion=t.glslVersion),t.extensions!==void 0)for(const o in t.extensions)i.extensions[o]=t.extensions[o];if(t.lights!==void 0&&(i.lights=t.lights),t.clipping!==void 0&&(i.clipping=t.clipping),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let o=t.normalScale;Array.isArray(o)===!1&&(o=[o,o]),i.normalScale=new ut().fromArray(o)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(i.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapRotation!==void 0&&i.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ut().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(i.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(i.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(i.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(i.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return Uf.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:rS,SpriteMaterial:Qm,RawShaderMaterial:oS,ShaderMaterial:Ai,PointsMaterial:tg,MeshPhysicalMaterial:lS,MeshStandardMaterial:cg,MeshPhongMaterial:cS,MeshToonMaterial:uS,MeshNormalMaterial:hS,MeshLambertMaterial:fS,MeshDepthMaterial:ug,MeshDistanceMaterial:hg,MeshBasicMaterial:Ta,MeshMatcapMaterial:dS,LineDashedMaterial:pS,LineBasicMaterial:ei,Material:qn};return new e[t]}}class Mm{static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class vg extends ye{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class RS extends ui{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Ys(o.manager);l.setPath(o.path),l.setRequestHeader(o.requestHeader),l.setWithCredentials(o.withCredentials),l.load(t,function(c){try{e(o.parse(JSON.parse(c)))}catch(h){i?i(h):console.error(h),o.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(v,x){if(e[x]!==void 0)return e[x];const S=v.interleavedBuffers[x],_=o(v,S.buffer),E=bo(S.type,_),T=new pf(E,S.stride);return T.uuid=S.uuid,e[x]=T,T}function o(v,x){if(n[x]!==void 0)return n[x];const S=v.arrayBuffers[x],_=new Uint32Array(S).buffer;return n[x]=_,_}const l=t.isInstancedBufferGeometry?new vg:new ye,c=t.data.index;if(c!==void 0){const v=bo(c.type,c.array);l.setIndex(new We(v,1))}const h=t.data.attributes;for(const v in h){const x=h[v];let b;if(x.isInterleavedBufferAttribute){const S=i(t.data,x.data);b=new bi(S,x.itemSize,x.offset,x.normalized)}else{const S=bo(x.type,x.array),_=x.isInstancedBufferAttribute?Oo:We;b=new _(S,x.itemSize,x.normalized)}x.name!==void 0&&(b.name=x.name),x.usage!==void 0&&b.setUsage(x.usage),l.setAttribute(v,b)}const f=t.data.morphAttributes;if(f)for(const v in f){const x=f[v],b=[];for(let S=0,_=x.length;S<_;S++){const E=x[S];let T;if(E.isInterleavedBufferAttribute){const A=i(t.data,E.data);T=new bi(A,E.itemSize,E.offset,E.normalized)}else{const A=bo(E.type,E.array);T=new We(A,E.itemSize,E.normalized)}E.name!==void 0&&(T.name=E.name),b.push(T)}l.morphAttributes[v]=b}t.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const m=t.data.groups||t.data.drawcalls||t.data.offsets;if(m!==void 0)for(let v=0,x=m.length;v!==x;++v){const b=m[v];l.addGroup(b.start,b.count,b.materialIndex)}const g=t.data.boundingSphere;return g!==void 0&&(l.boundingSphere=new _n().fromJSON(g)),t.name&&(l.name=t.name),t.userData&&(l.userData=t.userData),l}}class iA extends ui{constructor(t){super(t)}load(t,e,n,i){const o=this,l=this.path===""?Mm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||l;const c=new Ys(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(t,function(h){let f=null;try{f=JSON.parse(h)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+t+".",m.message);return}const p=f.metadata;if(p===void 0||p.type===void 0||p.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}o.parse(f,e)},n,i)}async loadAsync(t,e){const n=this,i=this.path===""?Mm.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const o=new Ys(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials);const l=await o.loadAsync(t,e),c=JSON.parse(l),h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(c)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),o=this.parseGeometries(t.geometries,i),l=this.parseImages(t.images,function(){e!==void 0&&e(f)}),c=this.parseTextures(t.textures,l),h=this.parseMaterials(t.materials,c),f=this.parseObject(t.object,o,h,c,n),p=this.parseSkeletons(t.skeletons,f);if(this.bindSkeletons(f,p),this.bindLightTargets(f),e!==void 0){let m=!1;for(const g in l)if(l[g].data instanceof HTMLImageElement){m=!0;break}m===!1&&e(f)}return f}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),o=await this.parseImagesAsync(t.images),l=this.parseTextures(t.textures,o),c=this.parseMaterials(t.materials,l),h=this.parseObject(t.object,i,c,l,e),f=this.parseSkeletons(t.skeletons,h);return this.bindSkeletons(h,f),this.bindLightTargets(h),h}parseShapes(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const o=new vr().fromJSON(t[n]);e[o.uuid]=o}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(o){o.isBone&&(i[o.uuid]=o)}),t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=new mf().fromJSON(t[o],i);n[c.uuid]=c}return n}parseGeometries(t,e){const n={};if(t!==void 0){const i=new RS;for(let o=0,l=t.length;o<l;o++){let c;const h=t[o];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(h);break;default:h.type in C_?c=C_[h.type].fromJSON(h,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}c.uuid=h.uuid,h.name!==void 0&&(c.name=h.name),h.userData!==void 0&&(c.userData=h.userData),n[h.uuid]=c}}return n}parseMaterials(t,e){const n={},i={};if(t!==void 0){const o=new Uf;o.setTextures(e);for(let l=0,c=t.length;l<c;l++){const h=t[l];n[h.uuid]===void 0&&(n[h.uuid]=o.parse(h)),i[h.uuid]=n[h.uuid]}}return i}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const i=t[n],o=cc.parse(i);e[o.uuid]=o}return e}parseImages(t,e){const n=this,i={};let o;function l(h){return n.manager.itemStart(h),o.load(h,function(){n.manager.itemEnd(h)},void 0,function(){n.manager.itemError(h),n.manager.itemEnd(h)})}function c(h){if(typeof h=="string"){const f=h,p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f)?f:n.resourcePath+f;return l(p)}else return h.data?{data:bo(h.type,h.data),width:h.width,height:h.height}:null}if(t!==void 0&&t.length>0){const h=new mg(e);o=new uc(h),o.setCrossOrigin(this.crossOrigin);for(let f=0,p=t.length;f<p;f++){const m=t[f],g=m.url;if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x],_=c(S);_!==null&&(_ instanceof HTMLImageElement?v.push(_):v.push(new vs(_.data,_.width,_.height)))}i[m.uuid]=new ya(v)}else{const v=c(m.url);i[m.uuid]=new ya(v)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function o(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:e.resourcePath+c;return await i.loadAsync(h)}else return l.data?{data:bo(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){i=new uc(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=t.length;l<c;l++){const h=t[l],f=h.url;if(Array.isArray(f)){const p=[];for(let m=0,g=f.length;m<g;m++){const v=f[m],x=await o(v);x!==null&&(x instanceof HTMLImageElement?p.push(x):p.push(new vs(x.data,x.width,x.height)))}n[h.uuid]=new ya(p)}else{const p=await o(h.url);n[h.uuid]=new ya(p)}}}return n}parseTextures(t,e){function n(o,l){return typeof o=="number"?o:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",o),l[o])}const i={};if(t!==void 0)for(let o=0,l=t.length;o<l;o++){const c=t[o];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),e[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const h=e[c.image],f=h.data;let p;Array.isArray(f)?(p=new pc,f.length===6&&(p.needsUpdate=!0)):(f&&f.data?p=new vs:p=new rn,f&&(p.needsUpdate=!0)),p.source=h,p.uuid=c.uuid,c.name!==void 0&&(p.name=c.name),c.mapping!==void 0&&(p.mapping=n(c.mapping,sA)),c.channel!==void 0&&(p.channel=c.channel),c.offset!==void 0&&p.offset.fromArray(c.offset),c.repeat!==void 0&&p.repeat.fromArray(c.repeat),c.center!==void 0&&p.center.fromArray(c.center),c.rotation!==void 0&&(p.rotation=c.rotation),c.wrap!==void 0&&(p.wrapS=n(c.wrap[0],N_),p.wrapT=n(c.wrap[1],N_)),c.format!==void 0&&(p.format=c.format),c.internalFormat!==void 0&&(p.internalFormat=c.internalFormat),c.type!==void 0&&(p.type=c.type),c.colorSpace!==void 0&&(p.colorSpace=c.colorSpace),c.minFilter!==void 0&&(p.minFilter=n(c.minFilter,L_)),c.magFilter!==void 0&&(p.magFilter=n(c.magFilter,L_)),c.anisotropy!==void 0&&(p.anisotropy=c.anisotropy),c.flipY!==void 0&&(p.flipY=c.flipY),c.generateMipmaps!==void 0&&(p.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(p.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(p.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(p.compareFunction=c.compareFunction),c.userData!==void 0&&(p.userData=c.userData),i[c.uuid]=p}return i}parseObject(t,e,n,i,o){let l;function c(g){return e[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",g),e[g]}function h(g){if(g!==void 0){if(Array.isArray(g)){const v=[];for(let x=0,b=g.length;x<b;x++){const S=g[x];n[S]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",S),v.push(n[S])}return v}return n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),n[g]}}function f(g){return i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",g),i[g]}let p,m;switch(t.type){case"Scene":l=new Jm,t.background!==void 0&&(Number.isInteger(t.background)?l.background=new Gt(t.background):l.background=f(t.background)),t.environment!==void 0&&(l.environment=f(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?l.fog=new df(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(l.fog=new ff(t.fog.color,t.fog.density)),t.fog.name!==""&&(l.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(l.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&l.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(l.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&l.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":l=new ln(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(l.focus=t.focus),t.zoom!==void 0&&(l.zoom=t.zoom),t.filmGauge!==void 0&&(l.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(l.filmOffset=t.filmOffset),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"OrthographicCamera":l=new xa(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(l.zoom=t.zoom),t.view!==void 0&&(l.view=Object.assign({},t.view));break;case"AmbientLight":l=new TS(t.color,t.intensity);break;case"DirectionalLight":l=new ES(t.color,t.intensity),l.target=t.target||"";break;case"PointLight":l=new bS(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":l=new AS(t.color,t.intensity,t.width,t.height);break;case"SpotLight":l=new MS(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),l.target=t.target||"";break;case"HemisphereLight":l=new SS(t.color,t.groundColor,t.intensity);break;case"LightProbe":l=new CS().fromJSON(t);break;case"SkinnedMesh":p=c(t.geometry),m=h(t.material),l=new Wx(p,m),t.bindMode!==void 0&&(l.bindMode=t.bindMode),t.bindMatrix!==void 0&&l.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(l.skeleton=t.skeleton);break;case"Mesh":p=c(t.geometry),m=h(t.material),l=new cn(p,m);break;case"InstancedMesh":p=c(t.geometry),m=h(t.material);const g=t.count,v=t.instanceMatrix,x=t.instanceColor;l=new Xx(p,m,g),l.instanceMatrix=new Oo(new Float32Array(v.array),16),x!==void 0&&(l.instanceColor=new Oo(new Float32Array(x.array),x.itemSize));break;case"BatchedMesh":p=c(t.geometry),m=h(t.material),l=new qx(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,m),l.geometry=p,l.perObjectFrustumCulled=t.perObjectFrustumCulled,l.sortObjects=t.sortObjects,l._drawRanges=t.drawRanges,l._reservedRanges=t.reservedRanges,l._geometryInfo=t.geometryInfo.map(b=>{let S=null,_=null;return b.boundingBox!==void 0&&(S=new vn().fromJSON(b.boundingBox)),b.boundingSphere!==void 0&&(_=new _n().fromJSON(b.boundingSphere)),{...b,boundingBox:S,boundingSphere:_}}),l._instanceInfo=t.instanceInfo,l._availableInstanceIds=t._availableInstanceIds,l._availableGeometryIds=t._availableGeometryIds,l._nextIndexStart=t.nextIndexStart,l._nextVertexStart=t.nextVertexStart,l._geometryCount=t.geometryCount,l._maxInstanceCount=t.maxInstanceCount,l._maxVertexCount=t.maxVertexCount,l._maxIndexCount=t.maxIndexCount,l._geometryInitialized=t.geometryInitialized,l._matricesTexture=f(t.matricesTexture.uuid),l._indirectTexture=f(t.indirectTexture.uuid),t.colorsTexture!==void 0&&(l._colorsTexture=f(t.colorsTexture.uuid)),t.boundingSphere!==void 0&&(l.boundingSphere=new _n().fromJSON(t.boundingSphere)),t.boundingBox!==void 0&&(l.boundingBox=new vn().fromJSON(t.boundingBox));break;case"LOD":l=new kx;break;case"Line":l=new ba(c(t.geometry),h(t.material));break;case"LineLoop":l=new Yx(c(t.geometry),h(t.material));break;case"LineSegments":l=new xs(c(t.geometry),h(t.material));break;case"PointCloud":case"Points":l=new Zx(c(t.geometry),h(t.material));break;case"Sprite":l=new Gx(h(t.material));break;case"Group":l=new Eo;break;case"Bone":l=new $m;break;default:l=new Le}if(l.uuid=t.uuid,t.name!==void 0&&(l.name=t.name),t.matrix!==void 0?(l.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=t.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(t.position!==void 0&&l.position.fromArray(t.position),t.rotation!==void 0&&l.rotation.fromArray(t.rotation),t.quaternion!==void 0&&l.quaternion.fromArray(t.quaternion),t.scale!==void 0&&l.scale.fromArray(t.scale)),t.up!==void 0&&l.up.fromArray(t.up),t.castShadow!==void 0&&(l.castShadow=t.castShadow),t.receiveShadow!==void 0&&(l.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(l.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(l.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(l.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(l.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(l.visible=t.visible),t.frustumCulled!==void 0&&(l.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(l.renderOrder=t.renderOrder),t.userData!==void 0&&(l.userData=t.userData),t.layers!==void 0&&(l.layers.mask=t.layers),t.children!==void 0){const g=t.children;for(let v=0;v<g.length;v++)l.add(this.parseObject(g[v],e,n,i,o))}if(t.animations!==void 0){const g=t.animations;for(let v=0;v<g.length;v++){const x=g[v];l.animations.push(o[x])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(l.autoUpdate=t.autoUpdate);const g=t.levels;for(let v=0;v<g.length;v++){const x=g[v],b=l.getObjectByProperty("uuid",x.object);b!==void 0&&l.addLevel(b,x.distance,x.hysteresis)}}return l}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=e[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);i!==void 0?e.target=i:e.target=new Le}})}}const sA={UVMapping:tf,CubeReflectionMapping:Xs,CubeRefractionMapping:Sa,EquirectangularReflectionMapping:Zl,EquirectangularRefractionMapping:jl,CubeUVReflectionMapping:Ho},N_={RepeatWrapping:Kl,ClampToEdgeWrapping:zi,MirroredRepeatWrapping:Jl},L_={NearestFilter:Ln,NearestMipmapNearestFilter:Om,NearestMipmapLinearFilter:Mo,LinearFilter:gn,LinearMipmapNearestFilter:Bl,LinearMipmapLinearFilter:ps},Op=new WeakMap;class aA extends ui{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const o=this,l=ms.get(`image-bitmap:${t}`);if(l!==void 0){if(o.manager.itemStart(t),l.then){l.then(f=>{if(Op.has(l)===!0)i&&i(Op.get(l)),o.manager.itemError(t),o.manager.itemEnd(t);else return e&&e(f),o.manager.itemEnd(t),f});return}return setTimeout(function(){e&&e(l),o.manager.itemEnd(t)},0),l}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const h=fetch(t,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(o.options,{colorSpaceConversion:"none"}))}).then(function(f){return ms.add(`image-bitmap:${t}`,f),e&&e(f),o.manager.itemEnd(t),f}).catch(function(f){i&&i(f),Op.set(h,f),ms.remove(`image-bitmap:${t}`),o.manager.itemError(t),o.manager.itemEnd(t)});ms.add(`image-bitmap:${t}`,h),o.manager.itemStart(t)}}let Hu;class _g{static getContext(){return Hu===void 0&&(Hu=new(window.AudioContext||window.webkitAudioContext)),Hu}static setContext(t){Hu=t}}class rA extends ui{constructor(t){super(t)}load(t,e,n,i){const o=this,l=new Ys(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(t,function(h){try{const f=h.slice(0);_g.getContext().decodeAudioData(f,function(m){e(m)}).catch(c)}catch(f){c(f)}},n,i);function c(h){i?i(h):console.error(h),o.manager.itemError(t)}}}const P_=new oe,I_=new oe,$a=new oe;class oA{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ln,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ln,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,$a.copy(t.projectionMatrix);const i=e.eyeSep/2,o=i*e.near/e.focus,l=e.near*Math.tan(gr*e.fov*.5)/e.zoom;let c,h;I_.elements[12]=-i,P_.elements[12]=i,c=-l*e.aspect+o,h=l*e.aspect+o,$a.elements[0]=2*e.near/(h-c),$a.elements[8]=(h+c)/(h-c),this.cameraL.projectionMatrix.copy($a),c=-l*e.aspect-o,h=l*e.aspect-o,$a.elements[0]=2*e.near/(h-c),$a.elements[8]=(h+c)/(h-c),this.cameraR.projectionMatrix.copy($a)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(I_),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(P_)}}class DS extends ln{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class yg{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=performance.now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}const tr=new I,zp=new Xn,lA=new I,er=new I,nr=new I;class cA extends Le{constructor(){super(),this.type="AudioListener",this.context=_g.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new yg}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(tr,zp,lA),er.set(0,0,-1).applyQuaternion(zp),nr.set(0,1,0).applyQuaternion(zp),e.positionX){const n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(tr.x,n),e.positionY.linearRampToValueAtTime(tr.y,n),e.positionZ.linearRampToValueAtTime(tr.z,n),e.forwardX.linearRampToValueAtTime(er.x,n),e.forwardY.linearRampToValueAtTime(er.y,n),e.forwardZ.linearRampToValueAtTime(er.z,n),e.upX.linearRampToValueAtTime(nr.x,n),e.upY.linearRampToValueAtTime(nr.y,n),e.upZ.linearRampToValueAtTime(nr.z,n)}else e.setPosition(tr.x,tr.y,tr.z),e.setOrientation(er.x,er.y,er.z,nr.x,nr.y,nr.z)}}class US extends Le{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const ir=new I,O_=new Xn,uA=new I,sr=new I;class hA extends US{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ir,O_,uA),sr.set(0,0,1).applyQuaternion(O_);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(ir.x,n),e.positionY.linearRampToValueAtTime(ir.y,n),e.positionZ.linearRampToValueAtTime(ir.z,n),e.orientationX.linearRampToValueAtTime(sr.x,n),e.orientationY.linearRampToValueAtTime(sr.y,n),e.orientationZ.linearRampToValueAtTime(sr.z,n)}else e.setPosition(ir.x,ir.y,ir.z),e.setOrientation(sr.x,sr.y,sr.z)}}class fA{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class NS{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,o,l;switch(e){case"quaternion":i=this._slerp,o=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,o=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,o=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=o,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,o=t*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[o+c]=n[c];l=e}else{l+=e;const c=e/l;this._mixBufferRegion(n,o,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,o=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,o<1){const h=e*this._origIndex;this._mixBufferRegion(n,i,h,1-o,e)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let h=e,f=e+e;h!==f;++h)if(n[h]!==n[h+e]){c.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let o=n,l=i;o!==l;++o)e[o]=e[i+o%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,o){if(i>=.5)for(let l=0;l!==o;++l)t[e+l]=t[n+l]}_slerp(t,e,n,i){Xn.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,o){const l=this._workIndex*o;Xn.multiplyQuaternionsFlat(t,l,t,e,t,n),Xn.slerpFlat(t,e,t,e,t,l,i)}_lerp(t,e,n,i,o){const l=1-i;for(let c=0;c!==o;++c){const h=e+c;t[h]=t[h]*l+t[n+c]*i}}_lerpAdditive(t,e,n,i,o){for(let l=0;l!==o;++l){const c=e+l;t[c]=t[c]+t[n+l]*i}}}const xg="\\[\\]\\.:\\/",dA=new RegExp("["+xg+"]","g"),Sg="[^"+xg+"]",pA="[^"+xg.replace("\\.","")+"]",mA=/((?:WC+[\/:])*)/.source.replace("WC",Sg),gA=/(WCOD+)?/.source.replace("WCOD",pA),vA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Sg),_A=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Sg),yA=new RegExp("^"+mA+gA+vA+_A+"$"),xA=["material","materials","bones","map"];class SA{constructor(t,e,n){const i=n||Ne.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,o=n.length;i!==o;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Ne{constructor(t,e,n){this.path=e,this.parsedPath=n||Ne.parseTrackName(e),this.node=Ne.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Ne.Composite(t,e,n):new Ne(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(dA,"")}static parseTrackName(t){const e=yA.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const o=n.nodeName.substring(i+1);xA.indexOf(o)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=o)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(o){for(let l=0;l<o.length;l++){const c=o[l];if(c.name===e||c.uuid===e)return c;const h=n(c.children);if(h)return h}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,o=n.length;i!==o;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let o=e.propertyIndex;if(t||(t=Ne.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let p=0;p<t.length;p++)if(t[p].name===f){f=p;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(f!==void 0){if(t[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[f]}}const l=t[i];if(l===void 0){const f=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+i+" but it wasn't found.",t);return}let c=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?c=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(o!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[o]!==void 0&&(o=t.morphTargetDictionary[o])}h=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=o}else l.fromArray!==void 0&&l.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(h=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ne.Composite=SA;Ne.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Ne.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Ne.prototype.GetterByBindingType=[Ne.prototype._getValue_direct,Ne.prototype._getValue_array,Ne.prototype._getValue_arrayElement,Ne.prototype._getValue_toArray];Ne.prototype.SetterByBindingTypeAndVersioning=[[Ne.prototype._setValue_direct,Ne.prototype._setValue_direct_setNeedsUpdate,Ne.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ne.prototype._setValue_array,Ne.prototype._setValue_array_setNeedsUpdate,Ne.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ne.prototype._setValue_arrayElement,Ne.prototype._setValue_arrayElement_setNeedsUpdate,Ne.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ne.prototype._setValue_fromArray,Ne.prototype._setValue_fromArray_setNeedsUpdate,Ne.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class MA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Ei(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,o=this._bindings,l=o.length;let c,h=t.length,f=this.nCachedObjects_;for(let p=0,m=arguments.length;p!==m;++p){const g=arguments[p],v=g.uuid;let x=e[v];if(x===void 0){x=h++,e[v]=x,t.push(g);for(let b=0,S=l;b!==S;++b)o[b].push(new Ne(g,n[b],i[b]))}else if(x<f){c=t[x];const b=--f,S=t[b];e[S.uuid]=x,t[x]=S,e[v]=b,t[b]=g;for(let _=0,E=l;_!==E;++_){const T=o[_],A=T[b];let N=T[x];T[x]=A,N===void 0&&(N=new Ne(g,n[_],i[_])),T[b]=N}}else t[x]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=f}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const h=arguments[l],f=h.uuid,p=e[f];if(p!==void 0&&p>=o){const m=o++,g=t[m];e[g.uuid]=p,t[p]=g,e[f]=m,t[m]=h;for(let v=0,x=i;v!==x;++v){const b=n[v],S=b[m],_=b[p];b[p]=S,b[m]=_}}}this.nCachedObjects_=o}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let o=this.nCachedObjects_,l=t.length;for(let c=0,h=arguments.length;c!==h;++c){const f=arguments[c],p=f.uuid,m=e[p];if(m!==void 0)if(delete e[p],m<o){const g=--o,v=t[g],x=--l,b=t[x];e[v.uuid]=m,t[m]=v,e[b.uuid]=g,t[g]=b,t.pop();for(let S=0,_=i;S!==_;++S){const E=n[S],T=E[g],A=E[x];E[m]=T,E[g]=A,E.pop()}}else{const g=--l,v=t[g];g>0&&(e[v.uuid]=m),t[m]=v,t.pop();for(let x=0,b=i;x!==b;++x){const S=n[x];S[m]=S[g],S.pop()}}}this.nCachedObjects_=o}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const o=this._bindings;if(i!==void 0)return o[i];const l=this._paths,c=this._parsedPaths,h=this._objects,f=h.length,p=this.nCachedObjects_,m=new Array(f);i=o.length,n[t]=i,l.push(t),c.push(e),o.push(m);for(let g=p,v=h.length;g!==v;++g){const x=h[g];m[g]=new Ne(x,t,e)}return m}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,o=this._parsedPaths,l=this._bindings,c=l.length-1,h=l[c],f=t[c];e[f]=n,l[n]=h,l.pop(),o[n]=o[c],o.pop(),i[n]=i[c],i.pop()}}}class LS{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const o=e.tracks,l=o.length,c=new Array(l),h={endingStart:fr,endingEnd:fr};for(let f=0;f!==l;++f){const p=o[f].createInterpolant(null);c[f]=p,p.settings=h}this._interpolantSettings=h,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Mx,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),n===!0){const i=this._clip.duration,o=t._clip.duration,l=o/i,c=i/o;t.warp(1,l,e),this.warp(c,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,o=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const h=c.parameterPositions,f=c.sampleValues;return h[0]=o,h[1]=o+n,f[0]=t/l,f[1]=e/l,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const o=this._startTime;if(o!==null){const h=(t-o)*n;h<0||n===0?e=0:(this._startTime=null,e=n*h)}e*=this._updateTimeScale(t);const l=this._updateTime(e),c=this._updateWeight(t);if(c>0){const h=this._interpolants,f=this._propertyBindings;switch(this.blendMode){case Wm:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulateAdditive(c);break;case lf:default:for(let p=0,m=h.length;p!==m;++p)h[p].evaluate(l),f[p].accumulate(i,c)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,o=this._loopCount;const l=n===bx;if(t===0)return o===-1?i:l&&(o&1)===1?e-i:i;if(n===Sx){o===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(o===-1&&(t>=0?(o=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=e||i<0){const c=Math.floor(i/e);i-=e*c,o+=Math.abs(c);const h=this.repetitions-o;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(h===1){const f=t<0;this._setEndings(f,!f,l)}else this._setEndings(!1,!1,l);this._loopCount=o,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(o&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=dr,i.endingEnd=dr):(t?i.endingStart=this.zeroSlopeAtStart?dr:fr:i.endingStart=$l,e?i.endingEnd=this.zeroSlopeAtEnd?dr:fr:i.endingEnd=$l)}_scheduleFading(t,e,n){const i=this._mixer,o=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,h=l.sampleValues;return c[0]=o,h[0]=e,c[1]=o+t,h[1]=n,this}}const bA=new Float32Array(1);class EA extends ys{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,o=i.length,l=t._propertyBindings,c=t._interpolants,h=n.uuid,f=this._bindingsByRootAndName;let p=f[h];p===void 0&&(p={},f[h]=p);for(let m=0;m!==o;++m){const g=i[m],v=g.name;let x=p[v];if(x!==void 0)++x.referenceCount,l[m]=x;else{if(x=l[m],x!==void 0){x._cacheIndex===null&&(++x.referenceCount,this._addInactiveBinding(x,h,v));continue}const b=e&&e._propertyBindings[m].binding.parsedPath;x=new NS(Ne.create(n,v,b),g.ValueTypeName,g.getValueSize()),++x.referenceCount,this._addInactiveBinding(x,h,v),l[m]=x}c[m].resultBuffer=x.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,o=this._actionsByClip[i];this._bindAction(t,o&&o.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];o.useCount++===0&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.useCount===0&&(o.restoreOriginalState(),this._takeBackBinding(o))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,o=this._actionsByClip;let l=o[e];if(l===void 0)l={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,o[e]=l;else{const c=l.knownActions;t._byClipCacheIndex=c.length,c.push(t)}t._cacheIndex=i.length,i.push(t),l.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const o=t._clip.uuid,l=this._actionsByClip,c=l[o],h=c.knownActions,f=h[h.length-1],p=t._byClipCacheIndex;f._byClipCacheIndex=p,h[p]=f,h.pop(),t._byClipCacheIndex=null;const m=c.actionByRoot,g=(t._localRoot||this._root).uuid;delete m[g],h.length===0&&delete l[o],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const o=e[n];--o.referenceCount===0&&this._removeInactiveBinding(o)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,o=this._bindings;let l=i[e];l===void 0&&(l={},i[e]=l),l[n]=t,t._cacheIndex=o.length,o.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,o=n.path,l=this._bindingsByRootAndName,c=l[i],h=e[e.length-1],f=t._cacheIndex;h._cacheIndex=f,e[f]=h,e.pop(),delete c[o],Object.keys(c).length===0&&delete l[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,o=e[i];t._cacheIndex=i,e[i]=t,o._cacheIndex=n,e[n]=o}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new dg(new Float32Array(2),new Float32Array(2),1,bA),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,o=e[i];t.__cacheIndex=i,e[i]=t,o.__cacheIndex=n,e[n]=o}clipAction(t,e,n){const i=e||this._root,o=i.uuid;let l=typeof t=="string"?cc.findByName(i,t):t;const c=l!==null?l.uuid:t,h=this._actionsByClip[c];let f=null;if(n===void 0&&(l!==null?n=l.blendMode:n=lf),h!==void 0){const m=h.actionByRoot[o];if(m!==void 0&&m.blendMode===n)return m;f=h.knownActions[0],l===null&&(l=f._clip)}if(l===null)return null;const p=new LS(this,l,e,n);return this._bindAction(p,f),this._addInactiveAction(p,c,o),p}existingAction(t,e){const n=e||this._root,i=n.uuid,o=typeof t=="string"?cc.findByName(n,t):t,l=o?o.uuid:t,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,o=Math.sign(t),l=this._accuIndex^=1;for(let f=0;f!==n;++f)e[f]._update(i,t,o,l);const c=this._bindings,h=this._nActiveBindings;for(let f=0;f!==h;++f)c[f].apply(l);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,o=i[n];if(o!==void 0){const l=o.knownActions;for(let c=0,h=l.length;c!==h;++c){const f=l[c];this._deactivateAction(f);const p=f._cacheIndex,m=e[e.length-1];f._cacheIndex=null,f._byClipCacheIndex=null,m._cacheIndex=p,e[p]=m,e.pop(),this._removeInactiveBindingsForAction(f)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,h=c[e];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const i=this._bindingsByRootAndName,o=i[e];if(o!==void 0)for(const l in o){const c=o[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class TA extends Zm{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new uf(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class Mg{constructor(t){this.value=t}clone(){return new Mg(this.value.clone===void 0?this.value:this.value.clone())}}let AA=0;class wA extends ys{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:AA++}),this.name="",this.usage=ec,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++){const o=Array.isArray(e[n])?e[n]:[e[n]];for(let l=0;l<o.length;l++)this.uniforms.push(o[l].clone())}return this}clone(){return new this.constructor().copy(this)}}class Zh extends pf{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class CA{constructor(t,e,n,i,o,l=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=o,this.normalized=l,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const z_=new oe;class PS{constructor(t,e,n=0,i=1/0){this.ray=new Mr(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Po,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return z_.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(z_),this}intersectObject(t,e=!0,n=[]){return bm(t,this,n,e),n.sort(B_),n}intersectObjects(t,e=!0,n=[]){for(let i=0,o=t.length;i<o;i++)bm(t[i],this,n,e);return n.sort(B_),n}}function B_(s,t){return s.distance-t.distance}function bm(s,t,e,n){let i=!0;if(s.layers.test(t.layers)&&s.raycast(t,e)===!1&&(i=!1),i===!0&&n===!0){const o=s.children;for(let l=0,c=o.length;l<c;l++)bm(o[l],t,e,!0)}}class Em{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=pe(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(pe(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class RA{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class bg{constructor(t,e,n,i){bg.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const o=this.elements;return o[0]=t,o[2]=e,o[1]=n,o[3]=i,this}}const F_=new ut;class DA{constructor(t=new ut(1/0,1/0),e=new ut(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=F_.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,F_).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const H_=new I,Vu=new I;class IS{constructor(t=new I,e=new I){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){H_.subVectors(t,this.start),Vu.subVectors(this.end,this.start);const n=Vu.dot(Vu);let o=Vu.dot(H_)/n;return e&&(o=pe(o,0,1)),o}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const V_=new I;class UA extends Le{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new ye,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,h=32;l<h;l++,c++){const f=l/h*Math.PI*2,p=c/h*Math.PI*2;i.push(Math.cos(f),Math.sin(f),1,Math.cos(p),Math.sin(p),1)}n.setAttribute("position",new Zt(i,3));const o=new ei({fog:!1,toneMapped:!1});this.cone=new xs(n,o),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),V_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(V_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const ga=new I,Gu=new oe,Bp=new oe;class NA extends xs{constructor(t){const e=OS(t),n=new ye,i=[],o=[],l=new Gt(0,0,1),c=new Gt(0,1,0);for(let f=0;f<e.length;f++){const p=e[f];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),o.push(l.r,l.g,l.b),o.push(c.r,c.g,c.b))}n.setAttribute("position",new Zt(i,3)),n.setAttribute("color",new Zt(o,3));const h=new ei({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,h),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Bp.copy(this.root.matrixWorld).invert();for(let o=0,l=0;o<e.length;o++){const c=e[o];c.parent&&c.parent.isBone&&(Gu.multiplyMatrices(Bp,c.matrixWorld),ga.setFromMatrixPosition(Gu),i.setXYZ(l,ga.x,ga.y,ga.z),Gu.multiplyMatrices(Bp,c.parent.matrixWorld),ga.setFromMatrixPosition(Gu),i.setXYZ(l+1,ga.x,ga.y,ga.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}}function OS(s){const t=[];s.isBone===!0&&t.push(s);for(let e=0;e<s.children.length;e++)t.push(...OS(s.children[e]));return t}class LA extends cn{constructor(t,e,n){const i=new _c(e,4,2),o=new Ta({wireframe:!0,fog:!1,toneMapped:!1});super(i,o),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const PA=new I,G_=new Gt,k_=new Gt;class IA extends Le{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new vc(e);i.rotateY(Math.PI*.5),this.material=new Ta({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const o=i.getAttribute("position"),l=new Float32Array(o.count*3);i.setAttribute("color",new We(l,3)),this.add(new cn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");G_.copy(this.light.color),k_.copy(this.light.groundColor);for(let n=0,i=e.count;n<i;n++){const o=n<i/2?G_:k_;e.setXYZ(n,o.r,o.g,o.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(PA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class OA extends xs{constructor(t=10,e=10,n=4473924,i=8947848){n=new Gt(n),i=new Gt(i);const o=e/2,l=t/e,c=t/2,h=[],f=[];for(let g=0,v=0,x=-c;g<=e;g++,x+=l){h.push(-c,0,x,c,0,x),h.push(x,0,-c,x,0,c);const b=g===o?n:i;b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3,b.toArray(f,v),v+=3}const p=new ye;p.setAttribute("position",new Zt(h,3)),p.setAttribute("color",new Zt(f,3));const m=new ei({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class zA extends xs{constructor(t=10,e=16,n=8,i=64,o=4473924,l=8947848){o=new Gt(o),l=new Gt(l);const c=[],h=[];if(e>1)for(let m=0;m<e;m++){const g=m/e*(Math.PI*2),v=Math.sin(g)*t,x=Math.cos(g)*t;c.push(0,0,0),c.push(v,0,x);const b=m&1?o:l;h.push(b.r,b.g,b.b),h.push(b.r,b.g,b.b)}for(let m=0;m<n;m++){const g=m&1?o:l,v=t-t/n*m;for(let x=0;x<i;x++){let b=x/i*(Math.PI*2),S=Math.sin(b)*v,_=Math.cos(b)*v;c.push(S,0,_),h.push(g.r,g.g,g.b),b=(x+1)/i*(Math.PI*2),S=Math.sin(b)*v,_=Math.cos(b)*v,c.push(S,0,_),h.push(g.r,g.g,g.b)}}const f=new ye;f.setAttribute("position",new Zt(c,3)),f.setAttribute("color",new Zt(h,3));const p=new ei({vertexColors:!0,toneMapped:!1});super(f,p),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const W_=new I,ku=new I,X_=new I;class BA extends Le{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new ye;i.setAttribute("position",new Zt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const o=new ei({fog:!1,toneMapped:!1});this.lightPlane=new ba(i,o),this.add(this.lightPlane),i=new ye,i.setAttribute("position",new Zt([0,0,0,0,0,1],3)),this.targetLine=new ba(i,o),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),W_.setFromMatrixPosition(this.light.matrixWorld),ku.setFromMatrixPosition(this.light.target.matrixWorld),X_.subVectors(ku,W_),this.lightPlane.lookAt(ku),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(ku),this.targetLine.scale.z=X_.length()}}const Wu=new I,an=new hf;class FA extends xs{constructor(t){const e=new ye,n=new ei({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],o=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(x,b){h(x),h(b)}function h(x){i.push(0,0,0),o.push(0,0,0),l[x]===void 0&&(l[x]=[]),l[x].push(i.length/3-1)}e.setAttribute("position",new Zt(i,3)),e.setAttribute("color",new Zt(o,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const f=new Gt(16755200),p=new Gt(16711680),m=new Gt(43775),g=new Gt(16777215),v=new Gt(3355443);this.setColors(f,p,m,g,v)}setColors(t,e,n,i,o){const c=this.geometry.getAttribute("color");c.setXYZ(0,t.r,t.g,t.b),c.setXYZ(1,t.r,t.g,t.b),c.setXYZ(2,t.r,t.g,t.b),c.setXYZ(3,t.r,t.g,t.b),c.setXYZ(4,t.r,t.g,t.b),c.setXYZ(5,t.r,t.g,t.b),c.setXYZ(6,t.r,t.g,t.b),c.setXYZ(7,t.r,t.g,t.b),c.setXYZ(8,t.r,t.g,t.b),c.setXYZ(9,t.r,t.g,t.b),c.setXYZ(10,t.r,t.g,t.b),c.setXYZ(11,t.r,t.g,t.b),c.setXYZ(12,t.r,t.g,t.b),c.setXYZ(13,t.r,t.g,t.b),c.setXYZ(14,t.r,t.g,t.b),c.setXYZ(15,t.r,t.g,t.b),c.setXYZ(16,t.r,t.g,t.b),c.setXYZ(17,t.r,t.g,t.b),c.setXYZ(18,t.r,t.g,t.b),c.setXYZ(19,t.r,t.g,t.b),c.setXYZ(20,t.r,t.g,t.b),c.setXYZ(21,t.r,t.g,t.b),c.setXYZ(22,t.r,t.g,t.b),c.setXYZ(23,t.r,t.g,t.b),c.setXYZ(24,e.r,e.g,e.b),c.setXYZ(25,e.r,e.g,e.b),c.setXYZ(26,e.r,e.g,e.b),c.setXYZ(27,e.r,e.g,e.b),c.setXYZ(28,e.r,e.g,e.b),c.setXYZ(29,e.r,e.g,e.b),c.setXYZ(30,e.r,e.g,e.b),c.setXYZ(31,e.r,e.g,e.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,o.r,o.g,o.b),c.setXYZ(41,o.r,o.g,o.b),c.setXYZ(42,o.r,o.g,o.b),c.setXYZ(43,o.r,o.g,o.b),c.setXYZ(44,o.r,o.g,o.b),c.setXYZ(45,o.r,o.g,o.b),c.setXYZ(46,o.r,o.g,o.b),c.setXYZ(47,o.r,o.g,o.b),c.setXYZ(48,o.r,o.g,o.b),c.setXYZ(49,o.r,o.g,o.b),c.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap,n=1,i=1;an.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const o=this.camera.coordinateSystem===Bi?-1:0;on("c",e,t,an,0,0,o),on("t",e,t,an,0,0,1),on("n1",e,t,an,-n,-i,o),on("n2",e,t,an,n,-i,o),on("n3",e,t,an,-n,i,o),on("n4",e,t,an,n,i,o),on("f1",e,t,an,-n,-i,1),on("f2",e,t,an,n,-i,1),on("f3",e,t,an,-n,i,1),on("f4",e,t,an,n,i,1),on("u1",e,t,an,n*.7,i*1.1,o),on("u2",e,t,an,-n*.7,i*1.1,o),on("u3",e,t,an,0,i*2,o),on("cf1",e,t,an,-n,0,1),on("cf2",e,t,an,n,0,1),on("cf3",e,t,an,0,-i,1),on("cf4",e,t,an,0,i,1),on("cn1",e,t,an,-n,0,o),on("cn2",e,t,an,n,0,o),on("cn3",e,t,an,0,-i,o),on("cn4",e,t,an,0,i,o),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function on(s,t,e,n,i,o,l){Wu.set(i,o,l).unproject(n);const c=t[s];if(c!==void 0){const h=e.getAttribute("position");for(let f=0,p=c.length;f<p;f++)h.setXYZ(c[f],Wu.x,Wu.y,Wu.z)}}const Xu=new vn;class HA extends xs{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),o=new ye;o.setIndex(new We(n,1)),o.setAttribute("position",new We(i,3)),super(o,new ei({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Xu.setFromObject(this.object),Xu.isEmpty())return;const t=Xu.min,e=Xu.max,n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class VA extends xs{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],o=new ye;o.setIndex(new We(n,1)),o.setAttribute("position",new Zt(i,3)),super(o,new ei({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class GA extends ba{constructor(t,e=1,n=16776960){const i=n,o=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new ye;l.setAttribute("position",new Zt(o,3)),l.computeBoundingSphere(),super(l,new ei({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],h=new ye;h.setAttribute("position",new Zt(c,3)),h.computeBoundingSphere(),this.add(new cn(h,new Ta({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const q_=new I;let qu,Fp;class kA extends Le{constructor(t=new I(0,0,1),e=new I(0,0,0),n=1,i=16776960,o=n*.2,l=o*.2){super(),this.type="ArrowHelper",qu===void 0&&(qu=new ye,qu.setAttribute("position",new Zt([0,0,0,0,1,0],3)),Fp=new gc(.5,1,5,1),Fp.translate(0,-.5,0)),this.position.copy(e),this.line=new ba(qu,new ei({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new cn(Fp,new Ta({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,o,l)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{q_.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(q_,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class WA extends xs{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new ye;i.setAttribute("position",new Zt(e,3)),i.setAttribute("color",new Zt(n,3));const o=new ei({vertexColors:!0,toneMapped:!1});super(i,o),this.type="AxesHelper"}setColors(t,e,n){const i=new Gt,o=this.geometry.attributes.color.array;return i.set(t),i.toArray(o,0),i.toArray(o,3),i.set(e),i.toArray(o,6),i.toArray(o,9),i.set(n),i.toArray(o,12),i.toArray(o,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class XA{constructor(){this.type="ShapePath",this.color=new Gt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Yh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,o,l){return this.currentPath.bezierCurveTo(t,e,n,i,o,l),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(_){const E=[];for(let T=0,A=_.length;T<A;T++){const N=_[T],D=new vr;D.curves=N.curves,E.push(D)}return E}function n(_,E){const T=E.length;let A=!1;for(let N=T-1,D=0;D<T;N=D++){let P=E[N],z=E[D],C=z.x-P.x,w=z.y-P.y;if(Math.abs(w)>Number.EPSILON){if(w<0&&(P=E[D],C=-C,z=E[N],w=-w),_.y<P.y||_.y>z.y)continue;if(_.y===P.y){if(_.x===P.x)return!0}else{const F=w*(_.x-P.x)-C*(_.y-P.y);if(F===0)return!0;if(F<0)continue;A=!A}}else{if(_.y!==P.y)continue;if(z.x<=_.x&&_.x<=P.x||P.x<=_.x&&_.x<=z.x)return!0}}return A}const i=Qi.isClockWise,o=this.subPaths;if(o.length===0)return[];let l,c,h;const f=[];if(o.length===1)return c=o[0],h=new vr,h.curves=c.curves,f.push(h),f;let p=!i(o[0].getPoints());p=t?!p:p;const m=[],g=[];let v=[],x=0,b;g[x]=void 0,v[x]=[];for(let _=0,E=o.length;_<E;_++)c=o[_],b=c.getPoints(),l=i(b),l=t?!l:l,l?(!p&&g[x]&&x++,g[x]={s:new vr,p:b},g[x].s.curves=c.curves,p&&x++,v[x]=[]):v[x].push({h:c,p:b[0]});if(!g[0])return e(o);if(g.length>1){let _=!1,E=0;for(let T=0,A=g.length;T<A;T++)m[T]=[];for(let T=0,A=g.length;T<A;T++){const N=v[T];for(let D=0;D<N.length;D++){const P=N[D];let z=!0;for(let C=0;C<g.length;C++)n(P.p,g[C].p)&&(T!==C&&E++,z?(z=!1,m[C].push(P)):_=!0);z&&m[T].push(P)}}E>0&&_===!1&&(v=m)}let S;for(let _=0,E=g.length;_<E;_++){h=g[_].s,f.push(h),S=v[_];for(let T=0,A=S.length;T<A;T++)h.holes.push(S[T].h)}return f}}class qA extends ys{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){if(t===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=t}disconnect(){}dispose(){}update(){}}function YA(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2):(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0),s}function ZA(s,t){const e=s.image&&s.image.width?s.image.width/s.image.height:1;return e>t?(s.repeat.x=t/e,s.repeat.y=1,s.offset.x=(1-s.repeat.x)/2,s.offset.y=0):(s.repeat.x=1,s.repeat.y=e/t,s.offset.x=0,s.offset.y=(1-s.repeat.y)/2),s}function jA(s){return s.repeat.x=1,s.repeat.y=1,s.offset.x=0,s.offset.y=0,s}function Tm(s,t,e,n){const i=KA(n);switch(e){case Hm:return s*t;case af:return s*t/i.components*i.byteLength;case dc:return s*t/i.components*i.byteLength;case Gm:return s*t*2/i.components*i.byteLength;case rf:return s*t*2/i.components*i.byteLength;case Vm:return s*t*3/i.components*i.byteLength;case Wn:return s*t*4/i.components*i.byteLength;case of:return s*t*4/i.components*i.byteLength;case Fl:case Hl:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case Vl:case Gl:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case vh:case yh:return Math.max(s,16)*Math.max(t,8)/4;case gh:case _h:return Math.max(s,8)*Math.max(t,8)/2;case xh:case Sh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*8;case Mh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case bh:return Math.floor((s+3)/4)*Math.floor((t+3)/4)*16;case Eh:return Math.floor((s+4)/5)*Math.floor((t+3)/4)*16;case Th:return Math.floor((s+4)/5)*Math.floor((t+4)/5)*16;case Ah:return Math.floor((s+5)/6)*Math.floor((t+4)/5)*16;case wh:return Math.floor((s+5)/6)*Math.floor((t+5)/6)*16;case Ch:return Math.floor((s+7)/8)*Math.floor((t+4)/5)*16;case Rh:return Math.floor((s+7)/8)*Math.floor((t+5)/6)*16;case Dh:return Math.floor((s+7)/8)*Math.floor((t+7)/8)*16;case Uh:return Math.floor((s+9)/10)*Math.floor((t+4)/5)*16;case Nh:return Math.floor((s+9)/10)*Math.floor((t+5)/6)*16;case Lh:return Math.floor((s+9)/10)*Math.floor((t+7)/8)*16;case Ph:return Math.floor((s+9)/10)*Math.floor((t+9)/10)*16;case Ih:return Math.floor((s+11)/12)*Math.floor((t+9)/10)*16;case Oh:return Math.floor((s+11)/12)*Math.floor((t+11)/12)*16;case kl:case zh:case Bh:return Math.ceil(s/4)*Math.ceil(t/4)*16;case km:case Fh:return Math.ceil(s/4)*Math.ceil(t/4)*8;case Hh:case Vh:return Math.ceil(s/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function KA(s){switch(s){case Fi:case zm:return{byteLength:1,components:1};case Ro:case Bm:case Vo:return{byteLength:2,components:1};case nf:case sf:return{byteLength:2,components:4};case qs:case ef:case ci:return{byteLength:4,components:1};case Fm:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${s}.`)}class JA{static contain(t,e){return YA(t,e)}static cover(t,e){return ZA(t,e)}static fill(t){return jA(t)}static getByteLength(t,e,n,i){return Tm(t,e,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Fo}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Fo);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function zS(){let s=null,t=!1,e=null,n=null;function i(o,l){e(o,l),n=s.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=s.requestAnimationFrame(i),t=!0)},stop:function(){s.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(o){e=o},setContext:function(o){s=o}}}function QA(s){const t=new WeakMap;function e(c,h){const f=c.array,p=c.usage,m=f.byteLength,g=s.createBuffer();s.bindBuffer(h,g),s.bufferData(h,f,p),c.onUploadCallback();let v;if(f instanceof Float32Array)v=s.FLOAT;else if(typeof Float16Array<"u"&&f instanceof Float16Array)v=s.HALF_FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=s.HALF_FLOAT:v=s.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=s.SHORT;else if(f instanceof Uint32Array)v=s.UNSIGNED_INT;else if(f instanceof Int32Array)v=s.INT;else if(f instanceof Int8Array)v=s.BYTE;else if(f instanceof Uint8Array)v=s.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:g,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:m}}function n(c,h,f){const p=h.array,m=h.updateRanges;if(s.bindBuffer(f,c),m.length===0)s.bufferSubData(f,0,p);else{m.sort((v,x)=>v.start-x.start);let g=0;for(let v=1;v<m.length;v++){const x=m[g],b=m[v];b.start<=x.start+x.count+1?x.count=Math.max(x.count,b.start+b.count-x.start):(++g,m[g]=b)}m.length=g+1;for(let v=0,x=m.length;v<x;v++){const b=m[v];s.bufferSubData(f,b.start*p.BYTES_PER_ELEMENT,p,b.start,b.count)}h.clearUpdateRanges()}h.onUploadCallback()}function i(c){return c.isInterleavedBufferAttribute&&(c=c.data),t.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=t.get(c);h&&(s.deleteBuffer(h.buffer),t.delete(c))}function l(c,h){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const p=t.get(c);(!p||p.version<c.version)&&t.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=t.get(c);if(f===void 0)t.set(c,e(c,h));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,h),f.version=c.version}}return{get:i,remove:o,update:l}}var $A=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,tw=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,ew=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,nw=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,iw=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,sw=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,aw=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,rw=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,ow=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,lw=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,cw=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,uw=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,hw=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,fw=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,dw=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,pw=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,mw=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,gw=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,vw=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,_w=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,yw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,xw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,Sw=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,Mw=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,bw=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Ew=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Tw=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Aw=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,ww=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Cw=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Rw="gl_FragColor = linearToOutputTexel( gl_FragColor );",Dw=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Uw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Nw=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Lw=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Pw=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Iw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Ow=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,zw=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Bw=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Fw=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Hw=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Vw=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Gw=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,kw=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Ww=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Xw=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,qw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Yw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Zw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,jw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Kw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Jw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Qw=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,$w=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,tC=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,eC=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,nC=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,iC=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,sC=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,aC=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,rC=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,oC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,lC=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,cC=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,uC=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,hC=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,fC=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,dC=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,pC=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,mC=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,gC=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,vC=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,_C=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,yC=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,xC=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,SC=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,MC=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,bC=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,EC=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,TC=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,AC=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,wC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,CC=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,RC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,DC=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,UC=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,NC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,LC=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,PC=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,IC=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,OC=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,zC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,BC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,FC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,HC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,VC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,GC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,kC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,WC=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,XC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,qC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,YC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,ZC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,jC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,KC=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,JC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const QC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,$C=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,tR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,eR=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,nR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,iR=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,sR=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,aR=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,rR=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,oR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,lR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,cR=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,uR=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,hR=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,fR=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,dR=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pR=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,mR=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gR=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,vR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,_R=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,yR=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,xR=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,SR=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,MR=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,bR=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ER=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,TR=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,AR=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,wR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,CR=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,RR=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,DR=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,UR=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,xe={alphahash_fragment:$A,alphahash_pars_fragment:tw,alphamap_fragment:ew,alphamap_pars_fragment:nw,alphatest_fragment:iw,alphatest_pars_fragment:sw,aomap_fragment:aw,aomap_pars_fragment:rw,batching_pars_vertex:ow,batching_vertex:lw,begin_vertex:cw,beginnormal_vertex:uw,bsdfs:hw,iridescence_fragment:fw,bumpmap_pars_fragment:dw,clipping_planes_fragment:pw,clipping_planes_pars_fragment:mw,clipping_planes_pars_vertex:gw,clipping_planes_vertex:vw,color_fragment:_w,color_pars_fragment:yw,color_pars_vertex:xw,color_vertex:Sw,common:Mw,cube_uv_reflection_fragment:bw,defaultnormal_vertex:Ew,displacementmap_pars_vertex:Tw,displacementmap_vertex:Aw,emissivemap_fragment:ww,emissivemap_pars_fragment:Cw,colorspace_fragment:Rw,colorspace_pars_fragment:Dw,envmap_fragment:Uw,envmap_common_pars_fragment:Nw,envmap_pars_fragment:Lw,envmap_pars_vertex:Pw,envmap_physical_pars_fragment:Xw,envmap_vertex:Iw,fog_vertex:Ow,fog_pars_vertex:zw,fog_fragment:Bw,fog_pars_fragment:Fw,gradientmap_pars_fragment:Hw,lightmap_pars_fragment:Vw,lights_lambert_fragment:Gw,lights_lambert_pars_fragment:kw,lights_pars_begin:Ww,lights_toon_fragment:qw,lights_toon_pars_fragment:Yw,lights_phong_fragment:Zw,lights_phong_pars_fragment:jw,lights_physical_fragment:Kw,lights_physical_pars_fragment:Jw,lights_fragment_begin:Qw,lights_fragment_maps:$w,lights_fragment_end:tC,logdepthbuf_fragment:eC,logdepthbuf_pars_fragment:nC,logdepthbuf_pars_vertex:iC,logdepthbuf_vertex:sC,map_fragment:aC,map_pars_fragment:rC,map_particle_fragment:oC,map_particle_pars_fragment:lC,metalnessmap_fragment:cC,metalnessmap_pars_fragment:uC,morphinstance_vertex:hC,morphcolor_vertex:fC,morphnormal_vertex:dC,morphtarget_pars_vertex:pC,morphtarget_vertex:mC,normal_fragment_begin:gC,normal_fragment_maps:vC,normal_pars_fragment:_C,normal_pars_vertex:yC,normal_vertex:xC,normalmap_pars_fragment:SC,clearcoat_normal_fragment_begin:MC,clearcoat_normal_fragment_maps:bC,clearcoat_pars_fragment:EC,iridescence_pars_fragment:TC,opaque_fragment:AC,packing:wC,premultiplied_alpha_fragment:CC,project_vertex:RC,dithering_fragment:DC,dithering_pars_fragment:UC,roughnessmap_fragment:NC,roughnessmap_pars_fragment:LC,shadowmap_pars_fragment:PC,shadowmap_pars_vertex:IC,shadowmap_vertex:OC,shadowmask_pars_fragment:zC,skinbase_vertex:BC,skinning_pars_vertex:FC,skinning_vertex:HC,skinnormal_vertex:VC,specularmap_fragment:GC,specularmap_pars_fragment:kC,tonemapping_fragment:WC,tonemapping_pars_fragment:XC,transmission_fragment:qC,transmission_pars_fragment:YC,uv_pars_fragment:ZC,uv_pars_vertex:jC,uv_vertex:KC,worldpos_vertex:JC,background_vert:QC,background_frag:$C,backgroundCube_vert:tR,backgroundCube_frag:eR,cube_vert:nR,cube_frag:iR,depth_vert:sR,depth_frag:aR,distanceRGBA_vert:rR,distanceRGBA_frag:oR,equirect_vert:lR,equirect_frag:cR,linedashed_vert:uR,linedashed_frag:hR,meshbasic_vert:fR,meshbasic_frag:dR,meshlambert_vert:pR,meshlambert_frag:mR,meshmatcap_vert:gR,meshmatcap_frag:vR,meshnormal_vert:_R,meshnormal_frag:yR,meshphong_vert:xR,meshphong_frag:SR,meshphysical_vert:MR,meshphysical_frag:bR,meshtoon_vert:ER,meshtoon_frag:TR,points_vert:AR,points_frag:wR,shadow_vert:CR,shadow_frag:RR,sprite_vert:DR,sprite_frag:UR},Nt={common:{diffuse:{value:new Gt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new me},alphaMap:{value:null},alphaMapTransform:{value:new me},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new me}},envmap:{envMap:{value:null},envMapRotation:{value:new me},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new me}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new me}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new me},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new me},normalScale:{value:new ut(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new me},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new me}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new me}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new me}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Gt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Gt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new me},alphaTest:{value:0},uvTransform:{value:new me}},sprite:{diffuse:{value:new Gt(16777215)},opacity:{value:1},center:{value:new ut(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new me},alphaMap:{value:null},alphaMapTransform:{value:new me},alphaTest:{value:0}}},Ji={basic:{uniforms:Qn([Nt.common,Nt.specularmap,Nt.envmap,Nt.aomap,Nt.lightmap,Nt.fog]),vertexShader:xe.meshbasic_vert,fragmentShader:xe.meshbasic_frag},lambert:{uniforms:Qn([Nt.common,Nt.specularmap,Nt.envmap,Nt.aomap,Nt.lightmap,Nt.emissivemap,Nt.bumpmap,Nt.normalmap,Nt.displacementmap,Nt.fog,Nt.lights,{emissive:{value:new Gt(0)}}]),vertexShader:xe.meshlambert_vert,fragmentShader:xe.meshlambert_frag},phong:{uniforms:Qn([Nt.common,Nt.specularmap,Nt.envmap,Nt.aomap,Nt.lightmap,Nt.emissivemap,Nt.bumpmap,Nt.normalmap,Nt.displacementmap,Nt.fog,Nt.lights,{emissive:{value:new Gt(0)},specular:{value:new Gt(1118481)},shininess:{value:30}}]),vertexShader:xe.meshphong_vert,fragmentShader:xe.meshphong_frag},standard:{uniforms:Qn([Nt.common,Nt.envmap,Nt.aomap,Nt.lightmap,Nt.emissivemap,Nt.bumpmap,Nt.normalmap,Nt.displacementmap,Nt.roughnessmap,Nt.metalnessmap,Nt.fog,Nt.lights,{emissive:{value:new Gt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:xe.meshphysical_vert,fragmentShader:xe.meshphysical_frag},toon:{uniforms:Qn([Nt.common,Nt.aomap,Nt.lightmap,Nt.emissivemap,Nt.bumpmap,Nt.normalmap,Nt.displacementmap,Nt.gradientmap,Nt.fog,Nt.lights,{emissive:{value:new Gt(0)}}]),vertexShader:xe.meshtoon_vert,fragmentShader:xe.meshtoon_frag},matcap:{uniforms:Qn([Nt.common,Nt.bumpmap,Nt.normalmap,Nt.displacementmap,Nt.fog,{matcap:{value:null}}]),vertexShader:xe.meshmatcap_vert,fragmentShader:xe.meshmatcap_frag},points:{uniforms:Qn([Nt.points,Nt.fog]),vertexShader:xe.points_vert,fragmentShader:xe.points_frag},dashed:{uniforms:Qn([Nt.common,Nt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:xe.linedashed_vert,fragmentShader:xe.linedashed_frag},depth:{uniforms:Qn([Nt.common,Nt.displacementmap]),vertexShader:xe.depth_vert,fragmentShader:xe.depth_frag},normal:{uniforms:Qn([Nt.common,Nt.bumpmap,Nt.normalmap,Nt.displacementmap,{opacity:{value:1}}]),vertexShader:xe.meshnormal_vert,fragmentShader:xe.meshnormal_frag},sprite:{uniforms:Qn([Nt.sprite,Nt.fog]),vertexShader:xe.sprite_vert,fragmentShader:xe.sprite_frag},background:{uniforms:{uvTransform:{value:new me},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:xe.background_vert,fragmentShader:xe.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new me}},vertexShader:xe.backgroundCube_vert,fragmentShader:xe.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:xe.cube_vert,fragmentShader:xe.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:xe.equirect_vert,fragmentShader:xe.equirect_frag},distanceRGBA:{uniforms:Qn([Nt.common,Nt.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:xe.distanceRGBA_vert,fragmentShader:xe.distanceRGBA_frag},shadow:{uniforms:Qn([Nt.lights,Nt.fog,{color:{value:new Gt(0)},opacity:{value:1}}]),vertexShader:xe.shadow_vert,fragmentShader:xe.shadow_frag}};Ji.physical={uniforms:Qn([Ji.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new me},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new me},clearcoatNormalScale:{value:new ut(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new me},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new me},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new me},sheen:{value:0},sheenColor:{value:new Gt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new me},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new me},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new me},transmissionSamplerSize:{value:new ut},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new me},attenuationDistance:{value:0},attenuationColor:{value:new Gt(0)},specularColor:{value:new Gt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new me},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new me},anisotropyVector:{value:new ut},anisotropyMap:{value:null},anisotropyMapTransform:{value:new me}}]),vertexShader:xe.meshphysical_vert,fragmentShader:xe.meshphysical_frag};const Yu={r:0,b:0,g:0},ar=new Ti,NR=new oe;function LR(s,t,e,n,i,o,l){const c=new Gt(0);let h=o===!0?0:1,f,p,m=null,g=0,v=null;function x(T){let A=T.isScene===!0?T.background:null;return A&&A.isTexture&&(A=(T.backgroundBlurriness>0?e:t).get(A)),A}function b(T){let A=!1;const N=x(T);N===null?_(c,h):N&&N.isColor&&(_(N,1),A=!0);const D=s.xr.getEnvironmentBlendMode();D==="additive"?n.buffers.color.setClear(0,0,0,1,l):D==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(s.autoClear||A)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil))}function S(T,A){const N=x(A);N&&(N.isCubeTexture||N.mapping===Ho)?(p===void 0&&(p=new cn(new br(1,1,1),new Ai({name:"BackgroundCubeMaterial",uniforms:Io(Ji.backgroundCube.uniforms),vertexShader:Ji.backgroundCube.vertexShader,fragmentShader:Ji.backgroundCube.fragmentShader,side:ti,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(D,P,z){this.matrixWorld.copyPosition(z.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(p)),ar.copy(A.backgroundRotation),ar.x*=-1,ar.y*=-1,ar.z*=-1,N.isCubeTexture&&N.isRenderTargetTexture===!1&&(ar.y*=-1,ar.z*=-1),p.material.uniforms.envMap.value=N,p.material.uniforms.flipEnvMap.value=N.isCubeTexture&&N.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=A.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=A.backgroundIntensity,p.material.uniforms.backgroundRotation.value.setFromMatrix4(NR.makeRotationFromEuler(ar)),p.material.toneMapped=Re.getTransfer(N.colorSpace)!==Ve,(m!==N||g!==N.version||v!==s.toneMapping)&&(p.material.needsUpdate=!0,m=N,g=N.version,v=s.toneMapping),p.layers.enableAll(),T.unshift(p,p.geometry,p.material,0,0,null)):N&&N.isTexture&&(f===void 0&&(f=new cn(new ko(2,2),new Ai({name:"BackgroundMaterial",uniforms:Io(Ji.background.uniforms),vertexShader:Ji.background.vertexShader,fragmentShader:Ji.background.fragmentShader,side:Ws,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(f)),f.material.uniforms.t2D.value=N,f.material.uniforms.backgroundIntensity.value=A.backgroundIntensity,f.material.toneMapped=Re.getTransfer(N.colorSpace)!==Ve,N.matrixAutoUpdate===!0&&N.updateMatrix(),f.material.uniforms.uvTransform.value.copy(N.matrix),(m!==N||g!==N.version||v!==s.toneMapping)&&(f.material.needsUpdate=!0,m=N,g=N.version,v=s.toneMapping),f.layers.enableAll(),T.unshift(f,f.geometry,f.material,0,0,null))}function _(T,A){T.getRGB(Yu,Bx(s)),n.buffers.color.setClear(Yu.r,Yu.g,Yu.b,A,l)}function E(){p!==void 0&&(p.geometry.dispose(),p.material.dispose(),p=void 0),f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0)}return{getClearColor:function(){return c},setClearColor:function(T,A=1){c.set(T),h=A,_(c,h)},getClearAlpha:function(){return h},setClearAlpha:function(T){h=T,_(c,h)},render:b,addToRenderList:S,dispose:E}}function PR(s,t){const e=s.getParameter(s.MAX_VERTEX_ATTRIBS),n={},i=g(null);let o=i,l=!1;function c(w,F,$,W,J){let rt=!1;const k=m(W,$,F);o!==k&&(o=k,f(o.object)),rt=v(w,W,$,J),rt&&x(w,W,$,J),J!==null&&t.update(J,s.ELEMENT_ARRAY_BUFFER),(rt||l)&&(l=!1,A(w,F,$,W),J!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(J).buffer))}function h(){return s.createVertexArray()}function f(w){return s.bindVertexArray(w)}function p(w){return s.deleteVertexArray(w)}function m(w,F,$){const W=$.wireframe===!0;let J=n[w.id];J===void 0&&(J={},n[w.id]=J);let rt=J[F.id];rt===void 0&&(rt={},J[F.id]=rt);let k=rt[W];return k===void 0&&(k=g(h()),rt[W]=k),k}function g(w){const F=[],$=[],W=[];for(let J=0;J<e;J++)F[J]=0,$[J]=0,W[J]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:$,attributeDivisors:W,object:w,attributes:{},index:null}}function v(w,F,$,W){const J=o.attributes,rt=F.attributes;let k=0;const et=$.getAttributes();for(const q in et)if(et[q].location>=0){const vt=J[q];let yt=rt[q];if(yt===void 0&&(q==="instanceMatrix"&&w.instanceMatrix&&(yt=w.instanceMatrix),q==="instanceColor"&&w.instanceColor&&(yt=w.instanceColor)),vt===void 0||vt.attribute!==yt||yt&&vt.data!==yt.data)return!0;k++}return o.attributesNum!==k||o.index!==W}function x(w,F,$,W){const J={},rt=F.attributes;let k=0;const et=$.getAttributes();for(const q in et)if(et[q].location>=0){let vt=rt[q];vt===void 0&&(q==="instanceMatrix"&&w.instanceMatrix&&(vt=w.instanceMatrix),q==="instanceColor"&&w.instanceColor&&(vt=w.instanceColor));const yt={};yt.attribute=vt,vt&&vt.data&&(yt.data=vt.data),J[q]=yt,k++}o.attributes=J,o.attributesNum=k,o.index=W}function b(){const w=o.newAttributes;for(let F=0,$=w.length;F<$;F++)w[F]=0}function S(w){_(w,0)}function _(w,F){const $=o.newAttributes,W=o.enabledAttributes,J=o.attributeDivisors;$[w]=1,W[w]===0&&(s.enableVertexAttribArray(w),W[w]=1),J[w]!==F&&(s.vertexAttribDivisor(w,F),J[w]=F)}function E(){const w=o.newAttributes,F=o.enabledAttributes;for(let $=0,W=F.length;$<W;$++)F[$]!==w[$]&&(s.disableVertexAttribArray($),F[$]=0)}function T(w,F,$,W,J,rt,k){k===!0?s.vertexAttribIPointer(w,F,$,J,rt):s.vertexAttribPointer(w,F,$,W,J,rt)}function A(w,F,$,W){b();const J=W.attributes,rt=$.getAttributes(),k=F.defaultAttributeValues;for(const et in rt){const q=rt[et];if(q.location>=0){let ct=J[et];if(ct===void 0&&(et==="instanceMatrix"&&w.instanceMatrix&&(ct=w.instanceMatrix),et==="instanceColor"&&w.instanceColor&&(ct=w.instanceColor)),ct!==void 0){const vt=ct.normalized,yt=ct.itemSize,Ot=t.get(ct);if(Ot===void 0)continue;const Qt=Ot.buffer,nt=Ot.type,St=Ot.bytesPerElement,qt=nt===s.INT||nt===s.UNSIGNED_INT||ct.gpuType===ef;if(ct.isInterleavedBufferAttribute){const Ut=ct.data,Yt=Ut.stride,fe=ct.offset;if(Ut.isInstancedInterleavedBuffer){for(let ee=0;ee<q.locationSize;ee++)_(q.location+ee,Ut.meshPerAttribute);w.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=Ut.meshPerAttribute*Ut.count)}else for(let ee=0;ee<q.locationSize;ee++)S(q.location+ee);s.bindBuffer(s.ARRAY_BUFFER,Qt);for(let ee=0;ee<q.locationSize;ee++)T(q.location+ee,yt/q.locationSize,nt,vt,Yt*St,(fe+yt/q.locationSize*ee)*St,qt)}else{if(ct.isInstancedBufferAttribute){for(let Ut=0;Ut<q.locationSize;Ut++)_(q.location+Ut,ct.meshPerAttribute);w.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=ct.meshPerAttribute*ct.count)}else for(let Ut=0;Ut<q.locationSize;Ut++)S(q.location+Ut);s.bindBuffer(s.ARRAY_BUFFER,Qt);for(let Ut=0;Ut<q.locationSize;Ut++)T(q.location+Ut,yt/q.locationSize,nt,vt,yt*St,yt/q.locationSize*Ut*St,qt)}}else if(k!==void 0){const vt=k[et];if(vt!==void 0)switch(vt.length){case 2:s.vertexAttrib2fv(q.location,vt);break;case 3:s.vertexAttrib3fv(q.location,vt);break;case 4:s.vertexAttrib4fv(q.location,vt);break;default:s.vertexAttrib1fv(q.location,vt)}}}}E()}function N(){z();for(const w in n){const F=n[w];for(const $ in F){const W=F[$];for(const J in W)p(W[J].object),delete W[J];delete F[$]}delete n[w]}}function D(w){if(n[w.id]===void 0)return;const F=n[w.id];for(const $ in F){const W=F[$];for(const J in W)p(W[J].object),delete W[J];delete F[$]}delete n[w.id]}function P(w){for(const F in n){const $=n[F];if($[w.id]===void 0)continue;const W=$[w.id];for(const J in W)p(W[J].object),delete W[J];delete $[w.id]}}function z(){C(),l=!0,o!==i&&(o=i,f(o.object))}function C(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:c,reset:z,resetDefaultState:C,dispose:N,releaseStatesOfGeometry:D,releaseStatesOfProgram:P,initAttributes:b,enableAttribute:S,disableUnusedAttributes:E}}function IR(s,t,e){let n;function i(f){n=f}function o(f,p){s.drawArrays(n,f,p),e.update(p,n,1)}function l(f,p,m){m!==0&&(s.drawArraysInstanced(n,f,p,m),e.update(p,n,m))}function c(f,p,m){if(m===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,p,0,m);let v=0;for(let x=0;x<m;x++)v+=p[x];e.update(v,n,1)}function h(f,p,m,g){if(m===0)return;const v=t.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<f.length;x++)l(f[x],p[x],g[x]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,p,0,g,0,m);let x=0;for(let b=0;b<m;b++)x+=p[b]*g[b];e.update(x,n,1)}}this.setMode=i,this.render=o,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=h}function OR(s,t,e,n){let i;function o(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const P=t.get("EXT_texture_filter_anisotropic");i=s.getParameter(P.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function l(P){return!(P!==Wn&&n.convert(P)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(P){const z=P===Vo&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(P!==Fi&&n.convert(P)!==s.getParameter(s.IMPLEMENTATION_COLOR_READ_TYPE)&&P!==ci&&!z)}function h(P){if(P==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";P="mediump"}return P==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=e.precision!==void 0?e.precision:"highp";const p=h(f);p!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",p,"instead."),f=p);const m=e.logarithmicDepthBuffer===!0,g=e.reverseDepthBuffer===!0&&t.has("EXT_clip_control"),v=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),x=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),b=s.getParameter(s.MAX_TEXTURE_SIZE),S=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),_=s.getParameter(s.MAX_VERTEX_ATTRIBS),E=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),T=s.getParameter(s.MAX_VARYING_VECTORS),A=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),N=x>0,D=s.getParameter(s.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:o,getMaxPrecision:h,textureFormatReadable:l,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:m,reverseDepthBuffer:g,maxTextures:v,maxVertexTextures:x,maxTextureSize:b,maxCubemapSize:S,maxAttributes:_,maxVertexUniforms:E,maxVaryings:T,maxFragmentUniforms:A,vertexTextures:N,maxSamples:D}}function zR(s){const t=this;let e=null,n=0,i=!1,o=!1;const l=new Fs,c=new me,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g){const v=m.length!==0||g||n!==0||i;return i=g,n=m.length,v},this.beginShadows=function(){o=!0,p(null)},this.endShadows=function(){o=!1},this.setGlobalState=function(m,g){e=p(m,g,0)},this.setState=function(m,g,v){const x=m.clippingPlanes,b=m.clipIntersection,S=m.clipShadows,_=s.get(m);if(!i||x===null||x.length===0||o&&!S)o?p(null):f();else{const E=o?0:n,T=E*4;let A=_.clippingState||null;h.value=A,A=p(x,g,T,v);for(let N=0;N!==T;++N)A[N]=e[N];_.clippingState=A,this.numIntersection=b?this.numPlanes:0,this.numPlanes+=E}};function f(){h.value!==e&&(h.value=e,h.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function p(m,g,v,x){const b=m!==null?m.length:0;let S=null;if(b!==0){if(S=h.value,x!==!0||S===null){const _=v+b*4,E=g.matrixWorldInverse;c.getNormalMatrix(E),(S===null||S.length<_)&&(S=new Float32Array(_));for(let T=0,A=v;T!==b;++T,A+=4)l.copy(m[T]).applyMatrix4(E,c),l.normal.toArray(S,A),S[A+3]=l.constant}h.value=S,h.needsUpdate=!0}return t.numPlanes=b,t.numIntersection=0,S}}function BR(s){let t=new WeakMap;function e(l,c){return c===Zl?l.mapping=Xs:c===jl&&(l.mapping=Sa),l}function n(l){if(l&&l.isTexture){const c=l.mapping;if(c===Zl||c===jl)if(t.has(l)){const h=t.get(l).texture;return e(h,l.mapping)}else{const h=l.image;if(h&&h.height>0){const f=new Hx(h.height);return f.fromEquirectangularTexture(s,l),t.set(l,f),l.addEventListener("dispose",i),e(f.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const h=t.get(c);h!==void 0&&(t.delete(c),h.dispose())}function o(){t=new WeakMap}return{get:n,dispose:o}}const To=4,Y_=[.125,.215,.35,.446,.526,.582],hr=20,Hp=new xa,Z_=new Gt;let Vp=null,Gp=0,kp=0,Wp=!1;const ur=(1+Math.sqrt(5))/2,_o=1/ur,j_=[new I(-ur,_o,0),new I(ur,_o,0),new I(-_o,0,ur),new I(_o,0,ur),new I(0,ur,-_o),new I(0,ur,_o),new I(-1,1,-1),new I(1,1,-1),new I(-1,1,1),new I(1,1,1)],FR=new I;class Am{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100,o={}){const{size:l=256,position:c=FR}=o;Vp=this._renderer.getRenderTarget(),Gp=this._renderer.getActiveCubeFace(),kp=this._renderer.getActiveMipmapLevel(),Wp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(l);const h=this._allocateTargets();return h.depthBuffer=!0,this._sceneToCubeUV(t,n,i,h,c),e>0&&this._blur(h,0,0,e),this._applyPMREM(h),this._cleanup(h),h}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Q_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=J_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Vp,Gp,kp),this._renderer.xr.enabled=Wp,t.scissorTest=!1,Zu(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Xs||t.mapping===Sa?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Vp=this._renderer.getRenderTarget(),Gp=this._renderer.getActiveCubeFace(),kp=this._renderer.getActiveMipmapLevel(),Wp=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:gn,minFilter:gn,generateMipmaps:!1,type:Vo,format:Wn,colorSpace:Ma,depthBuffer:!1},i=K_(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=K_(t,e,n);const{_lodMax:o}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=HR(o)),this._blurMaterial=VR(o,t,e)}return i}_compileMaterial(t){const e=new cn(this._lodPlanes[0],t);this._renderer.compile(e,Hp)}_sceneToCubeUV(t,e,n,i,o){const h=new ln(90,1,e,n),f=[1,-1,1,1,1,1],p=[1,1,1,-1,-1,-1],m=this._renderer,g=m.autoClear,v=m.toneMapping;m.getClearColor(Z_),m.toneMapping=gs,m.autoClear=!1;const x=new Ta({name:"PMREM.Background",side:ti,depthWrite:!1,depthTest:!1}),b=new cn(new br,x);let S=!1;const _=t.background;_?_.isColor&&(x.color.copy(_),t.background=null,S=!0):(x.color.copy(Z_),S=!0);for(let E=0;E<6;E++){const T=E%3;T===0?(h.up.set(0,f[E],0),h.position.set(o.x,o.y,o.z),h.lookAt(o.x+p[E],o.y,o.z)):T===1?(h.up.set(0,0,f[E]),h.position.set(o.x,o.y,o.z),h.lookAt(o.x,o.y+p[E],o.z)):(h.up.set(0,f[E],0),h.position.set(o.x,o.y,o.z),h.lookAt(o.x,o.y,o.z+p[E]));const A=this._cubeSize;Zu(i,T*A,E>2?A:0,A,A),m.setRenderTarget(i),S&&m.render(b,h),m.render(t,h)}b.geometry.dispose(),b.material.dispose(),m.toneMapping=v,m.autoClear=g,t.background=_}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===Xs||t.mapping===Sa;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Q_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=J_());const o=i?this._cubemapMaterial:this._equirectMaterial,l=new cn(this._lodPlanes[0],o),c=o.uniforms;c.envMap.value=t;const h=this._cubeSize;Zu(e,0,0,3*h,2*h),n.setRenderTarget(e),n.render(l,Hp)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let o=1;o<i;o++){const l=Math.sqrt(this._sigmas[o]*this._sigmas[o]-this._sigmas[o-1]*this._sigmas[o-1]),c=j_[(i-o-1)%j_.length];this._blur(t,o-1,o,l,c)}e.autoClear=n}_blur(t,e,n,i,o){const l=this._pingPongRenderTarget;this._halfBlur(t,l,e,n,i,"latitudinal",o),this._halfBlur(l,t,n,n,i,"longitudinal",o)}_halfBlur(t,e,n,i,o,l,c){const h=this._renderer,f=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,m=new cn(this._lodPlanes[i],f),g=f.uniforms,v=this._sizeLods[n]-1,x=isFinite(o)?Math.PI/(2*v):2*Math.PI/(2*hr-1),b=o/x,S=isFinite(o)?1+Math.floor(p*b):hr;S>hr&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${S} samples when the maximum is set to ${hr}`);const _=[];let E=0;for(let P=0;P<hr;++P){const z=P/b,C=Math.exp(-z*z/2);_.push(C),P===0?E+=C:P<S&&(E+=2*C)}for(let P=0;P<_.length;P++)_[P]=_[P]/E;g.envMap.value=t.texture,g.samples.value=S,g.weights.value=_,g.latitudinal.value=l==="latitudinal",c&&(g.poleAxis.value=c);const{_lodMax:T}=this;g.dTheta.value=x,g.mipInt.value=T-n;const A=this._sizeLods[i],N=3*A*(i>T-To?i-T+To:0),D=4*(this._cubeSize-A);Zu(e,N,D,3*A,2*A),h.setRenderTarget(e),h.render(m,Hp)}}function HR(s){const t=[],e=[],n=[];let i=s;const o=s-To+1+Y_.length;for(let l=0;l<o;l++){const c=Math.pow(2,i);e.push(c);let h=1/c;l>s-To?h=Y_[l-s+To-1]:l===0&&(h=0),n.push(h);const f=1/(c-2),p=-f,m=1+f,g=[p,p,m,p,m,m,p,p,m,m,p,m],v=6,x=6,b=3,S=2,_=1,E=new Float32Array(b*x*v),T=new Float32Array(S*x*v),A=new Float32Array(_*x*v);for(let D=0;D<v;D++){const P=D%3*2/3-1,z=D>2?0:-1,C=[P,z,0,P+2/3,z,0,P+2/3,z+1,0,P,z,0,P+2/3,z+1,0,P,z+1,0];E.set(C,b*x*D),T.set(g,S*x*D);const w=[D,D,D,D,D,D];A.set(w,_*x*D)}const N=new ye;N.setAttribute("position",new We(E,b)),N.setAttribute("uv",new We(T,S)),N.setAttribute("faceIndex",new We(A,_)),t.push(N),i>To&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function K_(s,t,e){const n=new _s(s,t,e);return n.texture.mapping=Ho,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Zu(s,t,e,n,i){s.viewport.set(t,e,n,i),s.scissor.set(t,e,n,i)}function VR(s,t,e){const n=new Float32Array(hr),i=new I(0,1,0);return new Ai({name:"SphericalGaussianBlur",defines:{n:hr,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Eg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Gs,depthTest:!1,depthWrite:!1})}function J_(){return new Ai({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Eg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Gs,depthTest:!1,depthWrite:!1})}function Q_(){return new Ai({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Eg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Gs,depthTest:!1,depthWrite:!1})}function Eg(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function GR(s){let t=new WeakMap,e=null;function n(c){if(c&&c.isTexture){const h=c.mapping,f=h===Zl||h===jl,p=h===Xs||h===Sa;if(f||p){let m=t.get(c);const g=m!==void 0?m.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==g)return e===null&&(e=new Am(s)),m=f?e.fromEquirectangular(c,m):e.fromCubemap(c,m),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),m.texture;if(m!==void 0)return m.texture;{const v=c.image;return f&&v&&v.height>0||p&&v&&i(v)?(e===null&&(e=new Am(s)),m=f?e.fromEquirectangular(c):e.fromCubemap(c),m.texture.pmremVersion=c.pmremVersion,t.set(c,m),c.addEventListener("dispose",o),m.texture):null}}}return c}function i(c){let h=0;const f=6;for(let p=0;p<f;p++)c[p]!==void 0&&h++;return h===f}function o(c){const h=c.target;h.removeEventListener("dispose",o);const f=t.get(h);f!==void 0&&(t.delete(h),f.dispose())}function l(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:l}}function kR(s){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const i=e(n);return i===null&&Ao("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function WR(s,t,e,n){const i={},o=new WeakMap;function l(m){const g=m.target;g.index!==null&&t.remove(g.index);for(const x in g.attributes)t.remove(g.attributes[x]);g.removeEventListener("dispose",l),delete i[g.id];const v=o.get(g);v&&(t.remove(v),o.delete(g)),n.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,e.memory.geometries--}function c(m,g){return i[g.id]===!0||(g.addEventListener("dispose",l),i[g.id]=!0,e.memory.geometries++),g}function h(m){const g=m.attributes;for(const v in g)t.update(g[v],s.ARRAY_BUFFER)}function f(m){const g=[],v=m.index,x=m.attributes.position;let b=0;if(v!==null){const E=v.array;b=v.version;for(let T=0,A=E.length;T<A;T+=3){const N=E[T+0],D=E[T+1],P=E[T+2];g.push(N,D,D,P,P,N)}}else if(x!==void 0){const E=x.array;b=x.version;for(let T=0,A=E.length/3-1;T<A;T+=3){const N=T+0,D=T+1,P=T+2;g.push(N,D,D,P,P,N)}}else return;const S=new(Px(g)?Km:jm)(g,1);S.version=b;const _=o.get(m);_&&t.remove(_),o.set(m,S)}function p(m){const g=o.get(m);if(g){const v=m.index;v!==null&&g.version<v.version&&f(m)}else f(m);return o.get(m)}return{get:c,update:h,getWireframeAttribute:p}}function XR(s,t,e){let n;function i(g){n=g}let o,l;function c(g){o=g.type,l=g.bytesPerElement}function h(g,v){s.drawElements(n,v,o,g*l),e.update(v,n,1)}function f(g,v,x){x!==0&&(s.drawElementsInstanced(n,v,o,g*l,x),e.update(v,n,x))}function p(g,v,x){if(x===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,o,g,0,x);let S=0;for(let _=0;_<x;_++)S+=v[_];e.update(S,n,1)}function m(g,v,x,b){if(x===0)return;const S=t.get("WEBGL_multi_draw");if(S===null)for(let _=0;_<g.length;_++)f(g[_]/l,v[_],b[_]);else{S.multiDrawElementsInstancedWEBGL(n,v,0,o,g,0,b,0,x);let _=0;for(let E=0;E<x;E++)_+=v[E]*b[E];e.update(_,n,1)}}this.setMode=i,this.setIndex=c,this.render=h,this.renderInstances=f,this.renderMultiDraw=p,this.renderMultiDrawInstances=m}function qR(s){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(o,l,c){switch(e.calls++,l){case s.TRIANGLES:e.triangles+=c*(o/3);break;case s.LINES:e.lines+=c*(o/2);break;case s.LINE_STRIP:e.lines+=c*(o-1);break;case s.LINE_LOOP:e.lines+=c*o;break;case s.POINTS:e.points+=c*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function YR(s,t,e){const n=new WeakMap,i=new Me;function o(l,c,h){const f=l.morphTargetInfluences,p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=p!==void 0?p.length:0;let g=n.get(c);if(g===void 0||g.count!==m){let C=function(){P.dispose(),n.delete(c),c.removeEventListener("dispose",C)};g!==void 0&&g.texture.dispose();const v=c.morphAttributes.position!==void 0,x=c.morphAttributes.normal!==void 0,b=c.morphAttributes.color!==void 0,S=c.morphAttributes.position||[],_=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let T=0;v===!0&&(T=1),x===!0&&(T=2),b===!0&&(T=3);let A=c.attributes.position.count*T,N=1;A>t.maxTextureSize&&(N=Math.ceil(A/t.maxTextureSize),A=t.maxTextureSize);const D=new Float32Array(A*N*4*m),P=new cf(D,A,N,m);P.type=ci,P.needsUpdate=!0;const z=T*4;for(let w=0;w<m;w++){const F=S[w],$=_[w],W=E[w],J=A*N*4*w;for(let rt=0;rt<F.count;rt++){const k=rt*z;v===!0&&(i.fromBufferAttribute(F,rt),D[J+k+0]=i.x,D[J+k+1]=i.y,D[J+k+2]=i.z,D[J+k+3]=0),x===!0&&(i.fromBufferAttribute($,rt),D[J+k+4]=i.x,D[J+k+5]=i.y,D[J+k+6]=i.z,D[J+k+7]=0),b===!0&&(i.fromBufferAttribute(W,rt),D[J+k+8]=i.x,D[J+k+9]=i.y,D[J+k+10]=i.z,D[J+k+11]=W.itemSize===4?i.w:1)}}g={count:m,texture:P,size:new ut(A,N)},n.set(c,g),c.addEventListener("dispose",C)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)h.getUniforms().setValue(s,"morphTexture",l.morphTexture,e);else{let v=0;for(let b=0;b<f.length;b++)v+=f[b];const x=c.morphTargetsRelative?1:1-v;h.getUniforms().setValue(s,"morphTargetBaseInfluence",x),h.getUniforms().setValue(s,"morphTargetInfluences",f)}h.getUniforms().setValue(s,"morphTargetsTexture",g.texture,e),h.getUniforms().setValue(s,"morphTargetsTextureSize",g.size)}return{update:o}}function ZR(s,t,e,n){let i=new WeakMap;function o(h){const f=n.render.frame,p=h.geometry,m=t.get(h,p);if(i.get(m)!==f&&(t.update(m),i.set(m,f)),h.isInstancedMesh&&(h.hasEventListener("dispose",c)===!1&&h.addEventListener("dispose",c),i.get(h)!==f&&(e.update(h.instanceMatrix,s.ARRAY_BUFFER),h.instanceColor!==null&&e.update(h.instanceColor,s.ARRAY_BUFFER),i.set(h,f))),h.isSkinnedMesh){const g=h.skeleton;i.get(g)!==f&&(g.update(),i.set(g,f))}return m}function l(){i=new WeakMap}function c(h){const f=h.target;f.removeEventListener("dispose",c),e.remove(f.instanceMatrix),f.instanceColor!==null&&e.remove(f.instanceColor)}return{update:o,dispose:l}}const BS=new rn,$_=new eg(1,1),FS=new cf,HS=new uf,VS=new pc,ty=[],ey=[],ny=new Float32Array(16),iy=new Float32Array(9),sy=new Float32Array(4);function Wo(s,t,e){const n=s[0];if(n<=0||n>0)return s;const i=t*e;let o=ty[i];if(o===void 0&&(o=new Float32Array(i),ty[i]=o),t!==0){n.toArray(o,0);for(let l=1,c=0;l!==t;++l)c+=e,s[l].toArray(o,c)}return o}function yn(s,t){if(s.length!==t.length)return!1;for(let e=0,n=s.length;e<n;e++)if(s[e]!==t[e])return!1;return!0}function xn(s,t){for(let e=0,n=t.length;e<n;e++)s[e]=t[e]}function Nf(s,t){let e=ey[t];e===void 0&&(e=new Int32Array(t),ey[t]=e);for(let n=0;n!==t;++n)e[n]=s.allocateTextureUnit();return e}function jR(s,t){const e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function KR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(yn(e,t))return;s.uniform2fv(this.addr,t),xn(e,t)}}function JR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(yn(e,t))return;s.uniform3fv(this.addr,t),xn(e,t)}}function QR(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(yn(e,t))return;s.uniform4fv(this.addr,t),xn(e,t)}}function $R(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(yn(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),xn(e,t)}else{if(yn(e,n))return;sy.set(n),s.uniformMatrix2fv(this.addr,!1,sy),xn(e,n)}}function t2(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(yn(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),xn(e,t)}else{if(yn(e,n))return;iy.set(n),s.uniformMatrix3fv(this.addr,!1,iy),xn(e,n)}}function e2(s,t){const e=this.cache,n=t.elements;if(n===void 0){if(yn(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),xn(e,t)}else{if(yn(e,n))return;ny.set(n),s.uniformMatrix4fv(this.addr,!1,ny),xn(e,n)}}function n2(s,t){const e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function i2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(yn(e,t))return;s.uniform2iv(this.addr,t),xn(e,t)}}function s2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(yn(e,t))return;s.uniform3iv(this.addr,t),xn(e,t)}}function a2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(yn(e,t))return;s.uniform4iv(this.addr,t),xn(e,t)}}function r2(s,t){const e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function o2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(yn(e,t))return;s.uniform2uiv(this.addr,t),xn(e,t)}}function l2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(yn(e,t))return;s.uniform3uiv(this.addr,t),xn(e,t)}}function c2(s,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(yn(e,t))return;s.uniform4uiv(this.addr,t),xn(e,t)}}function u2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i);let o;this.type===s.SAMPLER_2D_SHADOW?($_.compareFunction=Xm,o=$_):o=BS,e.setTexture2D(t||o,i)}function h2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||HS,i)}function f2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||VS,i)}function d2(s,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||FS,i)}function p2(s){switch(s){case 5126:return jR;case 35664:return KR;case 35665:return JR;case 35666:return QR;case 35674:return $R;case 35675:return t2;case 35676:return e2;case 5124:case 35670:return n2;case 35667:case 35671:return i2;case 35668:case 35672:return s2;case 35669:case 35673:return a2;case 5125:return r2;case 36294:return o2;case 36295:return l2;case 36296:return c2;case 35678:case 36198:case 36298:case 36306:case 35682:return u2;case 35679:case 36299:case 36307:return h2;case 35680:case 36300:case 36308:case 36293:return f2;case 36289:case 36303:case 36311:case 36292:return d2}}function m2(s,t){s.uniform1fv(this.addr,t)}function g2(s,t){const e=Wo(t,this.size,2);s.uniform2fv(this.addr,e)}function v2(s,t){const e=Wo(t,this.size,3);s.uniform3fv(this.addr,e)}function _2(s,t){const e=Wo(t,this.size,4);s.uniform4fv(this.addr,e)}function y2(s,t){const e=Wo(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function x2(s,t){const e=Wo(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function S2(s,t){const e=Wo(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function M2(s,t){s.uniform1iv(this.addr,t)}function b2(s,t){s.uniform2iv(this.addr,t)}function E2(s,t){s.uniform3iv(this.addr,t)}function T2(s,t){s.uniform4iv(this.addr,t)}function A2(s,t){s.uniform1uiv(this.addr,t)}function w2(s,t){s.uniform2uiv(this.addr,t)}function C2(s,t){s.uniform3uiv(this.addr,t)}function R2(s,t){s.uniform4uiv(this.addr,t)}function D2(s,t,e){const n=this.cache,i=t.length,o=Nf(e,i);yn(n,o)||(s.uniform1iv(this.addr,o),xn(n,o));for(let l=0;l!==i;++l)e.setTexture2D(t[l]||BS,o[l])}function U2(s,t,e){const n=this.cache,i=t.length,o=Nf(e,i);yn(n,o)||(s.uniform1iv(this.addr,o),xn(n,o));for(let l=0;l!==i;++l)e.setTexture3D(t[l]||HS,o[l])}function N2(s,t,e){const n=this.cache,i=t.length,o=Nf(e,i);yn(n,o)||(s.uniform1iv(this.addr,o),xn(n,o));for(let l=0;l!==i;++l)e.setTextureCube(t[l]||VS,o[l])}function L2(s,t,e){const n=this.cache,i=t.length,o=Nf(e,i);yn(n,o)||(s.uniform1iv(this.addr,o),xn(n,o));for(let l=0;l!==i;++l)e.setTexture2DArray(t[l]||FS,o[l])}function P2(s){switch(s){case 5126:return m2;case 35664:return g2;case 35665:return v2;case 35666:return _2;case 35674:return y2;case 35675:return x2;case 35676:return S2;case 5124:case 35670:return M2;case 35667:case 35671:return b2;case 35668:case 35672:return E2;case 35669:case 35673:return T2;case 5125:return A2;case 36294:return w2;case 36295:return C2;case 36296:return R2;case 35678:case 36198:case 36298:case 36306:case 35682:return D2;case 35679:case 36299:case 36307:return U2;case 35680:case 36300:case 36308:case 36293:return N2;case 36289:case 36303:case 36311:case 36292:return L2}}class I2{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=p2(e.type)}}class O2{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=P2(e.type)}}class z2{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let o=0,l=i.length;o!==l;++o){const c=i[o];c.setValue(t,e[c.id],n)}}}const Xp=/(\w+)(\])?(\[|\.)?/g;function ay(s,t){s.seq.push(t),s.map[t.id]=t}function B2(s,t,e){const n=s.name,i=n.length;for(Xp.lastIndex=0;;){const o=Xp.exec(n),l=Xp.lastIndex;let c=o[1];const h=o[2]==="]",f=o[3];if(h&&(c=c|0),f===void 0||f==="["&&l+2===i){ay(e,f===void 0?new I2(c,s,t):new O2(c,s,t));break}else{let m=e.map[c];m===void 0&&(m=new z2(c),ay(e,m)),e=m}}}class sh{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const o=t.getActiveUniform(e,i),l=t.getUniformLocation(e,o.name);B2(o,l,this)}}setValue(t,e,n,i){const o=this.map[e];o!==void 0&&o.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let o=0,l=e.length;o!==l;++o){const c=e[o],h=n[c.id];h.needsUpdate!==!1&&c.setValue(t,h.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,o=t.length;i!==o;++i){const l=t[i];l.id in e&&n.push(l)}return n}}function ry(s,t,e){const n=s.createShader(t);return s.shaderSource(n,e),s.compileShader(n),n}const F2=37297;let H2=0;function V2(s,t){const e=s.split(`
`),n=[],i=Math.max(t-6,0),o=Math.min(t+6,e.length);for(let l=i;l<o;l++){const c=l+1;n.push(`${c===t?">":" "} ${c}: ${e[l]}`)}return n.join(`
`)}const oy=new me;function G2(s){Re._getMatrix(oy,Re.workingColorSpace,s);const t=`mat3( ${oy.elements.map(e=>e.toFixed(4))} )`;switch(Re.getTransfer(s)){case tc:return[t,"LinearTransferOETF"];case Ve:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",s),[t,"LinearTransferOETF"]}}function ly(s,t,e){const n=s.getShaderParameter(t,s.COMPILE_STATUS),i=s.getShaderInfoLog(t).trim();if(n&&i==="")return"";const o=/ERROR: 0:(\d+)/.exec(i);if(o){const l=parseInt(o[1]);return e.toUpperCase()+`

`+i+`

`+V2(s.getShaderSource(t),l)}else return i}function k2(s,t){const e=G2(t);return[`vec4 ${s}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function W2(s,t){let e;switch(t){case px:e="Linear";break;case mx:e="Reinhard";break;case gx:e="Cineon";break;case Im:e="ACESFilmic";break;case _x:e="AgX";break;case yx:e="Neutral";break;case vx:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const ju=new I;function X2(){Re.getLuminanceCoefficients(ju);const s=ju.x.toFixed(4),t=ju.y.toFixed(4),e=ju.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${s}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function q2(s){return[s.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",s.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ol).join(`
`)}function Y2(s){const t=[];for(const e in s){const n=s[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function Z2(s,t){const e={},n=s.getProgramParameter(t,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const o=s.getActiveAttrib(t,i),l=o.name;let c=1;o.type===s.FLOAT_MAT2&&(c=2),o.type===s.FLOAT_MAT3&&(c=3),o.type===s.FLOAT_MAT4&&(c=4),e[l]={type:o.type,location:s.getAttribLocation(t,l),locationSize:c}}return e}function Ol(s){return s!==""}function cy(s,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function uy(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const j2=/^[ \t]*#include +<([\w\d./]+)>/gm;function wm(s){return s.replace(j2,J2)}const K2=new Map;function J2(s,t){let e=xe[t];if(e===void 0){const n=K2.get(t);if(n!==void 0)e=xe[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return wm(e)}const Q2=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function hy(s){return s.replace(Q2,$2)}function $2(s,t,e,n){let i="";for(let o=parseInt(t);o<parseInt(e);o++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return i}function fy(s){let t=`precision ${s.precision} float;
	precision ${s.precision} int;
	precision ${s.precision} sampler2D;
	precision ${s.precision} samplerCube;
	precision ${s.precision} sampler3D;
	precision ${s.precision} sampler2DArray;
	precision ${s.precision} sampler2DShadow;
	precision ${s.precision} samplerCubeShadow;
	precision ${s.precision} sampler2DArrayShadow;
	precision ${s.precision} isampler2D;
	precision ${s.precision} isampler3D;
	precision ${s.precision} isamplerCube;
	precision ${s.precision} isampler2DArray;
	precision ${s.precision} usampler2D;
	precision ${s.precision} usampler3D;
	precision ${s.precision} usamplerCube;
	precision ${s.precision} usampler2DArray;
	`;return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function t3(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===$h?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===zl?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Ki&&(t="SHADOWMAP_TYPE_VSM"),t}function e3(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Xs:case Sa:t="ENVMAP_TYPE_CUBE";break;case Ho:t="ENVMAP_TYPE_CUBE_UV";break}return t}function n3(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Sa:t="ENVMAP_MODE_REFRACTION";break}return t}function i3(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case fc:t="ENVMAP_BLENDING_MULTIPLY";break;case fx:t="ENVMAP_BLENDING_MIX";break;case dx:t="ENVMAP_BLENDING_ADD";break}return t}function s3(s){const t=s.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),112)),texelHeight:n,maxMip:e}}function a3(s,t,e,n){const i=s.getContext(),o=e.defines;let l=e.vertexShader,c=e.fragmentShader;const h=t3(e),f=e3(e),p=n3(e),m=i3(e),g=s3(e),v=q2(e),x=Y2(o),b=i.createProgram();let S,_,E=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(S=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(Ol).join(`
`),S.length>0&&(S+=`
`),_=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x].filter(Ol).join(`
`),_.length>0&&(_+=`
`)):(S=[fy(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+p:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ol).join(`
`),_=[fy(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,x,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+f:"",e.envMap?"#define "+p:"",e.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==gs?"#define TONE_MAPPING":"",e.toneMapping!==gs?xe.tonemapping_pars_fragment:"",e.toneMapping!==gs?W2("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",xe.colorspace_pars_fragment,k2("linearToOutputTexel",e.outputColorSpace),X2(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(Ol).join(`
`)),l=wm(l),l=cy(l,e),l=uy(l,e),c=wm(c),c=cy(c,e),c=uy(c,e),l=hy(l),c=hy(c),e.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,S=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+S,_=["#define varying in",e.glslVersion===vm?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===vm?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const T=E+S+l,A=E+_+c,N=ry(i,i.VERTEX_SHADER,T),D=ry(i,i.FRAGMENT_SHADER,A);i.attachShader(b,N),i.attachShader(b,D),e.index0AttributeName!==void 0?i.bindAttribLocation(b,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(b,0,"position"),i.linkProgram(b);function P(F){if(s.debug.checkShaderErrors){const $=i.getProgramInfoLog(b).trim(),W=i.getShaderInfoLog(N).trim(),J=i.getShaderInfoLog(D).trim();let rt=!0,k=!0;if(i.getProgramParameter(b,i.LINK_STATUS)===!1)if(rt=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,b,N,D);else{const et=ly(i,N,"vertex"),q=ly(i,D,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(b,i.VALIDATE_STATUS)+`

Material Name: `+F.name+`
Material Type: `+F.type+`

Program Info Log: `+$+`
`+et+`
`+q)}else $!==""?console.warn("THREE.WebGLProgram: Program Info Log:",$):(W===""||J==="")&&(k=!1);k&&(F.diagnostics={runnable:rt,programLog:$,vertexShader:{log:W,prefix:S},fragmentShader:{log:J,prefix:_}})}i.deleteShader(N),i.deleteShader(D),z=new sh(i,b),C=Z2(i,b)}let z;this.getUniforms=function(){return z===void 0&&P(this),z};let C;this.getAttributes=function(){return C===void 0&&P(this),C};let w=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=i.getProgramParameter(b,F2)),w},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(b),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=H2++,this.cacheKey=t,this.usedTimes=1,this.program=b,this.vertexShader=N,this.fragmentShader=D,this}let r3=0;class o3{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),o=this._getShaderStage(n),l=this._getShaderCacheForMaterial(t);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(o)===!1&&(l.add(o),o.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new l3(t),e.set(t,n)),n}}class l3{constructor(t){this.id=r3++,this.code=t,this.usedTimes=0}}function c3(s,t,e,n,i,o,l){const c=new Po,h=new o3,f=new Set,p=[],m=i.logarithmicDepthBuffer,g=i.vertexTextures;let v=i.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function b(C){return f.add(C),C===0?"uv":`uv${C}`}function S(C,w,F,$,W){const J=$.fog,rt=W.geometry,k=C.isMeshStandardMaterial?$.environment:null,et=(C.isMeshStandardMaterial?e:t).get(C.envMap||k),q=et&&et.mapping===Ho?et.image.height:null,ct=x[C.type];C.precision!==null&&(v=i.getMaxPrecision(C.precision),v!==C.precision&&console.warn("THREE.WebGLProgram.getParameters:",C.precision,"not supported, using",v,"instead."));const vt=rt.morphAttributes.position||rt.morphAttributes.normal||rt.morphAttributes.color,yt=vt!==void 0?vt.length:0;let Ot=0;rt.morphAttributes.position!==void 0&&(Ot=1),rt.morphAttributes.normal!==void 0&&(Ot=2),rt.morphAttributes.color!==void 0&&(Ot=3);let Qt,nt,St,qt;if(ct){const Se=Ji[ct];Qt=Se.vertexShader,nt=Se.fragmentShader}else Qt=C.vertexShader,nt=C.fragmentShader,h.update(C),St=h.getVertexShaderID(C),qt=h.getFragmentShaderID(C);const Ut=s.getRenderTarget(),Yt=s.state.buffers.depth.getReversed(),fe=W.isInstancedMesh===!0,ee=W.isBatchedMesh===!0,Ue=!!C.map,ge=!!C.matcap,re=!!et,O=!!C.aoMap,Ct=!!C.lightMap,xt=!!C.bumpMap,At=!!C.normalMap,ht=!!C.displacementMap,Ht=!!C.emissiveMap,_t=!!C.metalnessMap,Bt=!!C.roughnessMap,ce=C.anisotropy>0,B=C.clearcoat>0,R=C.dispersion>0,K=C.iridescence>0,ot=C.sheen>0,pt=C.transmission>0,lt=ce&&!!C.anisotropyMap,Jt=B&&!!C.clearcoatMap,Dt=B&&!!C.clearcoatNormalMap,Xt=B&&!!C.clearcoatRoughnessMap,jt=K&&!!C.iridescenceMap,mt=K&&!!C.iridescenceThicknessMap,Pt=ot&&!!C.sheenColorMap,$t=ot&&!!C.sheenRoughnessMap,V=!!C.specularMap,Q=!!C.specularColorMap,bt=!!C.specularIntensityMap,H=pt&&!!C.transmissionMap,Tt=pt&&!!C.thicknessMap,gt=!!C.gradientMap,zt=!!C.alphaMap,Et=C.alphaTest>0,dt=!!C.alphaHash,Ft=!!C.extensions;let te=gs;C.toneMapped&&(Ut===null||Ut.isXRRenderTarget===!0)&&(te=s.toneMapping);const Te={shaderID:ct,shaderType:C.type,shaderName:C.name,vertexShader:Qt,fragmentShader:nt,defines:C.defines,customVertexShaderID:St,customFragmentShaderID:qt,isRawShaderMaterial:C.isRawShaderMaterial===!0,glslVersion:C.glslVersion,precision:v,batching:ee,batchingColor:ee&&W._colorsTexture!==null,instancing:fe,instancingColor:fe&&W.instanceColor!==null,instancingMorph:fe&&W.morphTexture!==null,supportsVertexTextures:g,outputColorSpace:Ut===null?s.outputColorSpace:Ut.isXRRenderTarget===!0?Ut.texture.colorSpace:Ma,alphaToCoverage:!!C.alphaToCoverage,map:Ue,matcap:ge,envMap:re,envMapMode:re&&et.mapping,envMapCubeUVHeight:q,aoMap:O,lightMap:Ct,bumpMap:xt,normalMap:At,displacementMap:g&&ht,emissiveMap:Ht,normalMapObjectSpace:At&&C.normalMapType===Ax,normalMapTangentSpace:At&&C.normalMapType===Ea,metalnessMap:_t,roughnessMap:Bt,anisotropy:ce,anisotropyMap:lt,clearcoat:B,clearcoatMap:Jt,clearcoatNormalMap:Dt,clearcoatRoughnessMap:Xt,dispersion:R,iridescence:K,iridescenceMap:jt,iridescenceThicknessMap:mt,sheen:ot,sheenColorMap:Pt,sheenRoughnessMap:$t,specularMap:V,specularColorMap:Q,specularIntensityMap:bt,transmission:pt,transmissionMap:H,thicknessMap:Tt,gradientMap:gt,opaque:C.transparent===!1&&C.blending===mr&&C.alphaToCoverage===!1,alphaMap:zt,alphaTest:Et,alphaHash:dt,combine:C.combine,mapUv:Ue&&b(C.map.channel),aoMapUv:O&&b(C.aoMap.channel),lightMapUv:Ct&&b(C.lightMap.channel),bumpMapUv:xt&&b(C.bumpMap.channel),normalMapUv:At&&b(C.normalMap.channel),displacementMapUv:ht&&b(C.displacementMap.channel),emissiveMapUv:Ht&&b(C.emissiveMap.channel),metalnessMapUv:_t&&b(C.metalnessMap.channel),roughnessMapUv:Bt&&b(C.roughnessMap.channel),anisotropyMapUv:lt&&b(C.anisotropyMap.channel),clearcoatMapUv:Jt&&b(C.clearcoatMap.channel),clearcoatNormalMapUv:Dt&&b(C.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Xt&&b(C.clearcoatRoughnessMap.channel),iridescenceMapUv:jt&&b(C.iridescenceMap.channel),iridescenceThicknessMapUv:mt&&b(C.iridescenceThicknessMap.channel),sheenColorMapUv:Pt&&b(C.sheenColorMap.channel),sheenRoughnessMapUv:$t&&b(C.sheenRoughnessMap.channel),specularMapUv:V&&b(C.specularMap.channel),specularColorMapUv:Q&&b(C.specularColorMap.channel),specularIntensityMapUv:bt&&b(C.specularIntensityMap.channel),transmissionMapUv:H&&b(C.transmissionMap.channel),thicknessMapUv:Tt&&b(C.thicknessMap.channel),alphaMapUv:zt&&b(C.alphaMap.channel),vertexTangents:!!rt.attributes.tangent&&(At||ce),vertexColors:C.vertexColors,vertexAlphas:C.vertexColors===!0&&!!rt.attributes.color&&rt.attributes.color.itemSize===4,pointsUvs:W.isPoints===!0&&!!rt.attributes.uv&&(Ue||zt),fog:!!J,useFog:C.fog===!0,fogExp2:!!J&&J.isFogExp2,flatShading:C.flatShading===!0&&C.wireframe===!1,sizeAttenuation:C.sizeAttenuation===!0,logarithmicDepthBuffer:m,reverseDepthBuffer:Yt,skinning:W.isSkinnedMesh===!0,morphTargets:rt.morphAttributes.position!==void 0,morphNormals:rt.morphAttributes.normal!==void 0,morphColors:rt.morphAttributes.color!==void 0,morphTargetsCount:yt,morphTextureStride:Ot,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:C.dithering,shadowMapEnabled:s.shadowMap.enabled&&F.length>0,shadowMapType:s.shadowMap.type,toneMapping:te,decodeVideoTexture:Ue&&C.map.isVideoTexture===!0&&Re.getTransfer(C.map.colorSpace)===Ve,decodeVideoTextureEmissive:Ht&&C.emissiveMap.isVideoTexture===!0&&Re.getTransfer(C.emissiveMap.colorSpace)===Ve,premultipliedAlpha:C.premultipliedAlpha,doubleSided:C.side===fs,flipSided:C.side===ti,useDepthPacking:C.depthPacking>=0,depthPacking:C.depthPacking||0,index0AttributeName:C.index0AttributeName,extensionClipCullDistance:Ft&&C.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Ft&&C.extensions.multiDraw===!0||ee)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:C.customProgramCacheKey()};return Te.vertexUv1s=f.has(1),Te.vertexUv2s=f.has(2),Te.vertexUv3s=f.has(3),f.clear(),Te}function _(C){const w=[];if(C.shaderID?w.push(C.shaderID):(w.push(C.customVertexShaderID),w.push(C.customFragmentShaderID)),C.defines!==void 0)for(const F in C.defines)w.push(F),w.push(C.defines[F]);return C.isRawShaderMaterial===!1&&(E(w,C),T(w,C),w.push(s.outputColorSpace)),w.push(C.customProgramCacheKey),w.join()}function E(C,w){C.push(w.precision),C.push(w.outputColorSpace),C.push(w.envMapMode),C.push(w.envMapCubeUVHeight),C.push(w.mapUv),C.push(w.alphaMapUv),C.push(w.lightMapUv),C.push(w.aoMapUv),C.push(w.bumpMapUv),C.push(w.normalMapUv),C.push(w.displacementMapUv),C.push(w.emissiveMapUv),C.push(w.metalnessMapUv),C.push(w.roughnessMapUv),C.push(w.anisotropyMapUv),C.push(w.clearcoatMapUv),C.push(w.clearcoatNormalMapUv),C.push(w.clearcoatRoughnessMapUv),C.push(w.iridescenceMapUv),C.push(w.iridescenceThicknessMapUv),C.push(w.sheenColorMapUv),C.push(w.sheenRoughnessMapUv),C.push(w.specularMapUv),C.push(w.specularColorMapUv),C.push(w.specularIntensityMapUv),C.push(w.transmissionMapUv),C.push(w.thicknessMapUv),C.push(w.combine),C.push(w.fogExp2),C.push(w.sizeAttenuation),C.push(w.morphTargetsCount),C.push(w.morphAttributeCount),C.push(w.numDirLights),C.push(w.numPointLights),C.push(w.numSpotLights),C.push(w.numSpotLightMaps),C.push(w.numHemiLights),C.push(w.numRectAreaLights),C.push(w.numDirLightShadows),C.push(w.numPointLightShadows),C.push(w.numSpotLightShadows),C.push(w.numSpotLightShadowsWithMaps),C.push(w.numLightProbes),C.push(w.shadowMapType),C.push(w.toneMapping),C.push(w.numClippingPlanes),C.push(w.numClipIntersection),C.push(w.depthPacking)}function T(C,w){c.disableAll(),w.supportsVertexTextures&&c.enable(0),w.instancing&&c.enable(1),w.instancingColor&&c.enable(2),w.instancingMorph&&c.enable(3),w.matcap&&c.enable(4),w.envMap&&c.enable(5),w.normalMapObjectSpace&&c.enable(6),w.normalMapTangentSpace&&c.enable(7),w.clearcoat&&c.enable(8),w.iridescence&&c.enable(9),w.alphaTest&&c.enable(10),w.vertexColors&&c.enable(11),w.vertexAlphas&&c.enable(12),w.vertexUv1s&&c.enable(13),w.vertexUv2s&&c.enable(14),w.vertexUv3s&&c.enable(15),w.vertexTangents&&c.enable(16),w.anisotropy&&c.enable(17),w.alphaHash&&c.enable(18),w.batching&&c.enable(19),w.dispersion&&c.enable(20),w.batchingColor&&c.enable(21),w.gradientMap&&c.enable(22),C.push(c.mask),c.disableAll(),w.fog&&c.enable(0),w.useFog&&c.enable(1),w.flatShading&&c.enable(2),w.logarithmicDepthBuffer&&c.enable(3),w.reverseDepthBuffer&&c.enable(4),w.skinning&&c.enable(5),w.morphTargets&&c.enable(6),w.morphNormals&&c.enable(7),w.morphColors&&c.enable(8),w.premultipliedAlpha&&c.enable(9),w.shadowMapEnabled&&c.enable(10),w.doubleSided&&c.enable(11),w.flipSided&&c.enable(12),w.useDepthPacking&&c.enable(13),w.dithering&&c.enable(14),w.transmission&&c.enable(15),w.sheen&&c.enable(16),w.opaque&&c.enable(17),w.pointsUvs&&c.enable(18),w.decodeVideoTexture&&c.enable(19),w.decodeVideoTextureEmissive&&c.enable(20),w.alphaToCoverage&&c.enable(21),C.push(c.mask)}function A(C){const w=x[C.type];let F;if(w){const $=Ji[w];F=kh.clone($.uniforms)}else F=C.uniforms;return F}function N(C,w){let F;for(let $=0,W=p.length;$<W;$++){const J=p[$];if(J.cacheKey===w){F=J,++F.usedTimes;break}}return F===void 0&&(F=new a3(s,w,C,o),p.push(F)),F}function D(C){if(--C.usedTimes===0){const w=p.indexOf(C);p[w]=p[p.length-1],p.pop(),C.destroy()}}function P(C){h.remove(C)}function z(){h.dispose()}return{getParameters:S,getProgramCacheKey:_,getUniforms:A,acquireProgram:N,releaseProgram:D,releaseShaderCache:P,programs:p,dispose:z}}function u3(){let s=new WeakMap;function t(l){return s.has(l)}function e(l){let c=s.get(l);return c===void 0&&(c={},s.set(l,c)),c}function n(l){s.delete(l)}function i(l,c,h){s.get(l)[c]=h}function o(){s=new WeakMap}return{has:t,get:e,remove:n,update:i,dispose:o}}function h3(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function dy(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function py(){const s=[];let t=0;const e=[],n=[],i=[];function o(){t=0,e.length=0,n.length=0,i.length=0}function l(m,g,v,x,b,S){let _=s[t];return _===void 0?(_={id:m.id,object:m,geometry:g,material:v,groupOrder:x,renderOrder:m.renderOrder,z:b,group:S},s[t]=_):(_.id=m.id,_.object=m,_.geometry=g,_.material=v,_.groupOrder=x,_.renderOrder=m.renderOrder,_.z=b,_.group=S),t++,_}function c(m,g,v,x,b,S){const _=l(m,g,v,x,b,S);v.transmission>0?n.push(_):v.transparent===!0?i.push(_):e.push(_)}function h(m,g,v,x,b,S){const _=l(m,g,v,x,b,S);v.transmission>0?n.unshift(_):v.transparent===!0?i.unshift(_):e.unshift(_)}function f(m,g){e.length>1&&e.sort(m||h3),n.length>1&&n.sort(g||dy),i.length>1&&i.sort(g||dy)}function p(){for(let m=t,g=s.length;m<g;m++){const v=s[m];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:e,transmissive:n,transparent:i,init:o,push:c,unshift:h,finish:p,sort:f}}function f3(){let s=new WeakMap;function t(n,i){const o=s.get(n);let l;return o===void 0?(l=new py,s.set(n,[l])):i>=o.length?(l=new py,o.push(l)):l=o[i],l}function e(){s=new WeakMap}return{get:t,dispose:e}}function d3(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new I,color:new Gt};break;case"SpotLight":e={position:new I,direction:new I,color:new Gt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new I,color:new Gt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new I,skyColor:new Gt,groundColor:new Gt};break;case"RectAreaLight":e={color:new Gt,position:new I,halfWidth:new I,halfHeight:new I};break}return s[t.id]=e,e}}}function p3(){const s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ut};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ut};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ut,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}let m3=0;function g3(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function v3(s){const t=new d3,e=p3(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new I);const i=new I,o=new oe,l=new oe;function c(f){let p=0,m=0,g=0;for(let C=0;C<9;C++)n.probe[C].set(0,0,0);let v=0,x=0,b=0,S=0,_=0,E=0,T=0,A=0,N=0,D=0,P=0;f.sort(g3);for(let C=0,w=f.length;C<w;C++){const F=f[C],$=F.color,W=F.intensity,J=F.distance,rt=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)p+=$.r*W,m+=$.g*W,g+=$.b*W;else if(F.isLightProbe){for(let k=0;k<9;k++)n.probe[k].addScaledVector(F.sh.coefficients[k],W);P++}else if(F.isDirectionalLight){const k=t.get(F);if(k.color.copy(F.color).multiplyScalar(F.intensity),F.castShadow){const et=F.shadow,q=e.get(F);q.shadowIntensity=et.intensity,q.shadowBias=et.bias,q.shadowNormalBias=et.normalBias,q.shadowRadius=et.radius,q.shadowMapSize=et.mapSize,n.directionalShadow[v]=q,n.directionalShadowMap[v]=rt,n.directionalShadowMatrix[v]=F.shadow.matrix,E++}n.directional[v]=k,v++}else if(F.isSpotLight){const k=t.get(F);k.position.setFromMatrixPosition(F.matrixWorld),k.color.copy($).multiplyScalar(W),k.distance=J,k.coneCos=Math.cos(F.angle),k.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),k.decay=F.decay,n.spot[b]=k;const et=F.shadow;if(F.map&&(n.spotLightMap[N]=F.map,N++,et.updateMatrices(F),F.castShadow&&D++),n.spotLightMatrix[b]=et.matrix,F.castShadow){const q=e.get(F);q.shadowIntensity=et.intensity,q.shadowBias=et.bias,q.shadowNormalBias=et.normalBias,q.shadowRadius=et.radius,q.shadowMapSize=et.mapSize,n.spotShadow[b]=q,n.spotShadowMap[b]=rt,A++}b++}else if(F.isRectAreaLight){const k=t.get(F);k.color.copy($).multiplyScalar(W),k.halfWidth.set(F.width*.5,0,0),k.halfHeight.set(0,F.height*.5,0),n.rectArea[S]=k,S++}else if(F.isPointLight){const k=t.get(F);if(k.color.copy(F.color).multiplyScalar(F.intensity),k.distance=F.distance,k.decay=F.decay,F.castShadow){const et=F.shadow,q=e.get(F);q.shadowIntensity=et.intensity,q.shadowBias=et.bias,q.shadowNormalBias=et.normalBias,q.shadowRadius=et.radius,q.shadowMapSize=et.mapSize,q.shadowCameraNear=et.camera.near,q.shadowCameraFar=et.camera.far,n.pointShadow[x]=q,n.pointShadowMap[x]=rt,n.pointShadowMatrix[x]=F.shadow.matrix,T++}n.point[x]=k,x++}else if(F.isHemisphereLight){const k=t.get(F);k.skyColor.copy(F.color).multiplyScalar(W),k.groundColor.copy(F.groundColor).multiplyScalar(W),n.hemi[_]=k,_++}}S>0&&(s.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Nt.LTC_FLOAT_1,n.rectAreaLTC2=Nt.LTC_FLOAT_2):(n.rectAreaLTC1=Nt.LTC_HALF_1,n.rectAreaLTC2=Nt.LTC_HALF_2)),n.ambient[0]=p,n.ambient[1]=m,n.ambient[2]=g;const z=n.hash;(z.directionalLength!==v||z.pointLength!==x||z.spotLength!==b||z.rectAreaLength!==S||z.hemiLength!==_||z.numDirectionalShadows!==E||z.numPointShadows!==T||z.numSpotShadows!==A||z.numSpotMaps!==N||z.numLightProbes!==P)&&(n.directional.length=v,n.spot.length=b,n.rectArea.length=S,n.point.length=x,n.hemi.length=_,n.directionalShadow.length=E,n.directionalShadowMap.length=E,n.pointShadow.length=T,n.pointShadowMap.length=T,n.spotShadow.length=A,n.spotShadowMap.length=A,n.directionalShadowMatrix.length=E,n.pointShadowMatrix.length=T,n.spotLightMatrix.length=A+N-D,n.spotLightMap.length=N,n.numSpotLightShadowsWithMaps=D,n.numLightProbes=P,z.directionalLength=v,z.pointLength=x,z.spotLength=b,z.rectAreaLength=S,z.hemiLength=_,z.numDirectionalShadows=E,z.numPointShadows=T,z.numSpotShadows=A,z.numSpotMaps=N,z.numLightProbes=P,n.version=m3++)}function h(f,p){let m=0,g=0,v=0,x=0,b=0;const S=p.matrixWorldInverse;for(let _=0,E=f.length;_<E;_++){const T=f[_];if(T.isDirectionalLight){const A=n.directional[m];A.direction.setFromMatrixPosition(T.matrixWorld),i.setFromMatrixPosition(T.target.matrixWorld),A.direction.sub(i),A.direction.transformDirection(S),m++}else if(T.isSpotLight){const A=n.spot[v];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(S),A.direction.setFromMatrixPosition(T.matrixWorld),i.setFromMatrixPosition(T.target.matrixWorld),A.direction.sub(i),A.direction.transformDirection(S),v++}else if(T.isRectAreaLight){const A=n.rectArea[x];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(S),l.identity(),o.copy(T.matrixWorld),o.premultiply(S),l.extractRotation(o),A.halfWidth.set(T.width*.5,0,0),A.halfHeight.set(0,T.height*.5,0),A.halfWidth.applyMatrix4(l),A.halfHeight.applyMatrix4(l),x++}else if(T.isPointLight){const A=n.point[g];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(S),g++}else if(T.isHemisphereLight){const A=n.hemi[b];A.direction.setFromMatrixPosition(T.matrixWorld),A.direction.transformDirection(S),b++}}}return{setup:c,setupView:h,state:n}}function my(s){const t=new v3(s),e=[],n=[];function i(p){f.camera=p,e.length=0,n.length=0}function o(p){e.push(p)}function l(p){n.push(p)}function c(){t.setup(e)}function h(p){t.setupView(e,p)}const f={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:f,setupLights:c,setupLightsView:h,pushLight:o,pushShadow:l}}function _3(s){let t=new WeakMap;function e(i,o=0){const l=t.get(i);let c;return l===void 0?(c=new my(s),t.set(i,[c])):o>=l.length?(c=new my(s),l.push(c)):c=l[o],c}function n(){t=new WeakMap}return{get:e,dispose:n}}const y3=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,x3=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function S3(s,t,e){let n=new Go;const i=new ut,o=new ut,l=new Me,c=new ug({depthPacking:Tx}),h=new hg,f={},p=e.maxTextureSize,m={[Ws]:ti,[ti]:Ws,[fs]:fs},g=new Ai({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ut},radius:{value:4}},vertexShader:y3,fragmentShader:x3}),v=g.clone();v.defines.HORIZONTAL_PASS=1;const x=new ye;x.setAttribute("position",new We(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new cn(x,g),S=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=$h;let _=this.type;this.render=function(D,P,z){if(S.enabled===!1||S.autoUpdate===!1&&S.needsUpdate===!1||D.length===0)return;const C=s.getRenderTarget(),w=s.getActiveCubeFace(),F=s.getActiveMipmapLevel(),$=s.state;$.setBlending(Gs),$.buffers.color.setClear(1,1,1,1),$.buffers.depth.setTest(!0),$.setScissorTest(!1);const W=_!==Ki&&this.type===Ki,J=_===Ki&&this.type!==Ki;for(let rt=0,k=D.length;rt<k;rt++){const et=D[rt],q=et.shadow;if(q===void 0){console.warn("THREE.WebGLShadowMap:",et,"has no shadow.");continue}if(q.autoUpdate===!1&&q.needsUpdate===!1)continue;i.copy(q.mapSize);const ct=q.getFrameExtents();if(i.multiply(ct),o.copy(q.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(o.x=Math.floor(p/ct.x),i.x=o.x*ct.x,q.mapSize.x=o.x),i.y>p&&(o.y=Math.floor(p/ct.y),i.y=o.y*ct.y,q.mapSize.y=o.y)),q.map===null||W===!0||J===!0){const yt=this.type!==Ki?{minFilter:Ln,magFilter:Ln}:{};q.map!==null&&q.map.dispose(),q.map=new _s(i.x,i.y,yt),q.map.texture.name=et.name+".shadowMap",q.camera.updateProjectionMatrix()}s.setRenderTarget(q.map),s.clear();const vt=q.getViewportCount();for(let yt=0;yt<vt;yt++){const Ot=q.getViewport(yt);l.set(o.x*Ot.x,o.y*Ot.y,o.x*Ot.z,o.y*Ot.w),$.viewport(l),q.updateMatrices(et,yt),n=q.getFrustum(),A(P,z,q.camera,et,this.type)}q.isPointLightShadow!==!0&&this.type===Ki&&E(q,z),q.needsUpdate=!1}_=this.type,S.needsUpdate=!1,s.setRenderTarget(C,w,F)};function E(D,P){const z=t.update(b);g.defines.VSM_SAMPLES!==D.blurSamples&&(g.defines.VSM_SAMPLES=D.blurSamples,v.defines.VSM_SAMPLES=D.blurSamples,g.needsUpdate=!0,v.needsUpdate=!0),D.mapPass===null&&(D.mapPass=new _s(i.x,i.y)),g.uniforms.shadow_pass.value=D.map.texture,g.uniforms.resolution.value=D.mapSize,g.uniforms.radius.value=D.radius,s.setRenderTarget(D.mapPass),s.clear(),s.renderBufferDirect(P,null,z,g,b,null),v.uniforms.shadow_pass.value=D.mapPass.texture,v.uniforms.resolution.value=D.mapSize,v.uniforms.radius.value=D.radius,s.setRenderTarget(D.map),s.clear(),s.renderBufferDirect(P,null,z,v,b,null)}function T(D,P,z,C){let w=null;const F=z.isPointLight===!0?D.customDistanceMaterial:D.customDepthMaterial;if(F!==void 0)w=F;else if(w=z.isPointLight===!0?h:c,s.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0||P.alphaToCoverage===!0){const $=w.uuid,W=P.uuid;let J=f[$];J===void 0&&(J={},f[$]=J);let rt=J[W];rt===void 0&&(rt=w.clone(),J[W]=rt,P.addEventListener("dispose",N)),w=rt}if(w.visible=P.visible,w.wireframe=P.wireframe,C===Ki?w.side=P.shadowSide!==null?P.shadowSide:P.side:w.side=P.shadowSide!==null?P.shadowSide:m[P.side],w.alphaMap=P.alphaMap,w.alphaTest=P.alphaToCoverage===!0?.5:P.alphaTest,w.map=P.map,w.clipShadows=P.clipShadows,w.clippingPlanes=P.clippingPlanes,w.clipIntersection=P.clipIntersection,w.displacementMap=P.displacementMap,w.displacementScale=P.displacementScale,w.displacementBias=P.displacementBias,w.wireframeLinewidth=P.wireframeLinewidth,w.linewidth=P.linewidth,z.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const $=s.properties.get(w);$.light=z}return w}function A(D,P,z,C,w){if(D.visible===!1)return;if(D.layers.test(P.layers)&&(D.isMesh||D.isLine||D.isPoints)&&(D.castShadow||D.receiveShadow&&w===Ki)&&(!D.frustumCulled||n.intersectsObject(D))){D.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,D.matrixWorld);const W=t.update(D),J=D.material;if(Array.isArray(J)){const rt=W.groups;for(let k=0,et=rt.length;k<et;k++){const q=rt[k],ct=J[q.materialIndex];if(ct&&ct.visible){const vt=T(D,ct,C,w);D.onBeforeShadow(s,D,P,z,W,vt,q),s.renderBufferDirect(z,null,W,vt,D,q),D.onAfterShadow(s,D,P,z,W,vt,q)}}}else if(J.visible){const rt=T(D,J,C,w);D.onBeforeShadow(s,D,P,z,W,rt,null),s.renderBufferDirect(z,null,W,rt,D,null),D.onAfterShadow(s,D,P,z,W,rt,null)}}const $=D.children;for(let W=0,J=$.length;W<J;W++)A($[W],P,z,C,w)}function N(D){D.target.removeEventListener("dispose",N);for(const z in f){const C=f[z],w=D.target.uuid;w in C&&(C[w].dispose(),delete C[w])}}}const M3={[ch]:uh,[hh]:ph,[fh]:mh,[yr]:dh,[uh]:ch,[ph]:hh,[mh]:fh,[dh]:yr};function b3(s,t){function e(){let H=!1;const Tt=new Me;let gt=null;const zt=new Me(0,0,0,0);return{setMask:function(Et){gt!==Et&&!H&&(s.colorMask(Et,Et,Et,Et),gt=Et)},setLocked:function(Et){H=Et},setClear:function(Et,dt,Ft,te,Te){Te===!0&&(Et*=te,dt*=te,Ft*=te),Tt.set(Et,dt,Ft,te),zt.equals(Tt)===!1&&(s.clearColor(Et,dt,Ft,te),zt.copy(Tt))},reset:function(){H=!1,gt=null,zt.set(-1,0,0,0)}}}function n(){let H=!1,Tt=!1,gt=null,zt=null,Et=null;return{setReversed:function(dt){if(Tt!==dt){const Ft=t.get("EXT_clip_control");dt?Ft.clipControlEXT(Ft.LOWER_LEFT_EXT,Ft.ZERO_TO_ONE_EXT):Ft.clipControlEXT(Ft.LOWER_LEFT_EXT,Ft.NEGATIVE_ONE_TO_ONE_EXT),Tt=dt;const te=Et;Et=null,this.setClear(te)}},getReversed:function(){return Tt},setTest:function(dt){dt?Ut(s.DEPTH_TEST):Yt(s.DEPTH_TEST)},setMask:function(dt){gt!==dt&&!H&&(s.depthMask(dt),gt=dt)},setFunc:function(dt){if(Tt&&(dt=M3[dt]),zt!==dt){switch(dt){case ch:s.depthFunc(s.NEVER);break;case uh:s.depthFunc(s.ALWAYS);break;case hh:s.depthFunc(s.LESS);break;case yr:s.depthFunc(s.LEQUAL);break;case fh:s.depthFunc(s.EQUAL);break;case dh:s.depthFunc(s.GEQUAL);break;case ph:s.depthFunc(s.GREATER);break;case mh:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}zt=dt}},setLocked:function(dt){H=dt},setClear:function(dt){Et!==dt&&(Tt&&(dt=1-dt),s.clearDepth(dt),Et=dt)},reset:function(){H=!1,gt=null,zt=null,Et=null,Tt=!1}}}function i(){let H=!1,Tt=null,gt=null,zt=null,Et=null,dt=null,Ft=null,te=null,Te=null;return{setTest:function(Se){H||(Se?Ut(s.STENCIL_TEST):Yt(s.STENCIL_TEST))},setMask:function(Se){Tt!==Se&&!H&&(s.stencilMask(Se),Tt=Se)},setFunc:function(Se,un,Tn){(gt!==Se||zt!==un||Et!==Tn)&&(s.stencilFunc(Se,un,Tn),gt=Se,zt=un,Et=Tn)},setOp:function(Se,un,Tn){(dt!==Se||Ft!==un||te!==Tn)&&(s.stencilOp(Se,un,Tn),dt=Se,Ft=un,te=Tn)},setLocked:function(Se){H=Se},setClear:function(Se){Te!==Se&&(s.clearStencil(Se),Te=Se)},reset:function(){H=!1,Tt=null,gt=null,zt=null,Et=null,dt=null,Ft=null,te=null,Te=null}}}const o=new e,l=new n,c=new i,h=new WeakMap,f=new WeakMap;let p={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,_=null,E=null,T=null,A=null,N=null,D=null,P=new Gt(0,0,0),z=0,C=!1,w=null,F=null,$=null,W=null,J=null;const rt=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let k=!1,et=0;const q=s.getParameter(s.VERSION);q.indexOf("WebGL")!==-1?(et=parseFloat(/^WebGL (\d)/.exec(q)[1]),k=et>=1):q.indexOf("OpenGL ES")!==-1&&(et=parseFloat(/^OpenGL ES (\d)/.exec(q)[1]),k=et>=2);let ct=null,vt={};const yt=s.getParameter(s.SCISSOR_BOX),Ot=s.getParameter(s.VIEWPORT),Qt=new Me().fromArray(yt),nt=new Me().fromArray(Ot);function St(H,Tt,gt,zt){const Et=new Uint8Array(4),dt=s.createTexture();s.bindTexture(H,dt),s.texParameteri(H,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(H,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let Ft=0;Ft<gt;Ft++)H===s.TEXTURE_3D||H===s.TEXTURE_2D_ARRAY?s.texImage3D(Tt,0,s.RGBA,1,1,zt,0,s.RGBA,s.UNSIGNED_BYTE,Et):s.texImage2D(Tt+Ft,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Et);return dt}const qt={};qt[s.TEXTURE_2D]=St(s.TEXTURE_2D,s.TEXTURE_2D,1),qt[s.TEXTURE_CUBE_MAP]=St(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),qt[s.TEXTURE_2D_ARRAY]=St(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),qt[s.TEXTURE_3D]=St(s.TEXTURE_3D,s.TEXTURE_3D,1,1),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Ut(s.DEPTH_TEST),l.setFunc(yr),xt(!1),At(hm),Ut(s.CULL_FACE),O(Gs);function Ut(H){p[H]!==!0&&(s.enable(H),p[H]=!0)}function Yt(H){p[H]!==!1&&(s.disable(H),p[H]=!1)}function fe(H,Tt){return m[H]!==Tt?(s.bindFramebuffer(H,Tt),m[H]=Tt,H===s.DRAW_FRAMEBUFFER&&(m[s.FRAMEBUFFER]=Tt),H===s.FRAMEBUFFER&&(m[s.DRAW_FRAMEBUFFER]=Tt),!0):!1}function ee(H,Tt){let gt=v,zt=!1;if(H){gt=g.get(Tt),gt===void 0&&(gt=[],g.set(Tt,gt));const Et=H.textures;if(gt.length!==Et.length||gt[0]!==s.COLOR_ATTACHMENT0){for(let dt=0,Ft=Et.length;dt<Ft;dt++)gt[dt]=s.COLOR_ATTACHMENT0+dt;gt.length=Et.length,zt=!0}}else gt[0]!==s.BACK&&(gt[0]=s.BACK,zt=!0);zt&&s.drawBuffers(gt)}function Ue(H){return x!==H?(s.useProgram(H),x=H,!0):!1}const ge={[va]:s.FUNC_ADD,[jy]:s.FUNC_SUBTRACT,[Ky]:s.FUNC_REVERSE_SUBTRACT};ge[Jy]=s.MIN,ge[Qy]=s.MAX;const re={[$y]:s.ZERO,[tx]:s.ONE,[ex]:s.SRC_COLOR,[oh]:s.SRC_ALPHA,[ox]:s.SRC_ALPHA_SATURATE,[ax]:s.DST_COLOR,[ix]:s.DST_ALPHA,[nx]:s.ONE_MINUS_SRC_COLOR,[lh]:s.ONE_MINUS_SRC_ALPHA,[rx]:s.ONE_MINUS_DST_COLOR,[sx]:s.ONE_MINUS_DST_ALPHA,[lx]:s.CONSTANT_COLOR,[cx]:s.ONE_MINUS_CONSTANT_COLOR,[ux]:s.CONSTANT_ALPHA,[hx]:s.ONE_MINUS_CONSTANT_ALPHA};function O(H,Tt,gt,zt,Et,dt,Ft,te,Te,Se){if(H===Gs){b===!0&&(Yt(s.BLEND),b=!1);return}if(b===!1&&(Ut(s.BLEND),b=!0),H!==Zy){if(H!==S||Se!==C){if((_!==va||A!==va)&&(s.blendEquation(s.FUNC_ADD),_=va,A=va),Se)switch(H){case mr:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case fm:s.blendFunc(s.ONE,s.ONE);break;case dm:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case pm:s.blendFuncSeparate(s.DST_COLOR,s.ONE_MINUS_SRC_ALPHA,s.ZERO,s.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}else switch(H){case mr:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case fm:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE,s.ONE,s.ONE);break;case dm:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case pm:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}E=null,T=null,N=null,D=null,P.set(0,0,0),z=0,S=H,C=Se}return}Et=Et||Tt,dt=dt||gt,Ft=Ft||zt,(Tt!==_||Et!==A)&&(s.blendEquationSeparate(ge[Tt],ge[Et]),_=Tt,A=Et),(gt!==E||zt!==T||dt!==N||Ft!==D)&&(s.blendFuncSeparate(re[gt],re[zt],re[dt],re[Ft]),E=gt,T=zt,N=dt,D=Ft),(te.equals(P)===!1||Te!==z)&&(s.blendColor(te.r,te.g,te.b,Te),P.copy(te),z=Te),S=H,C=!1}function Ct(H,Tt){H.side===fs?Yt(s.CULL_FACE):Ut(s.CULL_FACE);let gt=H.side===ti;Tt&&(gt=!gt),xt(gt),H.blending===mr&&H.transparent===!1?O(Gs):O(H.blending,H.blendEquation,H.blendSrc,H.blendDst,H.blendEquationAlpha,H.blendSrcAlpha,H.blendDstAlpha,H.blendColor,H.blendAlpha,H.premultipliedAlpha),l.setFunc(H.depthFunc),l.setTest(H.depthTest),l.setMask(H.depthWrite),o.setMask(H.colorWrite);const zt=H.stencilWrite;c.setTest(zt),zt&&(c.setMask(H.stencilWriteMask),c.setFunc(H.stencilFunc,H.stencilRef,H.stencilFuncMask),c.setOp(H.stencilFail,H.stencilZFail,H.stencilZPass)),Ht(H.polygonOffset,H.polygonOffsetFactor,H.polygonOffsetUnits),H.alphaToCoverage===!0?Ut(s.SAMPLE_ALPHA_TO_COVERAGE):Yt(s.SAMPLE_ALPHA_TO_COVERAGE)}function xt(H){w!==H&&(H?s.frontFace(s.CW):s.frontFace(s.CCW),w=H)}function At(H){H!==Xy?(Ut(s.CULL_FACE),H!==F&&(H===hm?s.cullFace(s.BACK):H===qy?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):Yt(s.CULL_FACE),F=H}function ht(H){H!==$&&(k&&s.lineWidth(H),$=H)}function Ht(H,Tt,gt){H?(Ut(s.POLYGON_OFFSET_FILL),(W!==Tt||J!==gt)&&(s.polygonOffset(Tt,gt),W=Tt,J=gt)):Yt(s.POLYGON_OFFSET_FILL)}function _t(H){H?Ut(s.SCISSOR_TEST):Yt(s.SCISSOR_TEST)}function Bt(H){H===void 0&&(H=s.TEXTURE0+rt-1),ct!==H&&(s.activeTexture(H),ct=H)}function ce(H,Tt,gt){gt===void 0&&(ct===null?gt=s.TEXTURE0+rt-1:gt=ct);let zt=vt[gt];zt===void 0&&(zt={type:void 0,texture:void 0},vt[gt]=zt),(zt.type!==H||zt.texture!==Tt)&&(ct!==gt&&(s.activeTexture(gt),ct=gt),s.bindTexture(H,Tt||qt[H]),zt.type=H,zt.texture=Tt)}function B(){const H=vt[ct];H!==void 0&&H.type!==void 0&&(s.bindTexture(H.type,null),H.type=void 0,H.texture=void 0)}function R(){try{s.compressedTexImage2D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function K(){try{s.compressedTexImage3D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function ot(){try{s.texSubImage2D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function pt(){try{s.texSubImage3D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function lt(){try{s.compressedTexSubImage2D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Jt(){try{s.compressedTexSubImage3D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Dt(){try{s.texStorage2D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Xt(){try{s.texStorage3D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function jt(){try{s.texImage2D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function mt(){try{s.texImage3D(...arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Pt(H){Qt.equals(H)===!1&&(s.scissor(H.x,H.y,H.z,H.w),Qt.copy(H))}function $t(H){nt.equals(H)===!1&&(s.viewport(H.x,H.y,H.z,H.w),nt.copy(H))}function V(H,Tt){let gt=f.get(Tt);gt===void 0&&(gt=new WeakMap,f.set(Tt,gt));let zt=gt.get(H);zt===void 0&&(zt=s.getUniformBlockIndex(Tt,H.name),gt.set(H,zt))}function Q(H,Tt){const zt=f.get(Tt).get(H);h.get(Tt)!==zt&&(s.uniformBlockBinding(Tt,zt,H.__bindingPointIndex),h.set(Tt,zt))}function bt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.blendColor(0,0,0,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),l.setReversed(!1),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),p={},ct=null,vt={},m={},g=new WeakMap,v=[],x=null,b=!1,S=null,_=null,E=null,T=null,A=null,N=null,D=null,P=new Gt(0,0,0),z=0,C=!1,w=null,F=null,$=null,W=null,J=null,Qt.set(0,0,s.canvas.width,s.canvas.height),nt.set(0,0,s.canvas.width,s.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:Ut,disable:Yt,bindFramebuffer:fe,drawBuffers:ee,useProgram:Ue,setBlending:O,setMaterial:Ct,setFlipSided:xt,setCullFace:At,setLineWidth:ht,setPolygonOffset:Ht,setScissorTest:_t,activeTexture:Bt,bindTexture:ce,unbindTexture:B,compressedTexImage2D:R,compressedTexImage3D:K,texImage2D:jt,texImage3D:mt,updateUBOMapping:V,uniformBlockBinding:Q,texStorage2D:Dt,texStorage3D:Xt,texSubImage2D:ot,texSubImage3D:pt,compressedTexSubImage2D:lt,compressedTexSubImage3D:Jt,scissor:Pt,viewport:$t,reset:bt}}function E3(s,t,e,n,i,o,l){const c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new ut,p=new WeakMap;let m;const g=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function x(B,R){return v?new OffscreenCanvas(B,R):ic("canvas")}function b(B,R,K){let ot=1;const pt=ce(B);if((pt.width>K||pt.height>K)&&(ot=K/Math.max(pt.width,pt.height)),ot<1)if(typeof HTMLImageElement<"u"&&B instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&B instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&B instanceof ImageBitmap||typeof VideoFrame<"u"&&B instanceof VideoFrame){const lt=Math.floor(ot*pt.width),Jt=Math.floor(ot*pt.height);m===void 0&&(m=x(lt,Jt));const Dt=R?x(lt,Jt):m;return Dt.width=lt,Dt.height=Jt,Dt.getContext("2d").drawImage(B,0,0,lt,Jt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+pt.width+"x"+pt.height+") to ("+lt+"x"+Jt+")."),Dt}else return"data"in B&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+pt.width+"x"+pt.height+")."),B;return B}function S(B){return B.generateMipmaps}function _(B){s.generateMipmap(B)}function E(B){return B.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:B.isWebGL3DRenderTarget?s.TEXTURE_3D:B.isWebGLArrayRenderTarget||B.isCompressedArrayTexture?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D}function T(B,R,K,ot,pt=!1){if(B!==null){if(s[B]!==void 0)return s[B];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+B+"'")}let lt=R;if(R===s.RED&&(K===s.FLOAT&&(lt=s.R32F),K===s.HALF_FLOAT&&(lt=s.R16F),K===s.UNSIGNED_BYTE&&(lt=s.R8)),R===s.RED_INTEGER&&(K===s.UNSIGNED_BYTE&&(lt=s.R8UI),K===s.UNSIGNED_SHORT&&(lt=s.R16UI),K===s.UNSIGNED_INT&&(lt=s.R32UI),K===s.BYTE&&(lt=s.R8I),K===s.SHORT&&(lt=s.R16I),K===s.INT&&(lt=s.R32I)),R===s.RG&&(K===s.FLOAT&&(lt=s.RG32F),K===s.HALF_FLOAT&&(lt=s.RG16F),K===s.UNSIGNED_BYTE&&(lt=s.RG8)),R===s.RG_INTEGER&&(K===s.UNSIGNED_BYTE&&(lt=s.RG8UI),K===s.UNSIGNED_SHORT&&(lt=s.RG16UI),K===s.UNSIGNED_INT&&(lt=s.RG32UI),K===s.BYTE&&(lt=s.RG8I),K===s.SHORT&&(lt=s.RG16I),K===s.INT&&(lt=s.RG32I)),R===s.RGB_INTEGER&&(K===s.UNSIGNED_BYTE&&(lt=s.RGB8UI),K===s.UNSIGNED_SHORT&&(lt=s.RGB16UI),K===s.UNSIGNED_INT&&(lt=s.RGB32UI),K===s.BYTE&&(lt=s.RGB8I),K===s.SHORT&&(lt=s.RGB16I),K===s.INT&&(lt=s.RGB32I)),R===s.RGBA_INTEGER&&(K===s.UNSIGNED_BYTE&&(lt=s.RGBA8UI),K===s.UNSIGNED_SHORT&&(lt=s.RGBA16UI),K===s.UNSIGNED_INT&&(lt=s.RGBA32UI),K===s.BYTE&&(lt=s.RGBA8I),K===s.SHORT&&(lt=s.RGBA16I),K===s.INT&&(lt=s.RGBA32I)),R===s.RGB&&K===s.UNSIGNED_INT_5_9_9_9_REV&&(lt=s.RGB9_E5),R===s.RGBA){const Jt=pt?tc:Re.getTransfer(ot);K===s.FLOAT&&(lt=s.RGBA32F),K===s.HALF_FLOAT&&(lt=s.RGBA16F),K===s.UNSIGNED_BYTE&&(lt=Jt===Ve?s.SRGB8_ALPHA8:s.RGBA8),K===s.UNSIGNED_SHORT_4_4_4_4&&(lt=s.RGBA4),K===s.UNSIGNED_SHORT_5_5_5_1&&(lt=s.RGB5_A1)}return(lt===s.R16F||lt===s.R32F||lt===s.RG16F||lt===s.RG32F||lt===s.RGBA16F||lt===s.RGBA32F)&&t.get("EXT_color_buffer_float"),lt}function A(B,R){let K;return B?R===null||R===qs||R===Do?K=s.DEPTH24_STENCIL8:R===ci?K=s.DEPTH32F_STENCIL8:R===Ro&&(K=s.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):R===null||R===qs||R===Do?K=s.DEPTH_COMPONENT24:R===ci?K=s.DEPTH_COMPONENT32F:R===Ro&&(K=s.DEPTH_COMPONENT16),K}function N(B,R){return S(B)===!0||B.isFramebufferTexture&&B.minFilter!==Ln&&B.minFilter!==gn?Math.log2(Math.max(R.width,R.height))+1:B.mipmaps!==void 0&&B.mipmaps.length>0?B.mipmaps.length:B.isCompressedTexture&&Array.isArray(B.image)?R.mipmaps.length:1}function D(B){const R=B.target;R.removeEventListener("dispose",D),z(R),R.isVideoTexture&&p.delete(R)}function P(B){const R=B.target;R.removeEventListener("dispose",P),w(R)}function z(B){const R=n.get(B);if(R.__webglInit===void 0)return;const K=B.source,ot=g.get(K);if(ot){const pt=ot[R.__cacheKey];pt.usedTimes--,pt.usedTimes===0&&C(B),Object.keys(ot).length===0&&g.delete(K)}n.remove(B)}function C(B){const R=n.get(B);s.deleteTexture(R.__webglTexture);const K=B.source,ot=g.get(K);delete ot[R.__cacheKey],l.memory.textures--}function w(B){const R=n.get(B);if(B.depthTexture&&(B.depthTexture.dispose(),n.remove(B.depthTexture)),B.isWebGLCubeRenderTarget)for(let ot=0;ot<6;ot++){if(Array.isArray(R.__webglFramebuffer[ot]))for(let pt=0;pt<R.__webglFramebuffer[ot].length;pt++)s.deleteFramebuffer(R.__webglFramebuffer[ot][pt]);else s.deleteFramebuffer(R.__webglFramebuffer[ot]);R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer[ot])}else{if(Array.isArray(R.__webglFramebuffer))for(let ot=0;ot<R.__webglFramebuffer.length;ot++)s.deleteFramebuffer(R.__webglFramebuffer[ot]);else s.deleteFramebuffer(R.__webglFramebuffer);if(R.__webglDepthbuffer&&s.deleteRenderbuffer(R.__webglDepthbuffer),R.__webglMultisampledFramebuffer&&s.deleteFramebuffer(R.__webglMultisampledFramebuffer),R.__webglColorRenderbuffer)for(let ot=0;ot<R.__webglColorRenderbuffer.length;ot++)R.__webglColorRenderbuffer[ot]&&s.deleteRenderbuffer(R.__webglColorRenderbuffer[ot]);R.__webglDepthRenderbuffer&&s.deleteRenderbuffer(R.__webglDepthRenderbuffer)}const K=B.textures;for(let ot=0,pt=K.length;ot<pt;ot++){const lt=n.get(K[ot]);lt.__webglTexture&&(s.deleteTexture(lt.__webglTexture),l.memory.textures--),n.remove(K[ot])}n.remove(B)}let F=0;function $(){F=0}function W(){const B=F;return B>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+B+" texture units while this GPU supports only "+i.maxTextures),F+=1,B}function J(B){const R=[];return R.push(B.wrapS),R.push(B.wrapT),R.push(B.wrapR||0),R.push(B.magFilter),R.push(B.minFilter),R.push(B.anisotropy),R.push(B.internalFormat),R.push(B.format),R.push(B.type),R.push(B.generateMipmaps),R.push(B.premultiplyAlpha),R.push(B.flipY),R.push(B.unpackAlignment),R.push(B.colorSpace),R.join()}function rt(B,R){const K=n.get(B);if(B.isVideoTexture&&_t(B),B.isRenderTargetTexture===!1&&B.version>0&&K.__version!==B.version){const ot=B.image;if(ot===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ot.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{qt(K,B,R);return}}e.bindTexture(s.TEXTURE_2D,K.__webglTexture,s.TEXTURE0+R)}function k(B,R){const K=n.get(B);if(B.version>0&&K.__version!==B.version){qt(K,B,R);return}e.bindTexture(s.TEXTURE_2D_ARRAY,K.__webglTexture,s.TEXTURE0+R)}function et(B,R){const K=n.get(B);if(B.version>0&&K.__version!==B.version){qt(K,B,R);return}e.bindTexture(s.TEXTURE_3D,K.__webglTexture,s.TEXTURE0+R)}function q(B,R){const K=n.get(B);if(B.version>0&&K.__version!==B.version){Ut(K,B,R);return}e.bindTexture(s.TEXTURE_CUBE_MAP,K.__webglTexture,s.TEXTURE0+R)}const ct={[Kl]:s.REPEAT,[zi]:s.CLAMP_TO_EDGE,[Jl]:s.MIRRORED_REPEAT},vt={[Ln]:s.NEAREST,[Om]:s.NEAREST_MIPMAP_NEAREST,[Mo]:s.NEAREST_MIPMAP_LINEAR,[gn]:s.LINEAR,[Bl]:s.LINEAR_MIPMAP_NEAREST,[ps]:s.LINEAR_MIPMAP_LINEAR},yt={[wx]:s.NEVER,[Lx]:s.ALWAYS,[Cx]:s.LESS,[Xm]:s.LEQUAL,[Rx]:s.EQUAL,[Nx]:s.GEQUAL,[Dx]:s.GREATER,[Ux]:s.NOTEQUAL};function Ot(B,R){if(R.type===ci&&t.has("OES_texture_float_linear")===!1&&(R.magFilter===gn||R.magFilter===Bl||R.magFilter===Mo||R.magFilter===ps||R.minFilter===gn||R.minFilter===Bl||R.minFilter===Mo||R.minFilter===ps)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),s.texParameteri(B,s.TEXTURE_WRAP_S,ct[R.wrapS]),s.texParameteri(B,s.TEXTURE_WRAP_T,ct[R.wrapT]),(B===s.TEXTURE_3D||B===s.TEXTURE_2D_ARRAY)&&s.texParameteri(B,s.TEXTURE_WRAP_R,ct[R.wrapR]),s.texParameteri(B,s.TEXTURE_MAG_FILTER,vt[R.magFilter]),s.texParameteri(B,s.TEXTURE_MIN_FILTER,vt[R.minFilter]),R.compareFunction&&(s.texParameteri(B,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(B,s.TEXTURE_COMPARE_FUNC,yt[R.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(R.magFilter===Ln||R.minFilter!==Mo&&R.minFilter!==ps||R.type===ci&&t.has("OES_texture_float_linear")===!1)return;if(R.anisotropy>1||n.get(R).__currentAnisotropy){const K=t.get("EXT_texture_filter_anisotropic");s.texParameterf(B,K.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy}}}function Qt(B,R){let K=!1;B.__webglInit===void 0&&(B.__webglInit=!0,R.addEventListener("dispose",D));const ot=R.source;let pt=g.get(ot);pt===void 0&&(pt={},g.set(ot,pt));const lt=J(R);if(lt!==B.__cacheKey){pt[lt]===void 0&&(pt[lt]={texture:s.createTexture(),usedTimes:0},l.memory.textures++,K=!0),pt[lt].usedTimes++;const Jt=pt[B.__cacheKey];Jt!==void 0&&(pt[B.__cacheKey].usedTimes--,Jt.usedTimes===0&&C(R)),B.__cacheKey=lt,B.__webglTexture=pt[lt].texture}return K}function nt(B,R,K){return Math.floor(Math.floor(B/K)/R)}function St(B,R,K,ot){const lt=B.updateRanges;if(lt.length===0)e.texSubImage2D(s.TEXTURE_2D,0,0,0,R.width,R.height,K,ot,R.data);else{lt.sort((mt,Pt)=>mt.start-Pt.start);let Jt=0;for(let mt=1;mt<lt.length;mt++){const Pt=lt[Jt],$t=lt[mt],V=Pt.start+Pt.count,Q=nt($t.start,R.width,4),bt=nt(Pt.start,R.width,4);$t.start<=V+1&&Q===bt&&nt($t.start+$t.count-1,R.width,4)===Q?Pt.count=Math.max(Pt.count,$t.start+$t.count-Pt.start):(++Jt,lt[Jt]=$t)}lt.length=Jt+1;const Dt=s.getParameter(s.UNPACK_ROW_LENGTH),Xt=s.getParameter(s.UNPACK_SKIP_PIXELS),jt=s.getParameter(s.UNPACK_SKIP_ROWS);s.pixelStorei(s.UNPACK_ROW_LENGTH,R.width);for(let mt=0,Pt=lt.length;mt<Pt;mt++){const $t=lt[mt],V=Math.floor($t.start/4),Q=Math.ceil($t.count/4),bt=V%R.width,H=Math.floor(V/R.width),Tt=Q,gt=1;s.pixelStorei(s.UNPACK_SKIP_PIXELS,bt),s.pixelStorei(s.UNPACK_SKIP_ROWS,H),e.texSubImage2D(s.TEXTURE_2D,0,bt,H,Tt,gt,K,ot,R.data)}B.clearUpdateRanges(),s.pixelStorei(s.UNPACK_ROW_LENGTH,Dt),s.pixelStorei(s.UNPACK_SKIP_PIXELS,Xt),s.pixelStorei(s.UNPACK_SKIP_ROWS,jt)}}function qt(B,R,K){let ot=s.TEXTURE_2D;(R.isDataArrayTexture||R.isCompressedArrayTexture)&&(ot=s.TEXTURE_2D_ARRAY),R.isData3DTexture&&(ot=s.TEXTURE_3D);const pt=Qt(B,R),lt=R.source;e.bindTexture(ot,B.__webglTexture,s.TEXTURE0+K);const Jt=n.get(lt);if(lt.version!==Jt.__version||pt===!0){e.activeTexture(s.TEXTURE0+K);const Dt=Re.getPrimaries(Re.workingColorSpace),Xt=R.colorSpace===Hs?null:Re.getPrimaries(R.colorSpace),jt=R.colorSpace===Hs||Dt===Xt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,jt);let mt=b(R.image,!1,i.maxTextureSize);mt=Bt(R,mt);const Pt=o.convert(R.format,R.colorSpace),$t=o.convert(R.type);let V=T(R.internalFormat,Pt,$t,R.colorSpace,R.isVideoTexture);Ot(ot,R);let Q;const bt=R.mipmaps,H=R.isVideoTexture!==!0,Tt=Jt.__version===void 0||pt===!0,gt=lt.dataReady,zt=N(R,mt);if(R.isDepthTexture)V=A(R.format===No,R.type),Tt&&(H?e.texStorage2D(s.TEXTURE_2D,1,V,mt.width,mt.height):e.texImage2D(s.TEXTURE_2D,0,V,mt.width,mt.height,0,Pt,$t,null));else if(R.isDataTexture)if(bt.length>0){H&&Tt&&e.texStorage2D(s.TEXTURE_2D,zt,V,bt[0].width,bt[0].height);for(let Et=0,dt=bt.length;Et<dt;Et++)Q=bt[Et],H?gt&&e.texSubImage2D(s.TEXTURE_2D,Et,0,0,Q.width,Q.height,Pt,$t,Q.data):e.texImage2D(s.TEXTURE_2D,Et,V,Q.width,Q.height,0,Pt,$t,Q.data);R.generateMipmaps=!1}else H?(Tt&&e.texStorage2D(s.TEXTURE_2D,zt,V,mt.width,mt.height),gt&&St(R,mt,Pt,$t)):e.texImage2D(s.TEXTURE_2D,0,V,mt.width,mt.height,0,Pt,$t,mt.data);else if(R.isCompressedTexture)if(R.isCompressedArrayTexture){H&&Tt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,zt,V,bt[0].width,bt[0].height,mt.depth);for(let Et=0,dt=bt.length;Et<dt;Et++)if(Q=bt[Et],R.format!==Wn)if(Pt!==null)if(H){if(gt)if(R.layerUpdates.size>0){const Ft=Tm(Q.width,Q.height,R.format,R.type);for(const te of R.layerUpdates){const Te=Q.data.subarray(te*Ft/Q.data.BYTES_PER_ELEMENT,(te+1)*Ft/Q.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Et,0,0,te,Q.width,Q.height,1,Pt,Te)}R.clearLayerUpdates()}else e.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,Et,0,0,0,Q.width,Q.height,mt.depth,Pt,Q.data)}else e.compressedTexImage3D(s.TEXTURE_2D_ARRAY,Et,V,Q.width,Q.height,mt.depth,0,Q.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else H?gt&&e.texSubImage3D(s.TEXTURE_2D_ARRAY,Et,0,0,0,Q.width,Q.height,mt.depth,Pt,$t,Q.data):e.texImage3D(s.TEXTURE_2D_ARRAY,Et,V,Q.width,Q.height,mt.depth,0,Pt,$t,Q.data)}else{H&&Tt&&e.texStorage2D(s.TEXTURE_2D,zt,V,bt[0].width,bt[0].height);for(let Et=0,dt=bt.length;Et<dt;Et++)Q=bt[Et],R.format!==Wn?Pt!==null?H?gt&&e.compressedTexSubImage2D(s.TEXTURE_2D,Et,0,0,Q.width,Q.height,Pt,Q.data):e.compressedTexImage2D(s.TEXTURE_2D,Et,V,Q.width,Q.height,0,Q.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):H?gt&&e.texSubImage2D(s.TEXTURE_2D,Et,0,0,Q.width,Q.height,Pt,$t,Q.data):e.texImage2D(s.TEXTURE_2D,Et,V,Q.width,Q.height,0,Pt,$t,Q.data)}else if(R.isDataArrayTexture)if(H){if(Tt&&e.texStorage3D(s.TEXTURE_2D_ARRAY,zt,V,mt.width,mt.height,mt.depth),gt)if(R.layerUpdates.size>0){const Et=Tm(mt.width,mt.height,R.format,R.type);for(const dt of R.layerUpdates){const Ft=mt.data.subarray(dt*Et/mt.data.BYTES_PER_ELEMENT,(dt+1)*Et/mt.data.BYTES_PER_ELEMENT);e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,dt,mt.width,mt.height,1,Pt,$t,Ft)}R.clearLayerUpdates()}else e.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,mt.width,mt.height,mt.depth,Pt,$t,mt.data)}else e.texImage3D(s.TEXTURE_2D_ARRAY,0,V,mt.width,mt.height,mt.depth,0,Pt,$t,mt.data);else if(R.isData3DTexture)H?(Tt&&e.texStorage3D(s.TEXTURE_3D,zt,V,mt.width,mt.height,mt.depth),gt&&e.texSubImage3D(s.TEXTURE_3D,0,0,0,0,mt.width,mt.height,mt.depth,Pt,$t,mt.data)):e.texImage3D(s.TEXTURE_3D,0,V,mt.width,mt.height,mt.depth,0,Pt,$t,mt.data);else if(R.isFramebufferTexture){if(Tt)if(H)e.texStorage2D(s.TEXTURE_2D,zt,V,mt.width,mt.height);else{let Et=mt.width,dt=mt.height;for(let Ft=0;Ft<zt;Ft++)e.texImage2D(s.TEXTURE_2D,Ft,V,Et,dt,0,Pt,$t,null),Et>>=1,dt>>=1}}else if(bt.length>0){if(H&&Tt){const Et=ce(bt[0]);e.texStorage2D(s.TEXTURE_2D,zt,V,Et.width,Et.height)}for(let Et=0,dt=bt.length;Et<dt;Et++)Q=bt[Et],H?gt&&e.texSubImage2D(s.TEXTURE_2D,Et,0,0,Pt,$t,Q):e.texImage2D(s.TEXTURE_2D,Et,V,Pt,$t,Q);R.generateMipmaps=!1}else if(H){if(Tt){const Et=ce(mt);e.texStorage2D(s.TEXTURE_2D,zt,V,Et.width,Et.height)}gt&&e.texSubImage2D(s.TEXTURE_2D,0,0,0,Pt,$t,mt)}else e.texImage2D(s.TEXTURE_2D,0,V,Pt,$t,mt);S(R)&&_(ot),Jt.__version=lt.version,R.onUpdate&&R.onUpdate(R)}B.__version=R.version}function Ut(B,R,K){if(R.image.length!==6)return;const ot=Qt(B,R),pt=R.source;e.bindTexture(s.TEXTURE_CUBE_MAP,B.__webglTexture,s.TEXTURE0+K);const lt=n.get(pt);if(pt.version!==lt.__version||ot===!0){e.activeTexture(s.TEXTURE0+K);const Jt=Re.getPrimaries(Re.workingColorSpace),Dt=R.colorSpace===Hs?null:Re.getPrimaries(R.colorSpace),Xt=R.colorSpace===Hs||Jt===Dt?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,R.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,R.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,R.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,Xt);const jt=R.isCompressedTexture||R.image[0].isCompressedTexture,mt=R.image[0]&&R.image[0].isDataTexture,Pt=[];for(let dt=0;dt<6;dt++)!jt&&!mt?Pt[dt]=b(R.image[dt],!0,i.maxCubemapSize):Pt[dt]=mt?R.image[dt].image:R.image[dt],Pt[dt]=Bt(R,Pt[dt]);const $t=Pt[0],V=o.convert(R.format,R.colorSpace),Q=o.convert(R.type),bt=T(R.internalFormat,V,Q,R.colorSpace),H=R.isVideoTexture!==!0,Tt=lt.__version===void 0||ot===!0,gt=pt.dataReady;let zt=N(R,$t);Ot(s.TEXTURE_CUBE_MAP,R);let Et;if(jt){H&&Tt&&e.texStorage2D(s.TEXTURE_CUBE_MAP,zt,bt,$t.width,$t.height);for(let dt=0;dt<6;dt++){Et=Pt[dt].mipmaps;for(let Ft=0;Ft<Et.length;Ft++){const te=Et[Ft];R.format!==Wn?V!==null?H?gt&&e.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+dt,Ft,0,0,te.width,te.height,V,te.data):e.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+dt,Ft,bt,te.width,te.height,0,te.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):H?gt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+dt,Ft,0,0,te.width,te.height,V,Q,te.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+dt,Ft,bt,te.width,te.height,0,V,Q,te.data)}}}else{if(Et=R.mipmaps,H&&Tt){Et.length>0&&zt++;const dt=ce(Pt[0]);e.texStorage2D(s.TEXTURE_CUBE_MAP,zt,bt,dt.width,dt.height)}for(let dt=0;dt<6;dt++)if(mt){H?gt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+dt,0,0,0,Pt[dt].width,Pt[dt].height,V,Q,Pt[dt].data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+dt,0,bt,Pt[dt].width,Pt[dt].height,0,V,Q,Pt[dt].data);for(let Ft=0;Ft<Et.length;Ft++){const Te=Et[Ft].image[dt].image;H?gt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+dt,Ft+1,0,0,Te.width,Te.height,V,Q,Te.data):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+dt,Ft+1,bt,Te.width,Te.height,0,V,Q,Te.data)}}else{H?gt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+dt,0,0,0,V,Q,Pt[dt]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+dt,0,bt,V,Q,Pt[dt]);for(let Ft=0;Ft<Et.length;Ft++){const te=Et[Ft];H?gt&&e.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+dt,Ft+1,0,0,V,Q,te.image[dt]):e.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+dt,Ft+1,bt,V,Q,te.image[dt])}}}S(R)&&_(s.TEXTURE_CUBE_MAP),lt.__version=pt.version,R.onUpdate&&R.onUpdate(R)}B.__version=R.version}function Yt(B,R,K,ot,pt,lt){const Jt=o.convert(K.format,K.colorSpace),Dt=o.convert(K.type),Xt=T(K.internalFormat,Jt,Dt,K.colorSpace),jt=n.get(R),mt=n.get(K);if(mt.__renderTarget=R,!jt.__hasExternalTextures){const Pt=Math.max(1,R.width>>lt),$t=Math.max(1,R.height>>lt);pt===s.TEXTURE_3D||pt===s.TEXTURE_2D_ARRAY?e.texImage3D(pt,lt,Xt,Pt,$t,R.depth,0,Jt,Dt,null):e.texImage2D(pt,lt,Xt,Pt,$t,0,Jt,Dt,null)}e.bindFramebuffer(s.FRAMEBUFFER,B),Ht(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,ot,pt,mt.__webglTexture,0,ht(R)):(pt===s.TEXTURE_2D||pt>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&pt<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,ot,pt,mt.__webglTexture,lt),e.bindFramebuffer(s.FRAMEBUFFER,null)}function fe(B,R,K){if(s.bindRenderbuffer(s.RENDERBUFFER,B),R.depthBuffer){const ot=R.depthTexture,pt=ot&&ot.isDepthTexture?ot.type:null,lt=A(R.stencilBuffer,pt),Jt=R.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Dt=ht(R);Ht(R)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,Dt,lt,R.width,R.height):K?s.renderbufferStorageMultisample(s.RENDERBUFFER,Dt,lt,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,lt,R.width,R.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,Jt,s.RENDERBUFFER,B)}else{const ot=R.textures;for(let pt=0;pt<ot.length;pt++){const lt=ot[pt],Jt=o.convert(lt.format,lt.colorSpace),Dt=o.convert(lt.type),Xt=T(lt.internalFormat,Jt,Dt,lt.colorSpace),jt=ht(R);K&&Ht(R)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,jt,Xt,R.width,R.height):Ht(R)?c.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,jt,Xt,R.width,R.height):s.renderbufferStorage(s.RENDERBUFFER,Xt,R.width,R.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function ee(B,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(s.FRAMEBUFFER,B),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ot=n.get(R.depthTexture);ot.__renderTarget=R,(!ot.__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),rt(R.depthTexture,0);const pt=ot.__webglTexture,lt=ht(R);if(R.depthTexture.format===Uo)Ht(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,pt,0,lt):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,pt,0);else if(R.depthTexture.format===No)Ht(R)?c.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,pt,0,lt):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,pt,0);else throw new Error("Unknown depthTexture format")}function Ue(B){const R=n.get(B),K=B.isWebGLCubeRenderTarget===!0;if(R.__boundDepthTexture!==B.depthTexture){const ot=B.depthTexture;if(R.__depthDisposeCallback&&R.__depthDisposeCallback(),ot){const pt=()=>{delete R.__boundDepthTexture,delete R.__depthDisposeCallback,ot.removeEventListener("dispose",pt)};ot.addEventListener("dispose",pt),R.__depthDisposeCallback=pt}R.__boundDepthTexture=ot}if(B.depthTexture&&!R.__autoAllocateDepthBuffer){if(K)throw new Error("target.depthTexture not supported in Cube render targets");const ot=B.texture.mipmaps;ot&&ot.length>0?ee(R.__webglFramebuffer[0],B):ee(R.__webglFramebuffer,B)}else if(K){R.__webglDepthbuffer=[];for(let ot=0;ot<6;ot++)if(e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[ot]),R.__webglDepthbuffer[ot]===void 0)R.__webglDepthbuffer[ot]=s.createRenderbuffer(),fe(R.__webglDepthbuffer[ot],B,!1);else{const pt=B.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,lt=R.__webglDepthbuffer[ot];s.bindRenderbuffer(s.RENDERBUFFER,lt),s.framebufferRenderbuffer(s.FRAMEBUFFER,pt,s.RENDERBUFFER,lt)}}else{const ot=B.texture.mipmaps;if(ot&&ot.length>0?e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer[0]):e.bindFramebuffer(s.FRAMEBUFFER,R.__webglFramebuffer),R.__webglDepthbuffer===void 0)R.__webglDepthbuffer=s.createRenderbuffer(),fe(R.__webglDepthbuffer,B,!1);else{const pt=B.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,lt=R.__webglDepthbuffer;s.bindRenderbuffer(s.RENDERBUFFER,lt),s.framebufferRenderbuffer(s.FRAMEBUFFER,pt,s.RENDERBUFFER,lt)}}e.bindFramebuffer(s.FRAMEBUFFER,null)}function ge(B,R,K){const ot=n.get(B);R!==void 0&&Yt(ot.__webglFramebuffer,B,B.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,0),K!==void 0&&Ue(B)}function re(B){const R=B.texture,K=n.get(B),ot=n.get(R);B.addEventListener("dispose",P);const pt=B.textures,lt=B.isWebGLCubeRenderTarget===!0,Jt=pt.length>1;if(Jt||(ot.__webglTexture===void 0&&(ot.__webglTexture=s.createTexture()),ot.__version=R.version,l.memory.textures++),lt){K.__webglFramebuffer=[];for(let Dt=0;Dt<6;Dt++)if(R.mipmaps&&R.mipmaps.length>0){K.__webglFramebuffer[Dt]=[];for(let Xt=0;Xt<R.mipmaps.length;Xt++)K.__webglFramebuffer[Dt][Xt]=s.createFramebuffer()}else K.__webglFramebuffer[Dt]=s.createFramebuffer()}else{if(R.mipmaps&&R.mipmaps.length>0){K.__webglFramebuffer=[];for(let Dt=0;Dt<R.mipmaps.length;Dt++)K.__webglFramebuffer[Dt]=s.createFramebuffer()}else K.__webglFramebuffer=s.createFramebuffer();if(Jt)for(let Dt=0,Xt=pt.length;Dt<Xt;Dt++){const jt=n.get(pt[Dt]);jt.__webglTexture===void 0&&(jt.__webglTexture=s.createTexture(),l.memory.textures++)}if(B.samples>0&&Ht(B)===!1){K.__webglMultisampledFramebuffer=s.createFramebuffer(),K.__webglColorRenderbuffer=[],e.bindFramebuffer(s.FRAMEBUFFER,K.__webglMultisampledFramebuffer);for(let Dt=0;Dt<pt.length;Dt++){const Xt=pt[Dt];K.__webglColorRenderbuffer[Dt]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,K.__webglColorRenderbuffer[Dt]);const jt=o.convert(Xt.format,Xt.colorSpace),mt=o.convert(Xt.type),Pt=T(Xt.internalFormat,jt,mt,Xt.colorSpace,B.isXRRenderTarget===!0),$t=ht(B);s.renderbufferStorageMultisample(s.RENDERBUFFER,$t,Pt,B.width,B.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+Dt,s.RENDERBUFFER,K.__webglColorRenderbuffer[Dt])}s.bindRenderbuffer(s.RENDERBUFFER,null),B.depthBuffer&&(K.__webglDepthRenderbuffer=s.createRenderbuffer(),fe(K.__webglDepthRenderbuffer,B,!0)),e.bindFramebuffer(s.FRAMEBUFFER,null)}}if(lt){e.bindTexture(s.TEXTURE_CUBE_MAP,ot.__webglTexture),Ot(s.TEXTURE_CUBE_MAP,R);for(let Dt=0;Dt<6;Dt++)if(R.mipmaps&&R.mipmaps.length>0)for(let Xt=0;Xt<R.mipmaps.length;Xt++)Yt(K.__webglFramebuffer[Dt][Xt],B,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Dt,Xt);else Yt(K.__webglFramebuffer[Dt],B,R,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+Dt,0);S(R)&&_(s.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Jt){for(let Dt=0,Xt=pt.length;Dt<Xt;Dt++){const jt=pt[Dt],mt=n.get(jt);e.bindTexture(s.TEXTURE_2D,mt.__webglTexture),Ot(s.TEXTURE_2D,jt),Yt(K.__webglFramebuffer,B,jt,s.COLOR_ATTACHMENT0+Dt,s.TEXTURE_2D,0),S(jt)&&_(s.TEXTURE_2D)}e.unbindTexture()}else{let Dt=s.TEXTURE_2D;if((B.isWebGL3DRenderTarget||B.isWebGLArrayRenderTarget)&&(Dt=B.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY),e.bindTexture(Dt,ot.__webglTexture),Ot(Dt,R),R.mipmaps&&R.mipmaps.length>0)for(let Xt=0;Xt<R.mipmaps.length;Xt++)Yt(K.__webglFramebuffer[Xt],B,R,s.COLOR_ATTACHMENT0,Dt,Xt);else Yt(K.__webglFramebuffer,B,R,s.COLOR_ATTACHMENT0,Dt,0);S(R)&&_(Dt),e.unbindTexture()}B.depthBuffer&&Ue(B)}function O(B){const R=B.textures;for(let K=0,ot=R.length;K<ot;K++){const pt=R[K];if(S(pt)){const lt=E(B),Jt=n.get(pt).__webglTexture;e.bindTexture(lt,Jt),_(lt),e.unbindTexture()}}}const Ct=[],xt=[];function At(B){if(B.samples>0){if(Ht(B)===!1){const R=B.textures,K=B.width,ot=B.height;let pt=s.COLOR_BUFFER_BIT;const lt=B.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,Jt=n.get(B),Dt=R.length>1;if(Dt)for(let jt=0;jt<R.length;jt++)e.bindFramebuffer(s.FRAMEBUFFER,Jt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+jt,s.RENDERBUFFER,null),e.bindFramebuffer(s.FRAMEBUFFER,Jt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+jt,s.TEXTURE_2D,null,0);e.bindFramebuffer(s.READ_FRAMEBUFFER,Jt.__webglMultisampledFramebuffer);const Xt=B.texture.mipmaps;Xt&&Xt.length>0?e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Jt.__webglFramebuffer[0]):e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Jt.__webglFramebuffer);for(let jt=0;jt<R.length;jt++){if(B.resolveDepthBuffer&&(B.depthBuffer&&(pt|=s.DEPTH_BUFFER_BIT),B.stencilBuffer&&B.resolveStencilBuffer&&(pt|=s.STENCIL_BUFFER_BIT)),Dt){s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,Jt.__webglColorRenderbuffer[jt]);const mt=n.get(R[jt]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,mt,0)}s.blitFramebuffer(0,0,K,ot,0,0,K,ot,pt,s.NEAREST),h===!0&&(Ct.length=0,xt.length=0,Ct.push(s.COLOR_ATTACHMENT0+jt),B.depthBuffer&&B.resolveDepthBuffer===!1&&(Ct.push(lt),xt.push(lt),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,xt)),s.invalidateFramebuffer(s.READ_FRAMEBUFFER,Ct))}if(e.bindFramebuffer(s.READ_FRAMEBUFFER,null),e.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),Dt)for(let jt=0;jt<R.length;jt++){e.bindFramebuffer(s.FRAMEBUFFER,Jt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+jt,s.RENDERBUFFER,Jt.__webglColorRenderbuffer[jt]);const mt=n.get(R[jt]).__webglTexture;e.bindFramebuffer(s.FRAMEBUFFER,Jt.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+jt,s.TEXTURE_2D,mt,0)}e.bindFramebuffer(s.DRAW_FRAMEBUFFER,Jt.__webglMultisampledFramebuffer)}else if(B.depthBuffer&&B.resolveDepthBuffer===!1&&h){const R=B.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[R])}}}function ht(B){return Math.min(i.maxSamples,B.samples)}function Ht(B){const R=n.get(B);return B.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function _t(B){const R=l.render.frame;p.get(B)!==R&&(p.set(B,R),B.update())}function Bt(B,R){const K=B.colorSpace,ot=B.format,pt=B.type;return B.isCompressedTexture===!0||B.isVideoTexture===!0||K!==Ma&&K!==Hs&&(Re.getTransfer(K)===Ve?(ot!==Wn||pt!==Fi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",K)),R}function ce(B){return typeof HTMLImageElement<"u"&&B instanceof HTMLImageElement?(f.width=B.naturalWidth||B.width,f.height=B.naturalHeight||B.height):typeof VideoFrame<"u"&&B instanceof VideoFrame?(f.width=B.displayWidth,f.height=B.displayHeight):(f.width=B.width,f.height=B.height),f}this.allocateTextureUnit=W,this.resetTextureUnits=$,this.setTexture2D=rt,this.setTexture2DArray=k,this.setTexture3D=et,this.setTextureCube=q,this.rebindTextures=ge,this.setupRenderTarget=re,this.updateRenderTargetMipmap=O,this.updateMultisampleRenderTarget=At,this.setupDepthRenderbuffer=Ue,this.setupFrameBufferTexture=Yt,this.useMultisampledRTT=Ht}function GS(s,t){function e(n,i=Hs){let o;const l=Re.getTransfer(i);if(n===Fi)return s.UNSIGNED_BYTE;if(n===nf)return s.UNSIGNED_SHORT_4_4_4_4;if(n===sf)return s.UNSIGNED_SHORT_5_5_5_1;if(n===Fm)return s.UNSIGNED_INT_5_9_9_9_REV;if(n===zm)return s.BYTE;if(n===Bm)return s.SHORT;if(n===Ro)return s.UNSIGNED_SHORT;if(n===ef)return s.INT;if(n===qs)return s.UNSIGNED_INT;if(n===ci)return s.FLOAT;if(n===Vo)return s.HALF_FLOAT;if(n===Hm)return s.ALPHA;if(n===Vm)return s.RGB;if(n===Wn)return s.RGBA;if(n===Uo)return s.DEPTH_COMPONENT;if(n===No)return s.DEPTH_STENCIL;if(n===af)return s.RED;if(n===dc)return s.RED_INTEGER;if(n===Gm)return s.RG;if(n===rf)return s.RG_INTEGER;if(n===of)return s.RGBA_INTEGER;if(n===Fl||n===Hl||n===Vl||n===Gl)if(l===Ve)if(o=t.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(n===Fl)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Hl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Vl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Gl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(n===Fl)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Hl)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Vl)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Gl)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===gh||n===vh||n===_h||n===yh)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(n===gh)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===vh)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===_h)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===yh)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===xh||n===Sh||n===Mh)if(o=t.get("WEBGL_compressed_texture_etc"),o!==null){if(n===xh||n===Sh)return l===Ve?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(n===Mh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===bh||n===Eh||n===Th||n===Ah||n===wh||n===Ch||n===Rh||n===Dh||n===Uh||n===Nh||n===Lh||n===Ph||n===Ih||n===Oh)if(o=t.get("WEBGL_compressed_texture_astc"),o!==null){if(n===bh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===Eh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Th)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Ah)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===wh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Ch)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Rh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Dh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Uh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Nh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Lh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Ph)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Ih)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Oh)return l===Ve?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===kl||n===zh||n===Bh)if(o=t.get("EXT_texture_compression_bptc"),o!==null){if(n===kl)return l===Ve?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===zh)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Bh)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===km||n===Fh||n===Hh||n===Vh)if(o=t.get("EXT_texture_compression_rgtc"),o!==null){if(n===kl)return o.COMPRESSED_RED_RGTC1_EXT;if(n===Fh)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Hh)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Vh)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Do?s.UNSIGNED_INT_24_8:s[n]!==void 0?s[n]:null}return{convert:e}}const T3=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,A3=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class w3{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(this.texture===null){const i=new rn,o=t.properties.get(i);o.__webglTexture=e.texture,(e.depthNear!==n.depthNear||e.depthFar!==n.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new Ai({vertexShader:T3,fragmentShader:A3,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new cn(new ko(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class C3 extends ys{constructor(t,e){super();const n=this;let i=null,o=1,l=null,c="local-floor",h=1,f=null,p=null,m=null,g=null,v=null,x=null;const b=new w3,S=e.getContextAttributes();let _=null,E=null;const T=[],A=[],N=new ut;let D=null;const P=new ln;P.viewport=new Me;const z=new ln;z.viewport=new Me;const C=[P,z],w=new DS;let F=null,$=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(nt){let St=T[nt];return St===void 0&&(St=new ih,T[nt]=St),St.getTargetRaySpace()},this.getControllerGrip=function(nt){let St=T[nt];return St===void 0&&(St=new ih,T[nt]=St),St.getGripSpace()},this.getHand=function(nt){let St=T[nt];return St===void 0&&(St=new ih,T[nt]=St),St.getHandSpace()};function W(nt){const St=A.indexOf(nt.inputSource);if(St===-1)return;const qt=T[St];qt!==void 0&&(qt.update(nt.inputSource,nt.frame,f||l),qt.dispatchEvent({type:nt.type,data:nt.inputSource}))}function J(){i.removeEventListener("select",W),i.removeEventListener("selectstart",W),i.removeEventListener("selectend",W),i.removeEventListener("squeeze",W),i.removeEventListener("squeezestart",W),i.removeEventListener("squeezeend",W),i.removeEventListener("end",J),i.removeEventListener("inputsourceschange",rt);for(let nt=0;nt<T.length;nt++){const St=A[nt];St!==null&&(A[nt]=null,T[nt].disconnect(St))}F=null,$=null,b.reset(),t.setRenderTarget(_),v=null,g=null,m=null,i=null,E=null,Qt.stop(),n.isPresenting=!1,t.setPixelRatio(D),t.setSize(N.width,N.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(nt){o=nt,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(nt){c=nt,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||l},this.setReferenceSpace=function(nt){f=nt},this.getBaseLayer=function(){return g!==null?g:v},this.getBinding=function(){return m},this.getFrame=function(){return x},this.getSession=function(){return i},this.setSession=async function(nt){if(i=nt,i!==null){if(_=t.getRenderTarget(),i.addEventListener("select",W),i.addEventListener("selectstart",W),i.addEventListener("selectend",W),i.addEventListener("squeeze",W),i.addEventListener("squeezestart",W),i.addEventListener("squeezeend",W),i.addEventListener("end",J),i.addEventListener("inputsourceschange",rt),S.xrCompatible!==!0&&await e.makeXRCompatible(),D=t.getPixelRatio(),t.getSize(N),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let qt=null,Ut=null,Yt=null;S.depth&&(Yt=S.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,qt=S.stencil?No:Uo,Ut=S.stencil?Do:qs);const fe={colorFormat:e.RGBA8,depthFormat:Yt,scaleFactor:o};m=new XRWebGLBinding(i,e),g=m.createProjectionLayer(fe),i.updateRenderState({layers:[g]}),t.setPixelRatio(1),t.setSize(g.textureWidth,g.textureHeight,!1),E=new _s(g.textureWidth,g.textureHeight,{format:Wn,type:Fi,depthTexture:new eg(g.textureWidth,g.textureHeight,Ut,void 0,void 0,void 0,void 0,void 0,void 0,qt),stencilBuffer:S.stencil,colorSpace:t.outputColorSpace,samples:S.antialias?4:0,resolveDepthBuffer:g.ignoreDepthValues===!1,resolveStencilBuffer:g.ignoreDepthValues===!1})}else{const qt={antialias:S.antialias,alpha:!0,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:o};v=new XRWebGLLayer(i,e,qt),i.updateRenderState({baseLayer:v}),t.setPixelRatio(1),t.setSize(v.framebufferWidth,v.framebufferHeight,!1),E=new _s(v.framebufferWidth,v.framebufferHeight,{format:Wn,type:Fi,colorSpace:t.outputColorSpace,stencilBuffer:S.stencil,resolveDepthBuffer:v.ignoreDepthValues===!1,resolveStencilBuffer:v.ignoreDepthValues===!1})}E.isXRRenderTarget=!0,this.setFoveation(h),f=null,l=await i.requestReferenceSpace(c),Qt.setContext(i),Qt.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return b.getDepthTexture()};function rt(nt){for(let St=0;St<nt.removed.length;St++){const qt=nt.removed[St],Ut=A.indexOf(qt);Ut>=0&&(A[Ut]=null,T[Ut].disconnect(qt))}for(let St=0;St<nt.added.length;St++){const qt=nt.added[St];let Ut=A.indexOf(qt);if(Ut===-1){for(let fe=0;fe<T.length;fe++)if(fe>=A.length){A.push(qt),Ut=fe;break}else if(A[fe]===null){A[fe]=qt,Ut=fe;break}if(Ut===-1)break}const Yt=T[Ut];Yt&&Yt.connect(qt)}}const k=new I,et=new I;function q(nt,St,qt){k.setFromMatrixPosition(St.matrixWorld),et.setFromMatrixPosition(qt.matrixWorld);const Ut=k.distanceTo(et),Yt=St.projectionMatrix.elements,fe=qt.projectionMatrix.elements,ee=Yt[14]/(Yt[10]-1),Ue=Yt[14]/(Yt[10]+1),ge=(Yt[9]+1)/Yt[5],re=(Yt[9]-1)/Yt[5],O=(Yt[8]-1)/Yt[0],Ct=(fe[8]+1)/fe[0],xt=ee*O,At=ee*Ct,ht=Ut/(-O+Ct),Ht=ht*-O;if(St.matrixWorld.decompose(nt.position,nt.quaternion,nt.scale),nt.translateX(Ht),nt.translateZ(ht),nt.matrixWorld.compose(nt.position,nt.quaternion,nt.scale),nt.matrixWorldInverse.copy(nt.matrixWorld).invert(),Yt[10]===-1)nt.projectionMatrix.copy(St.projectionMatrix),nt.projectionMatrixInverse.copy(St.projectionMatrixInverse);else{const _t=ee+ht,Bt=Ue+ht,ce=xt-Ht,B=At+(Ut-Ht),R=ge*Ue/Bt*_t,K=re*Ue/Bt*_t;nt.projectionMatrix.makePerspective(ce,B,R,K,_t,Bt),nt.projectionMatrixInverse.copy(nt.projectionMatrix).invert()}}function ct(nt,St){St===null?nt.matrixWorld.copy(nt.matrix):nt.matrixWorld.multiplyMatrices(St.matrixWorld,nt.matrix),nt.matrixWorldInverse.copy(nt.matrixWorld).invert()}this.updateCamera=function(nt){if(i===null)return;let St=nt.near,qt=nt.far;b.texture!==null&&(b.depthNear>0&&(St=b.depthNear),b.depthFar>0&&(qt=b.depthFar)),w.near=z.near=P.near=St,w.far=z.far=P.far=qt,(F!==w.near||$!==w.far)&&(i.updateRenderState({depthNear:w.near,depthFar:w.far}),F=w.near,$=w.far),P.layers.mask=nt.layers.mask|2,z.layers.mask=nt.layers.mask|4,w.layers.mask=P.layers.mask|z.layers.mask;const Ut=nt.parent,Yt=w.cameras;ct(w,Ut);for(let fe=0;fe<Yt.length;fe++)ct(Yt[fe],Ut);Yt.length===2?q(w,P,z):w.projectionMatrix.copy(P.projectionMatrix),vt(nt,w,Ut)};function vt(nt,St,qt){qt===null?nt.matrix.copy(St.matrixWorld):(nt.matrix.copy(qt.matrixWorld),nt.matrix.invert(),nt.matrix.multiply(St.matrixWorld)),nt.matrix.decompose(nt.position,nt.quaternion,nt.scale),nt.updateMatrixWorld(!0),nt.projectionMatrix.copy(St.projectionMatrix),nt.projectionMatrixInverse.copy(St.projectionMatrixInverse),nt.isPerspectiveCamera&&(nt.fov=Lo*2*Math.atan(1/nt.projectionMatrix.elements[5]),nt.zoom=1)}this.getCamera=function(){return w},this.getFoveation=function(){if(!(g===null&&v===null))return h},this.setFoveation=function(nt){h=nt,g!==null&&(g.fixedFoveation=nt),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=nt)},this.hasDepthSensing=function(){return b.texture!==null},this.getDepthSensingMesh=function(){return b.getMesh(w)};let yt=null;function Ot(nt,St){if(p=St.getViewerPose(f||l),x=St,p!==null){const qt=p.views;v!==null&&(t.setRenderTargetFramebuffer(E,v.framebuffer),t.setRenderTarget(E));let Ut=!1;qt.length!==w.cameras.length&&(w.cameras.length=0,Ut=!0);for(let ee=0;ee<qt.length;ee++){const Ue=qt[ee];let ge=null;if(v!==null)ge=v.getViewport(Ue);else{const O=m.getViewSubImage(g,Ue);ge=O.viewport,ee===0&&(t.setRenderTargetTextures(E,O.colorTexture,O.depthStencilTexture),t.setRenderTarget(E))}let re=C[ee];re===void 0&&(re=new ln,re.layers.enable(ee),re.viewport=new Me,C[ee]=re),re.matrix.fromArray(Ue.transform.matrix),re.matrix.decompose(re.position,re.quaternion,re.scale),re.projectionMatrix.fromArray(Ue.projectionMatrix),re.projectionMatrixInverse.copy(re.projectionMatrix).invert(),re.viewport.set(ge.x,ge.y,ge.width,ge.height),ee===0&&(w.matrix.copy(re.matrix),w.matrix.decompose(w.position,w.quaternion,w.scale)),Ut===!0&&w.cameras.push(re)}const Yt=i.enabledFeatures;if(Yt&&Yt.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&m){const ee=m.getDepthInformation(qt[0]);ee&&ee.isValid&&ee.texture&&b.init(t,ee,i.renderState)}}for(let qt=0;qt<T.length;qt++){const Ut=A[qt],Yt=T[qt];Ut!==null&&Yt!==void 0&&Yt.update(Ut,St,f||l)}yt&&yt(nt,St),St.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:St}),x=null}const Qt=new zS;Qt.setAnimationLoop(Ot),this.setAnimationLoop=function(nt){yt=nt},this.dispose=function(){}}}const rr=new Ti,R3=new oe;function D3(s,t){function e(S,_){S.matrixAutoUpdate===!0&&S.updateMatrix(),_.value.copy(S.matrix)}function n(S,_){_.color.getRGB(S.fogColor.value,Bx(s)),_.isFog?(S.fogNear.value=_.near,S.fogFar.value=_.far):_.isFogExp2&&(S.fogDensity.value=_.density)}function i(S,_,E,T,A){_.isMeshBasicMaterial||_.isMeshLambertMaterial?o(S,_):_.isMeshToonMaterial?(o(S,_),m(S,_)):_.isMeshPhongMaterial?(o(S,_),p(S,_)):_.isMeshStandardMaterial?(o(S,_),g(S,_),_.isMeshPhysicalMaterial&&v(S,_,A)):_.isMeshMatcapMaterial?(o(S,_),x(S,_)):_.isMeshDepthMaterial?o(S,_):_.isMeshDistanceMaterial?(o(S,_),b(S,_)):_.isMeshNormalMaterial?o(S,_):_.isLineBasicMaterial?(l(S,_),_.isLineDashedMaterial&&c(S,_)):_.isPointsMaterial?h(S,_,E,T):_.isSpriteMaterial?f(S,_):_.isShadowMaterial?(S.color.value.copy(_.color),S.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function o(S,_){S.opacity.value=_.opacity,_.color&&S.diffuse.value.copy(_.color),_.emissive&&S.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.bumpMap&&(S.bumpMap.value=_.bumpMap,e(_.bumpMap,S.bumpMapTransform),S.bumpScale.value=_.bumpScale,_.side===ti&&(S.bumpScale.value*=-1)),_.normalMap&&(S.normalMap.value=_.normalMap,e(_.normalMap,S.normalMapTransform),S.normalScale.value.copy(_.normalScale),_.side===ti&&S.normalScale.value.negate()),_.displacementMap&&(S.displacementMap.value=_.displacementMap,e(_.displacementMap,S.displacementMapTransform),S.displacementScale.value=_.displacementScale,S.displacementBias.value=_.displacementBias),_.emissiveMap&&(S.emissiveMap.value=_.emissiveMap,e(_.emissiveMap,S.emissiveMapTransform)),_.specularMap&&(S.specularMap.value=_.specularMap,e(_.specularMap,S.specularMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest);const E=t.get(_),T=E.envMap,A=E.envMapRotation;T&&(S.envMap.value=T,rr.copy(A),rr.x*=-1,rr.y*=-1,rr.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(rr.y*=-1,rr.z*=-1),S.envMapRotation.value.setFromMatrix4(R3.makeRotationFromEuler(rr)),S.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,S.reflectivity.value=_.reflectivity,S.ior.value=_.ior,S.refractionRatio.value=_.refractionRatio),_.lightMap&&(S.lightMap.value=_.lightMap,S.lightMapIntensity.value=_.lightMapIntensity,e(_.lightMap,S.lightMapTransform)),_.aoMap&&(S.aoMap.value=_.aoMap,S.aoMapIntensity.value=_.aoMapIntensity,e(_.aoMap,S.aoMapTransform))}function l(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform))}function c(S,_){S.dashSize.value=_.dashSize,S.totalSize.value=_.dashSize+_.gapSize,S.scale.value=_.scale}function h(S,_,E,T){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.size.value=_.size*E,S.scale.value=T*.5,_.map&&(S.map.value=_.map,e(_.map,S.uvTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function f(S,_){S.diffuse.value.copy(_.color),S.opacity.value=_.opacity,S.rotation.value=_.rotation,_.map&&(S.map.value=_.map,e(_.map,S.mapTransform)),_.alphaMap&&(S.alphaMap.value=_.alphaMap,e(_.alphaMap,S.alphaMapTransform)),_.alphaTest>0&&(S.alphaTest.value=_.alphaTest)}function p(S,_){S.specular.value.copy(_.specular),S.shininess.value=Math.max(_.shininess,1e-4)}function m(S,_){_.gradientMap&&(S.gradientMap.value=_.gradientMap)}function g(S,_){S.metalness.value=_.metalness,_.metalnessMap&&(S.metalnessMap.value=_.metalnessMap,e(_.metalnessMap,S.metalnessMapTransform)),S.roughness.value=_.roughness,_.roughnessMap&&(S.roughnessMap.value=_.roughnessMap,e(_.roughnessMap,S.roughnessMapTransform)),_.envMap&&(S.envMapIntensity.value=_.envMapIntensity)}function v(S,_,E){S.ior.value=_.ior,_.sheen>0&&(S.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),S.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(S.sheenColorMap.value=_.sheenColorMap,e(_.sheenColorMap,S.sheenColorMapTransform)),_.sheenRoughnessMap&&(S.sheenRoughnessMap.value=_.sheenRoughnessMap,e(_.sheenRoughnessMap,S.sheenRoughnessMapTransform))),_.clearcoat>0&&(S.clearcoat.value=_.clearcoat,S.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(S.clearcoatMap.value=_.clearcoatMap,e(_.clearcoatMap,S.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(S.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,e(_.clearcoatRoughnessMap,S.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(S.clearcoatNormalMap.value=_.clearcoatNormalMap,e(_.clearcoatNormalMap,S.clearcoatNormalMapTransform),S.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===ti&&S.clearcoatNormalScale.value.negate())),_.dispersion>0&&(S.dispersion.value=_.dispersion),_.iridescence>0&&(S.iridescence.value=_.iridescence,S.iridescenceIOR.value=_.iridescenceIOR,S.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],S.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(S.iridescenceMap.value=_.iridescenceMap,e(_.iridescenceMap,S.iridescenceMapTransform)),_.iridescenceThicknessMap&&(S.iridescenceThicknessMap.value=_.iridescenceThicknessMap,e(_.iridescenceThicknessMap,S.iridescenceThicknessMapTransform))),_.transmission>0&&(S.transmission.value=_.transmission,S.transmissionSamplerMap.value=E.texture,S.transmissionSamplerSize.value.set(E.width,E.height),_.transmissionMap&&(S.transmissionMap.value=_.transmissionMap,e(_.transmissionMap,S.transmissionMapTransform)),S.thickness.value=_.thickness,_.thicknessMap&&(S.thicknessMap.value=_.thicknessMap,e(_.thicknessMap,S.thicknessMapTransform)),S.attenuationDistance.value=_.attenuationDistance,S.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(S.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(S.anisotropyMap.value=_.anisotropyMap,e(_.anisotropyMap,S.anisotropyMapTransform))),S.specularIntensity.value=_.specularIntensity,S.specularColor.value.copy(_.specularColor),_.specularColorMap&&(S.specularColorMap.value=_.specularColorMap,e(_.specularColorMap,S.specularColorMapTransform)),_.specularIntensityMap&&(S.specularIntensityMap.value=_.specularIntensityMap,e(_.specularIntensityMap,S.specularIntensityMapTransform))}function x(S,_){_.matcap&&(S.matcap.value=_.matcap)}function b(S,_){const E=t.get(_).light;S.referencePosition.value.setFromMatrixPosition(E.matrixWorld),S.nearDistance.value=E.shadow.camera.near,S.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function U3(s,t,e,n){let i={},o={},l=[];const c=s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS);function h(E,T){const A=T.program;n.uniformBlockBinding(E,A)}function f(E,T){let A=i[E.id];A===void 0&&(x(E),A=p(E),i[E.id]=A,E.addEventListener("dispose",S));const N=T.program;n.updateUBOMapping(E,N);const D=t.render.frame;o[E.id]!==D&&(g(E),o[E.id]=D)}function p(E){const T=m();E.__bindingPointIndex=T;const A=s.createBuffer(),N=E.__size,D=E.usage;return s.bindBuffer(s.UNIFORM_BUFFER,A),s.bufferData(s.UNIFORM_BUFFER,N,D),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,T,A),A}function m(){for(let E=0;E<c;E++)if(l.indexOf(E)===-1)return l.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(E){const T=i[E.id],A=E.uniforms,N=E.__cache;s.bindBuffer(s.UNIFORM_BUFFER,T);for(let D=0,P=A.length;D<P;D++){const z=Array.isArray(A[D])?A[D]:[A[D]];for(let C=0,w=z.length;C<w;C++){const F=z[C];if(v(F,D,C,N)===!0){const $=F.__offset,W=Array.isArray(F.value)?F.value:[F.value];let J=0;for(let rt=0;rt<W.length;rt++){const k=W[rt],et=b(k);typeof k=="number"||typeof k=="boolean"?(F.__data[0]=k,s.bufferSubData(s.UNIFORM_BUFFER,$+J,F.__data)):k.isMatrix3?(F.__data[0]=k.elements[0],F.__data[1]=k.elements[1],F.__data[2]=k.elements[2],F.__data[3]=0,F.__data[4]=k.elements[3],F.__data[5]=k.elements[4],F.__data[6]=k.elements[5],F.__data[7]=0,F.__data[8]=k.elements[6],F.__data[9]=k.elements[7],F.__data[10]=k.elements[8],F.__data[11]=0):(k.toArray(F.__data,J),J+=et.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,$,F.__data)}}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function v(E,T,A,N){const D=E.value,P=T+"_"+A;if(N[P]===void 0)return typeof D=="number"||typeof D=="boolean"?N[P]=D:N[P]=D.clone(),!0;{const z=N[P];if(typeof D=="number"||typeof D=="boolean"){if(z!==D)return N[P]=D,!0}else if(z.equals(D)===!1)return z.copy(D),!0}return!1}function x(E){const T=E.uniforms;let A=0;const N=16;for(let P=0,z=T.length;P<z;P++){const C=Array.isArray(T[P])?T[P]:[T[P]];for(let w=0,F=C.length;w<F;w++){const $=C[w],W=Array.isArray($.value)?$.value:[$.value];for(let J=0,rt=W.length;J<rt;J++){const k=W[J],et=b(k),q=A%N,ct=q%et.boundary,vt=q+ct;A+=ct,vt!==0&&N-vt<et.storage&&(A+=N-vt),$.__data=new Float32Array(et.storage/Float32Array.BYTES_PER_ELEMENT),$.__offset=A,A+=et.storage}}}const D=A%N;return D>0&&(A+=N-D),E.__size=A,E.__cache={},this}function b(E){const T={boundary:0,storage:0};return typeof E=="number"||typeof E=="boolean"?(T.boundary=4,T.storage=4):E.isVector2?(T.boundary=8,T.storage=8):E.isVector3||E.isColor?(T.boundary=16,T.storage=12):E.isVector4?(T.boundary=16,T.storage=16):E.isMatrix3?(T.boundary=48,T.storage=48):E.isMatrix4?(T.boundary=64,T.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),T}function S(E){const T=E.target;T.removeEventListener("dispose",S);const A=l.indexOf(T.__bindingPointIndex);l.splice(A,1),s.deleteBuffer(i[T.id]),delete i[T.id],delete o[T.id]}function _(){for(const E in i)s.deleteBuffer(i[E]);l=[],i={},o={}}return{bind:h,update:f,dispose:_}}class kS{constructor(t={}){const{canvas:e=Ix(),context:n=null,depth:i=!0,stencil:o=!1,alpha:l=!1,antialias:c=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:f=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:m=!1,reverseDepthBuffer:g=!1}=t;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=l;const x=new Uint32Array(4),b=new Int32Array(4);let S=null,_=null;const E=[],T=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=gs,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const A=this;let N=!1;this._outputColorSpace=kn;let D=0,P=0,z=null,C=-1,w=null;const F=new Me,$=new Me;let W=null;const J=new Gt(0);let rt=0,k=e.width,et=e.height,q=1,ct=null,vt=null;const yt=new Me(0,0,k,et),Ot=new Me(0,0,k,et);let Qt=!1;const nt=new Go;let St=!1,qt=!1;const Ut=new oe,Yt=new oe,fe=new I,ee=new Me,Ue={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ge=!1;function re(){return z===null?q:1}let O=n;function Ct(U,X){return e.getContext(U,X)}try{const U={alpha:!0,depth:i,stencil:o,antialias:c,premultipliedAlpha:h,preserveDrawingBuffer:f,powerPreference:p,failIfMajorPerformanceCaveat:m};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Fo}`),e.addEventListener("webglcontextlost",zt,!1),e.addEventListener("webglcontextrestored",Et,!1),e.addEventListener("webglcontextcreationerror",dt,!1),O===null){const X="webgl2";if(O=Ct(X,U),O===null)throw Ct(X)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(U){throw console.error("THREE.WebGLRenderer: "+U.message),U}let xt,At,ht,Ht,_t,Bt,ce,B,R,K,ot,pt,lt,Jt,Dt,Xt,jt,mt,Pt,$t,V,Q,bt,H;function Tt(){xt=new kR(O),xt.init(),Q=new GS(O,xt),At=new OR(O,xt,t,Q),ht=new b3(O,xt),At.reverseDepthBuffer&&g&&ht.buffers.depth.setReversed(!0),Ht=new qR(O),_t=new u3,Bt=new E3(O,xt,ht,_t,At,Q,Ht),ce=new BR(A),B=new GR(A),R=new QA(O),bt=new PR(O,R),K=new WR(O,R,Ht,bt),ot=new ZR(O,K,R,Ht),Pt=new YR(O,At,Bt),Xt=new zR(_t),pt=new c3(A,ce,B,xt,At,bt,Xt),lt=new D3(A,_t),Jt=new f3,Dt=new _3(xt),mt=new LR(A,ce,B,ht,ot,v,h),jt=new S3(A,ot,At),H=new U3(O,Ht,At,ht),$t=new IR(O,xt,Ht),V=new XR(O,xt,Ht),Ht.programs=pt.programs,A.capabilities=At,A.extensions=xt,A.properties=_t,A.renderLists=Jt,A.shadowMap=jt,A.state=ht,A.info=Ht}Tt();const gt=new C3(A,O);this.xr=gt,this.getContext=function(){return O},this.getContextAttributes=function(){return O.getContextAttributes()},this.forceContextLoss=function(){const U=xt.get("WEBGL_lose_context");U&&U.loseContext()},this.forceContextRestore=function(){const U=xt.get("WEBGL_lose_context");U&&U.restoreContext()},this.getPixelRatio=function(){return q},this.setPixelRatio=function(U){U!==void 0&&(q=U,this.setSize(k,et,!1))},this.getSize=function(U){return U.set(k,et)},this.setSize=function(U,X,it=!0){if(gt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}k=U,et=X,e.width=Math.floor(U*q),e.height=Math.floor(X*q),it===!0&&(e.style.width=U+"px",e.style.height=X+"px"),this.setViewport(0,0,U,X)},this.getDrawingBufferSize=function(U){return U.set(k*q,et*q).floor()},this.setDrawingBufferSize=function(U,X,it){k=U,et=X,q=it,e.width=Math.floor(U*it),e.height=Math.floor(X*it),this.setViewport(0,0,U,X)},this.getCurrentViewport=function(U){return U.copy(F)},this.getViewport=function(U){return U.copy(yt)},this.setViewport=function(U,X,it,st){U.isVector4?yt.set(U.x,U.y,U.z,U.w):yt.set(U,X,it,st),ht.viewport(F.copy(yt).multiplyScalar(q).round())},this.getScissor=function(U){return U.copy(Ot)},this.setScissor=function(U,X,it,st){U.isVector4?Ot.set(U.x,U.y,U.z,U.w):Ot.set(U,X,it,st),ht.scissor($.copy(Ot).multiplyScalar(q).round())},this.getScissorTest=function(){return Qt},this.setScissorTest=function(U){ht.setScissorTest(Qt=U)},this.setOpaqueSort=function(U){ct=U},this.setTransparentSort=function(U){vt=U},this.getClearColor=function(U){return U.copy(mt.getClearColor())},this.setClearColor=function(){mt.setClearColor(...arguments)},this.getClearAlpha=function(){return mt.getClearAlpha()},this.setClearAlpha=function(){mt.setClearAlpha(...arguments)},this.clear=function(U=!0,X=!0,it=!0){let st=0;if(U){let Y=!1;if(z!==null){const Mt=z.texture.format;Y=Mt===of||Mt===rf||Mt===dc}if(Y){const Mt=z.texture.type,It=Mt===Fi||Mt===qs||Mt===Ro||Mt===Do||Mt===nf||Mt===sf,Kt=mt.getClearColor(),Wt=mt.getClearAlpha(),le=Kt.r,ue=Kt.g,ne=Kt.b;It?(x[0]=le,x[1]=ue,x[2]=ne,x[3]=Wt,O.clearBufferuiv(O.COLOR,0,x)):(b[0]=le,b[1]=ue,b[2]=ne,b[3]=Wt,O.clearBufferiv(O.COLOR,0,b))}else st|=O.COLOR_BUFFER_BIT}X&&(st|=O.DEPTH_BUFFER_BIT),it&&(st|=O.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),O.clear(st)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",zt,!1),e.removeEventListener("webglcontextrestored",Et,!1),e.removeEventListener("webglcontextcreationerror",dt,!1),mt.dispose(),Jt.dispose(),Dt.dispose(),_t.dispose(),ce.dispose(),B.dispose(),ot.dispose(),bt.dispose(),H.dispose(),pt.dispose(),gt.dispose(),gt.removeEventListener("sessionstart",qo),gt.removeEventListener("sessionend",Ar),Vi.stop()};function zt(U){U.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),N=!0}function Et(){console.log("THREE.WebGLRenderer: Context Restored."),N=!1;const U=Ht.autoReset,X=jt.enabled,it=jt.autoUpdate,st=jt.needsUpdate,Y=jt.type;Tt(),Ht.autoReset=U,jt.enabled=X,jt.autoUpdate=it,jt.needsUpdate=st,jt.type=Y}function dt(U){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",U.statusMessage)}function Ft(U){const X=U.target;X.removeEventListener("dispose",Ft),te(X)}function te(U){Te(U),_t.remove(U)}function Te(U){const X=_t.get(U).programs;X!==void 0&&(X.forEach(function(it){pt.releaseProgram(it)}),U.isShaderMaterial&&pt.releaseShaderCache(U))}this.renderBufferDirect=function(U,X,it,st,Y,Mt){X===null&&(X=Ue);const It=Y.isMesh&&Y.matrixWorld.determinant()<0,Kt=Mc(U,X,it,st,Y);ht.setMaterial(st,It);let Wt=it.index,le=1;if(st.wireframe===!0){if(Wt=K.getWireframeAttribute(it),Wt===void 0)return;le=2}const ue=it.drawRange,ne=it.attributes.position;let be=ue.start*le,ze=(ue.start+ue.count)*le;Mt!==null&&(be=Math.max(be,Mt.start*le),ze=Math.min(ze,(Mt.start+Mt.count)*le)),Wt!==null?(be=Math.max(be,0),ze=Math.min(ze,Wt.count)):ne!=null&&(be=Math.max(be,0),ze=Math.min(ze,ne.count));const Ke=ze-be;if(Ke<0||Ke===1/0)return;bt.setup(Y,st,Kt,it,Wt);let Fe,Be=$t;if(Wt!==null&&(Fe=R.get(Wt),Be=V,Be.setIndex(Fe)),Y.isMesh)st.wireframe===!0?(ht.setLineWidth(st.wireframeLinewidth*re()),Be.setMode(O.LINES)):Be.setMode(O.TRIANGLES);else if(Y.isLine){let se=st.linewidth;se===void 0&&(se=1),ht.setLineWidth(se*re()),Y.isLineSegments?Be.setMode(O.LINES):Y.isLineLoop?Be.setMode(O.LINE_LOOP):Be.setMode(O.LINE_STRIP)}else Y.isPoints?Be.setMode(O.POINTS):Y.isSprite&&Be.setMode(O.TRIANGLES);if(Y.isBatchedMesh)if(Y._multiDrawInstances!==null)Ao("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Be.renderMultiDrawInstances(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount,Y._multiDrawInstances);else if(xt.get("WEBGL_multi_draw"))Be.renderMultiDraw(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount);else{const se=Y._multiDrawStarts,Ye=Y._multiDrawCounts,Ce=Y._multiDrawCount,Pn=Wt?R.get(Wt).bytesPerElement:1,ts=_t.get(st).currentProgram.getUniforms();for(let In=0;In<Ce;In++)ts.setValue(O,"_gl_DrawID",In),Be.render(se[In]/Pn,Ye[In])}else if(Y.isInstancedMesh)Be.renderInstances(be,Ke,Y.count);else if(it.isInstancedBufferGeometry){const se=it._maxInstanceCount!==void 0?it._maxInstanceCount:1/0,Ye=Math.min(it.instanceCount,se);Be.renderInstances(be,Ke,Ye)}else Be.render(be,Ke)};function Se(U,X,it){U.transparent===!0&&U.side===fs&&U.forceSinglePass===!1?(U.side=ti,U.needsUpdate=!0,qe(U,X,it),U.side=Ws,U.needsUpdate=!0,qe(U,X,it),U.side=fs):qe(U,X,it)}this.compile=function(U,X,it=null){it===null&&(it=U),_=Dt.get(it),_.init(X),T.push(_),it.traverseVisible(function(Y){Y.isLight&&Y.layers.test(X.layers)&&(_.pushLight(Y),Y.castShadow&&_.pushShadow(Y))}),U!==it&&U.traverseVisible(function(Y){Y.isLight&&Y.layers.test(X.layers)&&(_.pushLight(Y),Y.castShadow&&_.pushShadow(Y))}),_.setupLights();const st=new Set;return U.traverse(function(Y){if(!(Y.isMesh||Y.isPoints||Y.isLine||Y.isSprite))return;const Mt=Y.material;if(Mt)if(Array.isArray(Mt))for(let It=0;It<Mt.length;It++){const Kt=Mt[It];Se(Kt,it,Y),st.add(Kt)}else Se(Mt,it,Y),st.add(Mt)}),_=T.pop(),st},this.compileAsync=function(U,X,it=null){const st=this.compile(U,X,it);return new Promise(Y=>{function Mt(){if(st.forEach(function(It){_t.get(It).currentProgram.isReady()&&st.delete(It)}),st.size===0){Y(U);return}setTimeout(Mt,10)}xt.get("KHR_parallel_shader_compile")!==null?Mt():setTimeout(Mt,10)})};let un=null;function Tn(U){un&&un(U)}function qo(){Vi.stop()}function Ar(){Vi.start()}const Vi=new zS;Vi.setAnimationLoop(Tn),typeof self<"u"&&Vi.setContext(self),this.setAnimationLoop=function(U){un=U,gt.setAnimationLoop(U),U===null?Vi.stop():Vi.start()},gt.addEventListener("sessionstart",qo),gt.addEventListener("sessionend",Ar),this.render=function(U,X){if(X!==void 0&&X.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(N===!0)return;if(U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),X.parent===null&&X.matrixWorldAutoUpdate===!0&&X.updateMatrixWorld(),gt.enabled===!0&&gt.isPresenting===!0&&(gt.cameraAutoUpdate===!0&&gt.updateCamera(X),X=gt.getCamera()),U.isScene===!0&&U.onBeforeRender(A,U,X,z),_=Dt.get(U,T.length),_.init(X),T.push(_),Yt.multiplyMatrices(X.projectionMatrix,X.matrixWorldInverse),nt.setFromProjectionMatrix(Yt),qt=this.localClippingEnabled,St=Xt.init(this.clippingPlanes,qt),S=Jt.get(U,E.length),S.init(),E.push(S),gt.enabled===!0&&gt.isPresenting===!0){const Mt=A.xr.getDepthSensingMesh();Mt!==null&&wi(Mt,X,-1/0,A.sortObjects)}wi(U,X,0,A.sortObjects),S.finish(),A.sortObjects===!0&&S.sort(ct,vt),ge=gt.enabled===!1||gt.isPresenting===!1||gt.hasDepthSensing()===!1,ge&&mt.addToRenderList(S,U),this.info.render.frame++,St===!0&&Xt.beginShadows();const it=_.state.shadowsArray;jt.render(it,U,X),St===!0&&Xt.endShadows(),this.info.autoReset===!0&&this.info.reset();const st=S.opaque,Y=S.transmissive;if(_.setupLights(),X.isArrayCamera){const Mt=X.cameras;if(Y.length>0)for(let It=0,Kt=Mt.length;It<Kt;It++){const Wt=Mt[It];Gi(st,Y,U,Wt)}ge&&mt.render(U);for(let It=0,Kt=Mt.length;It<Kt;It++){const Wt=Mt[It];Yo(S,U,Wt,Wt.viewport)}}else Y.length>0&&Gi(st,Y,U,X),ge&&mt.render(U),Yo(S,U,X);z!==null&&P===0&&(Bt.updateMultisampleRenderTarget(z),Bt.updateRenderTargetMipmap(z)),U.isScene===!0&&U.onAfterRender(A,U,X),bt.resetDefaultState(),C=-1,w=null,T.pop(),T.length>0?(_=T[T.length-1],St===!0&&Xt.setGlobalState(A.clippingPlanes,_.state.camera)):_=null,E.pop(),E.length>0?S=E[E.length-1]:S=null};function wi(U,X,it,st){if(U.visible===!1)return;if(U.layers.test(X.layers)){if(U.isGroup)it=U.renderOrder;else if(U.isLOD)U.autoUpdate===!0&&U.update(X);else if(U.isLight)_.pushLight(U),U.castShadow&&_.pushShadow(U);else if(U.isSprite){if(!U.frustumCulled||nt.intersectsSprite(U)){st&&ee.setFromMatrixPosition(U.matrixWorld).applyMatrix4(Yt);const It=ot.update(U),Kt=U.material;Kt.visible&&S.push(U,It,Kt,it,ee.z,null)}}else if((U.isMesh||U.isLine||U.isPoints)&&(!U.frustumCulled||nt.intersectsObject(U))){const It=ot.update(U),Kt=U.material;if(st&&(U.boundingSphere!==void 0?(U.boundingSphere===null&&U.computeBoundingSphere(),ee.copy(U.boundingSphere.center)):(It.boundingSphere===null&&It.computeBoundingSphere(),ee.copy(It.boundingSphere.center)),ee.applyMatrix4(U.matrixWorld).applyMatrix4(Yt)),Array.isArray(Kt)){const Wt=It.groups;for(let le=0,ue=Wt.length;le<ue;le++){const ne=Wt[le],be=Kt[ne.materialIndex];be&&be.visible&&S.push(U,It,be,it,ee.z,ne)}}else Kt.visible&&S.push(U,It,Kt,it,ee.z,null)}}const Mt=U.children;for(let It=0,Kt=Mt.length;It<Kt;It++)wi(Mt[It],X,it,st)}function Yo(U,X,it,st){const Y=U.opaque,Mt=U.transmissive,It=U.transparent;_.setupLightsView(it),St===!0&&Xt.setGlobalState(A.clippingPlanes,it),st&&ht.viewport(F.copy(st)),Y.length>0&&ni(Y,X,it),Mt.length>0&&ni(Mt,X,it),It.length>0&&ni(It,X,it),ht.buffers.depth.setTest(!0),ht.buffers.depth.setMask(!0),ht.buffers.color.setMask(!0),ht.setPolygonOffset(!1)}function Gi(U,X,it,st){if((it.isScene===!0?it.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[st.id]===void 0&&(_.state.transmissionRenderTarget[st.id]=new _s(1,1,{generateMipmaps:!0,type:xt.has("EXT_color_buffer_half_float")||xt.has("EXT_color_buffer_float")?Vo:Fi,minFilter:ps,samples:4,stencilBuffer:o,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Re.workingColorSpace}));const Mt=_.state.transmissionRenderTarget[st.id],It=st.viewport||F;Mt.setSize(It.z*A.transmissionResolutionScale,It.w*A.transmissionResolutionScale);const Kt=A.getRenderTarget(),Wt=A.getActiveCubeFace(),le=A.getActiveMipmapLevel();A.setRenderTarget(Mt),A.getClearColor(J),rt=A.getClearAlpha(),rt<1&&A.setClearColor(16777215,.5),A.clear(),ge&&mt.render(it);const ue=A.toneMapping;A.toneMapping=gs;const ne=st.viewport;if(st.viewport!==void 0&&(st.viewport=void 0),_.setupLightsView(st),St===!0&&Xt.setGlobalState(A.clippingPlanes,st),ni(U,it,st),Bt.updateMultisampleRenderTarget(Mt),Bt.updateRenderTargetMipmap(Mt),xt.has("WEBGL_multisampled_render_to_texture")===!1){let be=!1;for(let ze=0,Ke=X.length;ze<Ke;ze++){const Fe=X[ze],Be=Fe.object,se=Fe.geometry,Ye=Fe.material,Ce=Fe.group;if(Ye.side===fs&&Be.layers.test(st.layers)){const Pn=Ye.side;Ye.side=ti,Ye.needsUpdate=!0,Ca(Be,it,st,se,Ye,Ce),Ye.side=Pn,Ye.needsUpdate=!0,be=!0}}be===!0&&(Bt.updateMultisampleRenderTarget(Mt),Bt.updateRenderTargetMipmap(Mt))}A.setRenderTarget(Kt,Wt,le),A.setClearColor(J,rt),ne!==void 0&&(st.viewport=ne),A.toneMapping=ue}function ni(U,X,it){const st=X.isScene===!0?X.overrideMaterial:null;for(let Y=0,Mt=U.length;Y<Mt;Y++){const It=U[Y],Kt=It.object,Wt=It.geometry,le=It.group;let ue=It.material;ue.allowOverride===!0&&st!==null&&(ue=st),Kt.layers.test(it.layers)&&Ca(Kt,X,it,Wt,ue,le)}}function Ca(U,X,it,st,Y,Mt){U.onBeforeRender(A,X,it,st,Y,Mt),U.modelViewMatrix.multiplyMatrices(it.matrixWorldInverse,U.matrixWorld),U.normalMatrix.getNormalMatrix(U.modelViewMatrix),Y.onBeforeRender(A,X,it,st,U,Mt),Y.transparent===!0&&Y.side===fs&&Y.forceSinglePass===!1?(Y.side=ti,Y.needsUpdate=!0,A.renderBufferDirect(it,X,st,Y,U,Mt),Y.side=Ws,Y.needsUpdate=!0,A.renderBufferDirect(it,X,st,Y,U,Mt),Y.side=fs):A.renderBufferDirect(it,X,st,Y,U,Mt),U.onAfterRender(A,X,it,st,Y,Mt)}function qe(U,X,it){X.isScene!==!0&&(X=Ue);const st=_t.get(U),Y=_.state.lights,Mt=_.state.shadowsArray,It=Y.state.version,Kt=pt.getParameters(U,Y.state,Mt,X,it),Wt=pt.getProgramCacheKey(Kt);let le=st.programs;st.environment=U.isMeshStandardMaterial?X.environment:null,st.fog=X.fog,st.envMap=(U.isMeshStandardMaterial?B:ce).get(U.envMap||st.environment),st.envMapRotation=st.environment!==null&&U.envMap===null?X.environmentRotation:U.envMapRotation,le===void 0&&(U.addEventListener("dispose",Ft),le=new Map,st.programs=le);let ue=le.get(Wt);if(ue!==void 0){if(st.currentProgram===ue&&st.lightsStateVersion===It)return Cr(U,Kt),ue}else Kt.uniforms=pt.getUniforms(U),U.onBeforeCompile(Kt,A),ue=pt.acquireProgram(Kt,Wt),le.set(Wt,ue),st.uniforms=Kt.uniforms;const ne=st.uniforms;return(!U.isShaderMaterial&&!U.isRawShaderMaterial||U.clipping===!0)&&(ne.clippingPlanes=Xt.uniform),Cr(U,Kt),st.needsLights=Pf(U),st.lightsStateVersion=It,st.needsLights&&(ne.ambientLightColor.value=Y.state.ambient,ne.lightProbe.value=Y.state.probe,ne.directionalLights.value=Y.state.directional,ne.directionalLightShadows.value=Y.state.directionalShadow,ne.spotLights.value=Y.state.spot,ne.spotLightShadows.value=Y.state.spotShadow,ne.rectAreaLights.value=Y.state.rectArea,ne.ltc_1.value=Y.state.rectAreaLTC1,ne.ltc_2.value=Y.state.rectAreaLTC2,ne.pointLights.value=Y.state.point,ne.pointLightShadows.value=Y.state.pointShadow,ne.hemisphereLights.value=Y.state.hemi,ne.directionalShadowMap.value=Y.state.directionalShadowMap,ne.directionalShadowMatrix.value=Y.state.directionalShadowMatrix,ne.spotShadowMap.value=Y.state.spotShadowMap,ne.spotLightMatrix.value=Y.state.spotLightMatrix,ne.spotLightMap.value=Y.state.spotLightMap,ne.pointShadowMap.value=Y.state.pointShadowMap,ne.pointShadowMatrix.value=Y.state.pointShadowMatrix),st.currentProgram=ue,st.uniformsList=null,ue}function wr(U){if(U.uniformsList===null){const X=U.currentProgram.getUniforms();U.uniformsList=sh.seqWithValue(X.seq,U.uniforms)}return U.uniformsList}function Cr(U,X){const it=_t.get(U);it.outputColorSpace=X.outputColorSpace,it.batching=X.batching,it.batchingColor=X.batchingColor,it.instancing=X.instancing,it.instancingColor=X.instancingColor,it.instancingMorph=X.instancingMorph,it.skinning=X.skinning,it.morphTargets=X.morphTargets,it.morphNormals=X.morphNormals,it.morphColors=X.morphColors,it.morphTargetsCount=X.morphTargetsCount,it.numClippingPlanes=X.numClippingPlanes,it.numIntersection=X.numClipIntersection,it.vertexAlphas=X.vertexAlphas,it.vertexTangents=X.vertexTangents,it.toneMapping=X.toneMapping}function Mc(U,X,it,st,Y){X.isScene!==!0&&(X=Ue),Bt.resetTextureUnits();const Mt=X.fog,It=st.isMeshStandardMaterial?X.environment:null,Kt=z===null?A.outputColorSpace:z.isXRRenderTarget===!0?z.texture.colorSpace:Ma,Wt=(st.isMeshStandardMaterial?B:ce).get(st.envMap||It),le=st.vertexColors===!0&&!!it.attributes.color&&it.attributes.color.itemSize===4,ue=!!it.attributes.tangent&&(!!st.normalMap||st.anisotropy>0),ne=!!it.morphAttributes.position,be=!!it.morphAttributes.normal,ze=!!it.morphAttributes.color;let Ke=gs;st.toneMapped&&(z===null||z.isXRRenderTarget===!0)&&(Ke=A.toneMapping);const Fe=it.morphAttributes.position||it.morphAttributes.normal||it.morphAttributes.color,Be=Fe!==void 0?Fe.length:0,se=_t.get(st),Ye=_.state.lights;if(St===!0&&(qt===!0||U!==w)){const An=U===w&&st.id===C;Xt.setState(st,U,An)}let Ce=!1;st.version===se.__version?(se.needsLights&&se.lightsStateVersion!==Ye.state.version||se.outputColorSpace!==Kt||Y.isBatchedMesh&&se.batching===!1||!Y.isBatchedMesh&&se.batching===!0||Y.isBatchedMesh&&se.batchingColor===!0&&Y.colorTexture===null||Y.isBatchedMesh&&se.batchingColor===!1&&Y.colorTexture!==null||Y.isInstancedMesh&&se.instancing===!1||!Y.isInstancedMesh&&se.instancing===!0||Y.isSkinnedMesh&&se.skinning===!1||!Y.isSkinnedMesh&&se.skinning===!0||Y.isInstancedMesh&&se.instancingColor===!0&&Y.instanceColor===null||Y.isInstancedMesh&&se.instancingColor===!1&&Y.instanceColor!==null||Y.isInstancedMesh&&se.instancingMorph===!0&&Y.morphTexture===null||Y.isInstancedMesh&&se.instancingMorph===!1&&Y.morphTexture!==null||se.envMap!==Wt||st.fog===!0&&se.fog!==Mt||se.numClippingPlanes!==void 0&&(se.numClippingPlanes!==Xt.numPlanes||se.numIntersection!==Xt.numIntersection)||se.vertexAlphas!==le||se.vertexTangents!==ue||se.morphTargets!==ne||se.morphNormals!==be||se.morphColors!==ze||se.toneMapping!==Ke||se.morphTargetsCount!==Be)&&(Ce=!0):(Ce=!0,se.__version=st.version);let Pn=se.currentProgram;Ce===!0&&(Pn=qe(st,X,Y));let ts=!1,In=!1,Zs=!1;const Xe=Pn.getUniforms(),Yn=se.uniforms;if(ht.useProgram(Pn.program)&&(ts=!0,In=!0,Zs=!0),st.id!==C&&(C=st.id,In=!0),ts||w!==U){ht.buffers.depth.getReversed()?(Ut.copy(U.projectionMatrix),S1(Ut),M1(Ut),Xe.setValue(O,"projectionMatrix",Ut)):Xe.setValue(O,"projectionMatrix",U.projectionMatrix),Xe.setValue(O,"viewMatrix",U.matrixWorldInverse);const wn=Xe.map.cameraPosition;wn!==void 0&&wn.setValue(O,fe.setFromMatrixPosition(U.matrixWorld)),At.logarithmicDepthBuffer&&Xe.setValue(O,"logDepthBufFC",2/(Math.log(U.far+1)/Math.LN2)),(st.isMeshPhongMaterial||st.isMeshToonMaterial||st.isMeshLambertMaterial||st.isMeshBasicMaterial||st.isMeshStandardMaterial||st.isShaderMaterial)&&Xe.setValue(O,"isOrthographic",U.isOrthographicCamera===!0),w!==U&&(w=U,In=!0,Zs=!0)}if(Y.isSkinnedMesh){Xe.setOptional(O,Y,"bindMatrix"),Xe.setOptional(O,Y,"bindMatrixInverse");const An=Y.skeleton;An&&(An.boneTexture===null&&An.computeBoneTexture(),Xe.setValue(O,"boneTexture",An.boneTexture,Bt))}Y.isBatchedMesh&&(Xe.setOptional(O,Y,"batchingTexture"),Xe.setValue(O,"batchingTexture",Y._matricesTexture,Bt),Xe.setOptional(O,Y,"batchingIdTexture"),Xe.setValue(O,"batchingIdTexture",Y._indirectTexture,Bt),Xe.setOptional(O,Y,"batchingColorTexture"),Y._colorsTexture!==null&&Xe.setValue(O,"batchingColorTexture",Y._colorsTexture,Bt));const Zn=it.morphAttributes;if((Zn.position!==void 0||Zn.normal!==void 0||Zn.color!==void 0)&&Pt.update(Y,it,Pn),(In||se.receiveShadow!==Y.receiveShadow)&&(se.receiveShadow=Y.receiveShadow,Xe.setValue(O,"receiveShadow",Y.receiveShadow)),st.isMeshGouraudMaterial&&st.envMap!==null&&(Yn.envMap.value=Wt,Yn.flipEnvMap.value=Wt.isCubeTexture&&Wt.isRenderTargetTexture===!1?-1:1),st.isMeshStandardMaterial&&st.envMap===null&&X.environment!==null&&(Yn.envMapIntensity.value=X.environmentIntensity),In&&(Xe.setValue(O,"toneMappingExposure",A.toneMappingExposure),se.needsLights&&bc(Yn,Zs),Mt&&st.fog===!0&&lt.refreshFogUniforms(Yn,Mt),lt.refreshMaterialUniforms(Yn,st,q,et,_.state.transmissionRenderTarget[U.id]),sh.upload(O,wr(se),Yn,Bt)),st.isShaderMaterial&&st.uniformsNeedUpdate===!0&&(sh.upload(O,wr(se),Yn,Bt),st.uniformsNeedUpdate=!1),st.isSpriteMaterial&&Xe.setValue(O,"center",Y.center),Xe.setValue(O,"modelViewMatrix",Y.modelViewMatrix),Xe.setValue(O,"normalMatrix",Y.normalMatrix),Xe.setValue(O,"modelMatrix",Y.matrixWorld),st.isShaderMaterial||st.isRawShaderMaterial){const An=st.uniformsGroups;for(let wn=0,es=An.length;wn<es;wn++){const ns=An[wn];H.update(ns,Pn),H.bind(ns,Pn)}}return Pn}function bc(U,X){U.ambientLightColor.needsUpdate=X,U.lightProbe.needsUpdate=X,U.directionalLights.needsUpdate=X,U.directionalLightShadows.needsUpdate=X,U.pointLights.needsUpdate=X,U.pointLightShadows.needsUpdate=X,U.spotLights.needsUpdate=X,U.spotLightShadows.needsUpdate=X,U.rectAreaLights.needsUpdate=X,U.hemisphereLights.needsUpdate=X}function Pf(U){return U.isMeshLambertMaterial||U.isMeshToonMaterial||U.isMeshPhongMaterial||U.isMeshStandardMaterial||U.isShadowMaterial||U.isShaderMaterial&&U.lights===!0}this.getActiveCubeFace=function(){return D},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return z},this.setRenderTargetTextures=function(U,X,it){const st=_t.get(U);st.__autoAllocateDepthBuffer=U.resolveDepthBuffer===!1,st.__autoAllocateDepthBuffer===!1&&(st.__useRenderToTexture=!1),_t.get(U.texture).__webglTexture=X,_t.get(U.depthTexture).__webglTexture=st.__autoAllocateDepthBuffer?void 0:it,st.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(U,X){const it=_t.get(U);it.__webglFramebuffer=X,it.__useDefaultFramebuffer=X===void 0};const Zo=O.createFramebuffer();this.setRenderTarget=function(U,X=0,it=0){z=U,D=X,P=it;let st=!0,Y=null,Mt=!1,It=!1;if(U){const Wt=_t.get(U);if(Wt.__useDefaultFramebuffer!==void 0)ht.bindFramebuffer(O.FRAMEBUFFER,null),st=!1;else if(Wt.__webglFramebuffer===void 0)Bt.setupRenderTarget(U);else if(Wt.__hasExternalTextures)Bt.rebindTextures(U,_t.get(U.texture).__webglTexture,_t.get(U.depthTexture).__webglTexture);else if(U.depthBuffer){const ne=U.depthTexture;if(Wt.__boundDepthTexture!==ne){if(ne!==null&&_t.has(ne)&&(U.width!==ne.image.width||U.height!==ne.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");Bt.setupDepthRenderbuffer(U)}}const le=U.texture;(le.isData3DTexture||le.isDataArrayTexture||le.isCompressedArrayTexture)&&(It=!0);const ue=_t.get(U).__webglFramebuffer;U.isWebGLCubeRenderTarget?(Array.isArray(ue[X])?Y=ue[X][it]:Y=ue[X],Mt=!0):U.samples>0&&Bt.useMultisampledRTT(U)===!1?Y=_t.get(U).__webglMultisampledFramebuffer:Array.isArray(ue)?Y=ue[it]:Y=ue,F.copy(U.viewport),$.copy(U.scissor),W=U.scissorTest}else F.copy(yt).multiplyScalar(q).floor(),$.copy(Ot).multiplyScalar(q).floor(),W=Qt;if(it!==0&&(Y=Zo),ht.bindFramebuffer(O.FRAMEBUFFER,Y)&&st&&ht.drawBuffers(U,Y),ht.viewport(F),ht.scissor($),ht.setScissorTest(W),Mt){const Wt=_t.get(U.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_CUBE_MAP_POSITIVE_X+X,Wt.__webglTexture,it)}else if(It){const Wt=_t.get(U.texture),le=X;O.framebufferTextureLayer(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,Wt.__webglTexture,it,le)}else if(U!==null&&it!==0){const Wt=_t.get(U.texture);O.framebufferTexture2D(O.FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,Wt.__webglTexture,it)}C=-1},this.readRenderTargetPixels=function(U,X,it,st,Y,Mt,It,Kt=0){if(!(U&&U.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Wt=_t.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&It!==void 0&&(Wt=Wt[It]),Wt){ht.bindFramebuffer(O.FRAMEBUFFER,Wt);try{const le=U.textures[Kt],ue=le.format,ne=le.type;if(!At.textureFormatReadable(ue)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!At.textureTypeReadable(ne)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}X>=0&&X<=U.width-st&&it>=0&&it<=U.height-Y&&(U.textures.length>1&&O.readBuffer(O.COLOR_ATTACHMENT0+Kt),O.readPixels(X,it,st,Y,Q.convert(ue),Q.convert(ne),Mt))}finally{const le=z!==null?_t.get(z).__webglFramebuffer:null;ht.bindFramebuffer(O.FRAMEBUFFER,le)}}},this.readRenderTargetPixelsAsync=async function(U,X,it,st,Y,Mt,It,Kt=0){if(!(U&&U.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Wt=_t.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&It!==void 0&&(Wt=Wt[It]),Wt)if(X>=0&&X<=U.width-st&&it>=0&&it<=U.height-Y){ht.bindFramebuffer(O.FRAMEBUFFER,Wt);const le=U.textures[Kt],ue=le.format,ne=le.type;if(!At.textureFormatReadable(ue))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!At.textureTypeReadable(ne))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const be=O.createBuffer();O.bindBuffer(O.PIXEL_PACK_BUFFER,be),O.bufferData(O.PIXEL_PACK_BUFFER,Mt.byteLength,O.STREAM_READ),U.textures.length>1&&O.readBuffer(O.COLOR_ATTACHMENT0+Kt),O.readPixels(X,it,st,Y,Q.convert(ue),Q.convert(ne),0);const ze=z!==null?_t.get(z).__webglFramebuffer:null;ht.bindFramebuffer(O.FRAMEBUFFER,ze);const Ke=O.fenceSync(O.SYNC_GPU_COMMANDS_COMPLETE,0);return O.flush(),await x1(O,Ke,4),O.bindBuffer(O.PIXEL_PACK_BUFFER,be),O.getBufferSubData(O.PIXEL_PACK_BUFFER,0,Mt),O.deleteBuffer(be),O.deleteSync(Ke),Mt}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(U,X=null,it=0){const st=Math.pow(2,-it),Y=Math.floor(U.image.width*st),Mt=Math.floor(U.image.height*st),It=X!==null?X.x:0,Kt=X!==null?X.y:0;Bt.setTexture2D(U,0),O.copyTexSubImage2D(O.TEXTURE_2D,it,0,0,It,Kt,Y,Mt),ht.unbindTexture()};const jo=O.createFramebuffer(),Ko=O.createFramebuffer();this.copyTextureToTexture=function(U,X,it=null,st=null,Y=0,Mt=null){Mt===null&&(Y!==0?(Ao("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Mt=Y,Y=0):Mt=0);let It,Kt,Wt,le,ue,ne,be,ze,Ke;const Fe=U.isCompressedTexture?U.mipmaps[Mt]:U.image;if(it!==null)It=it.max.x-it.min.x,Kt=it.max.y-it.min.y,Wt=it.isBox3?it.max.z-it.min.z:1,le=it.min.x,ue=it.min.y,ne=it.isBox3?it.min.z:0;else{const Zn=Math.pow(2,-Y);It=Math.floor(Fe.width*Zn),Kt=Math.floor(Fe.height*Zn),U.isDataArrayTexture?Wt=Fe.depth:U.isData3DTexture?Wt=Math.floor(Fe.depth*Zn):Wt=1,le=0,ue=0,ne=0}st!==null?(be=st.x,ze=st.y,Ke=st.z):(be=0,ze=0,Ke=0);const Be=Q.convert(X.format),se=Q.convert(X.type);let Ye;X.isData3DTexture?(Bt.setTexture3D(X,0),Ye=O.TEXTURE_3D):X.isDataArrayTexture||X.isCompressedArrayTexture?(Bt.setTexture2DArray(X,0),Ye=O.TEXTURE_2D_ARRAY):(Bt.setTexture2D(X,0),Ye=O.TEXTURE_2D),O.pixelStorei(O.UNPACK_FLIP_Y_WEBGL,X.flipY),O.pixelStorei(O.UNPACK_PREMULTIPLY_ALPHA_WEBGL,X.premultiplyAlpha),O.pixelStorei(O.UNPACK_ALIGNMENT,X.unpackAlignment);const Ce=O.getParameter(O.UNPACK_ROW_LENGTH),Pn=O.getParameter(O.UNPACK_IMAGE_HEIGHT),ts=O.getParameter(O.UNPACK_SKIP_PIXELS),In=O.getParameter(O.UNPACK_SKIP_ROWS),Zs=O.getParameter(O.UNPACK_SKIP_IMAGES);O.pixelStorei(O.UNPACK_ROW_LENGTH,Fe.width),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,Fe.height),O.pixelStorei(O.UNPACK_SKIP_PIXELS,le),O.pixelStorei(O.UNPACK_SKIP_ROWS,ue),O.pixelStorei(O.UNPACK_SKIP_IMAGES,ne);const Xe=U.isDataArrayTexture||U.isData3DTexture,Yn=X.isDataArrayTexture||X.isData3DTexture;if(U.isDepthTexture){const Zn=_t.get(U),An=_t.get(X),wn=_t.get(Zn.__renderTarget),es=_t.get(An.__renderTarget);ht.bindFramebuffer(O.READ_FRAMEBUFFER,wn.__webglFramebuffer),ht.bindFramebuffer(O.DRAW_FRAMEBUFFER,es.__webglFramebuffer);for(let ns=0;ns<Wt;ns++)Xe&&(O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,_t.get(U).__webglTexture,Y,ne+ns),O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,_t.get(X).__webglTexture,Mt,Ke+ns)),O.blitFramebuffer(le,ue,It,Kt,be,ze,It,Kt,O.DEPTH_BUFFER_BIT,O.NEAREST);ht.bindFramebuffer(O.READ_FRAMEBUFFER,null),ht.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else if(Y!==0||U.isRenderTargetTexture||_t.has(U)){const Zn=_t.get(U),An=_t.get(X);ht.bindFramebuffer(O.READ_FRAMEBUFFER,jo),ht.bindFramebuffer(O.DRAW_FRAMEBUFFER,Ko);for(let wn=0;wn<Wt;wn++)Xe?O.framebufferTextureLayer(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,Zn.__webglTexture,Y,ne+wn):O.framebufferTexture2D(O.READ_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,Zn.__webglTexture,Y),Yn?O.framebufferTextureLayer(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,An.__webglTexture,Mt,Ke+wn):O.framebufferTexture2D(O.DRAW_FRAMEBUFFER,O.COLOR_ATTACHMENT0,O.TEXTURE_2D,An.__webglTexture,Mt),Y!==0?O.blitFramebuffer(le,ue,It,Kt,be,ze,It,Kt,O.COLOR_BUFFER_BIT,O.NEAREST):Yn?O.copyTexSubImage3D(Ye,Mt,be,ze,Ke+wn,le,ue,It,Kt):O.copyTexSubImage2D(Ye,Mt,be,ze,le,ue,It,Kt);ht.bindFramebuffer(O.READ_FRAMEBUFFER,null),ht.bindFramebuffer(O.DRAW_FRAMEBUFFER,null)}else Yn?U.isDataTexture||U.isData3DTexture?O.texSubImage3D(Ye,Mt,be,ze,Ke,It,Kt,Wt,Be,se,Fe.data):X.isCompressedArrayTexture?O.compressedTexSubImage3D(Ye,Mt,be,ze,Ke,It,Kt,Wt,Be,Fe.data):O.texSubImage3D(Ye,Mt,be,ze,Ke,It,Kt,Wt,Be,se,Fe):U.isDataTexture?O.texSubImage2D(O.TEXTURE_2D,Mt,be,ze,It,Kt,Be,se,Fe.data):U.isCompressedTexture?O.compressedTexSubImage2D(O.TEXTURE_2D,Mt,be,ze,Fe.width,Fe.height,Be,Fe.data):O.texSubImage2D(O.TEXTURE_2D,Mt,be,ze,It,Kt,Be,se,Fe);O.pixelStorei(O.UNPACK_ROW_LENGTH,Ce),O.pixelStorei(O.UNPACK_IMAGE_HEIGHT,Pn),O.pixelStorei(O.UNPACK_SKIP_PIXELS,ts),O.pixelStorei(O.UNPACK_SKIP_ROWS,In),O.pixelStorei(O.UNPACK_SKIP_IMAGES,Zs),Mt===0&&X.generateMipmaps&&O.generateMipmap(Ye),ht.unbindTexture()},this.copyTextureToTexture3D=function(U,X,it=null,st=null,Y=0){return Ao('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(U,X,it,st,Y)},this.initRenderTarget=function(U){_t.get(U).__webglFramebuffer===void 0&&Bt.setupRenderTarget(U)},this.initTexture=function(U){U.isCubeTexture?Bt.setTextureCube(U,0):U.isData3DTexture?Bt.setTexture3D(U,0):U.isDataArrayTexture||U.isCompressedArrayTexture?Bt.setTexture2DArray(U,0):Bt.setTexture2D(U,0),ht.unbindTexture()},this.resetState=function(){D=0,P=0,z=null,ht.reset(),bt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Bi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=Re._getDrawingBufferColorSpace(t),e.unpackColorSpace=Re._getUnpackColorSpace()}}const N3=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Im,AddEquation:va,AddOperation:dx,AdditiveAnimationBlendMode:Wm,AdditiveBlending:fm,AgXToneMapping:_x,AlphaFormat:Hm,AlwaysCompare:Lx,AlwaysDepth:uh,AlwaysStencilFunc:gm,AmbientLight:TS,AnimationAction:LS,AnimationClip:cc,AnimationLoader:jT,AnimationMixer:EA,AnimationObjectGroup:MA,AnimationUtils:XT,ArcCurve:Jx,ArrayCamera:DS,ArrowHelper:kA,AttachedBindMode:mm,Audio:US,AudioAnalyser:fA,AudioContext:_g,AudioListener:cA,AudioLoader:rA,AxesHelper:WA,BackSide:ti,BasicDepthPacking:Ex,BasicShadowMap:Yy,BatchedMesh:qx,Bone:$m,BooleanKeyframeTrack:Er,Box2:DA,Box3:vn,Box3Helper:VA,BoxGeometry:br,BoxHelper:HA,BufferAttribute:We,BufferGeometry:ye,BufferGeometryLoader:RS,ByteType:zm,Cache:ms,Camera:hf,CameraHelper:FA,CanvasTexture:pT,CapsuleGeometry:_f,CatmullRomCurve3:Qx,CineonToneMapping:gx,CircleGeometry:yf,ClampToEdgeWrapping:zi,Clock:yg,Color:Gt,ColorKeyframeTrack:pg,ColorManagement:Re,CompressedArrayTexture:fT,CompressedCubeTexture:dT,CompressedTexture:vf,CompressedTextureLoader:KT,ConeGeometry:gc,ConstantAlphaFactor:ux,ConstantColorFactor:lx,Controls:qA,CubeCamera:Fx,CubeReflectionMapping:Xs,CubeRefractionMapping:Sa,CubeTexture:pc,CubeTextureLoader:JT,CubeUVReflectionMapping:Ho,CubicBezierCurve:ig,CubicBezierCurve3:$x,CubicInterpolant:vS,CullFaceBack:hm,CullFaceFront:qy,CullFaceFrontBack:xE,CullFaceNone:Xy,Curve:$i,CurvePath:eS,CustomBlending:Zy,CustomToneMapping:vx,CylinderGeometry:mc,Cylindrical:RA,Data3DTexture:uf,DataArrayTexture:cf,DataTexture:vs,DataTextureLoader:QT,DataUtils:z1,DecrementStencilOp:PE,DecrementWrapStencilOp:OE,DefaultLoadingManager:xS,DepthFormat:Uo,DepthStencilFormat:No,DepthTexture:eg,DetachedBindMode:xx,DirectionalLight:ES,DirectionalLightHelper:BA,DiscreteInterpolant:_S,DodecahedronGeometry:xf,DoubleSide:fs,DstAlphaFactor:ix,DstColorFactor:ax,DynamicCopyUsage:JE,DynamicDrawUsage:XE,DynamicReadUsage:ZE,EdgesGeometry:Kx,EllipseCurve:Sf,EqualCompare:Rx,EqualDepth:fh,EqualStencilFunc:HE,EquirectangularReflectionMapping:Zl,EquirectangularRefractionMapping:jl,Euler:Ti,EventDispatcher:ys,ExtrudeGeometry:Mf,FileLoader:Ys,Float16BufferAttribute:W1,Float32BufferAttribute:Zt,FloatType:ci,Fog:df,FogExp2:ff,FramebufferTexture:hT,FrontSide:Ws,Frustum:Go,FrustumArray:gf,GLBufferAttribute:CA,GLSL1:$E,GLSL3:vm,GreaterCompare:Dx,GreaterDepth:ph,GreaterEqualCompare:Nx,GreaterEqualDepth:dh,GreaterEqualStencilFunc:WE,GreaterStencilFunc:GE,GridHelper:OA,Group:Eo,HalfFloatType:Vo,HemisphereLight:SS,HemisphereLightHelper:IA,IcosahedronGeometry:bf,ImageBitmapLoader:aA,ImageLoader:uc,ImageUtils:Ox,IncrementStencilOp:LE,IncrementWrapStencilOp:IE,InstancedBufferAttribute:Oo,InstancedBufferGeometry:vg,InstancedInterleavedBuffer:Zh,InstancedMesh:Xx,Int16BufferAttribute:G1,Int32BufferAttribute:k1,Int8BufferAttribute:F1,IntType:ef,InterleavedBuffer:pf,InterleavedBufferAttribute:bi,Interpolant:yc,InterpolateDiscrete:Ql,InterpolateLinear:Gh,InterpolateSmooth:nh,InterpolationSamplingMode:n1,InterpolationSamplingType:e1,InvertStencilOp:zE,KeepStencilOp:cr,KeyframeTrack:Hi,LOD:kx,LatheGeometry:Ef,Layers:Po,LessCompare:Cx,LessDepth:hh,LessEqualCompare:Xm,LessEqualDepth:yr,LessEqualStencilFunc:VE,LessStencilFunc:FE,Light:wa,LightProbe:CS,Line:ba,Line3:IS,LineBasicMaterial:ei,LineCurve:sg,LineCurve3:tS,LineDashedMaterial:pS,LineLoop:Yx,LineSegments:xs,LinearFilter:gn,LinearInterpolant:dg,LinearMipMapLinearFilter:EE,LinearMipMapNearestFilter:bE,LinearMipmapLinearFilter:ps,LinearMipmapNearestFilter:Bl,LinearSRGBColorSpace:Ma,LinearToneMapping:px,LinearTransfer:tc,Loader:ui,LoaderUtils:Mm,LoadingManager:mg,LoopOnce:Sx,LoopPingPong:bx,LoopRepeat:Mx,MOUSE:or,Material:qn,MaterialLoader:Uf,MathUtils:Ym,Matrix2:bg,Matrix3:me,Matrix4:oe,MaxEquation:Qy,Mesh:cn,MeshBasicMaterial:Ta,MeshDepthMaterial:ug,MeshDistanceMaterial:hg,MeshLambertMaterial:fS,MeshMatcapMaterial:dS,MeshNormalMaterial:hS,MeshPhongMaterial:cS,MeshPhysicalMaterial:lS,MeshStandardMaterial:cg,MeshToonMaterial:uS,MinEquation:Jy,MirroredRepeatWrapping:Jl,MixOperation:fx,MultiplyBlending:pm,MultiplyOperation:fc,NearestFilter:Ln,NearestMipMapLinearFilter:ME,NearestMipMapNearestFilter:SE,NearestMipmapLinearFilter:Mo,NearestMipmapNearestFilter:Om,NeutralToneMapping:yx,NeverCompare:wx,NeverDepth:ch,NeverStencilFunc:BE,NoBlending:Gs,NoColorSpace:Hs,NoToneMapping:gs,NormalAnimationBlendMode:lf,NormalBlending:mr,NotEqualCompare:Ux,NotEqualDepth:mh,NotEqualStencilFunc:kE,NumberKeyframeTrack:oc,Object3D:Le,ObjectLoader:iA,ObjectSpaceNormalMap:Ax,OctahedronGeometry:vc,OneFactor:tx,OneMinusConstantAlphaFactor:hx,OneMinusConstantColorFactor:cx,OneMinusDstAlphaFactor:sx,OneMinusDstColorFactor:rx,OneMinusSrcAlphaFactor:lh,OneMinusSrcColorFactor:nx,OrthographicCamera:xa,PCFShadowMap:$h,PCFSoftShadowMap:zl,PMREMGenerator:Am,Path:Yh,PerspectiveCamera:ln,Plane:Fs,PlaneGeometry:ko,PlaneHelper:GA,PointLight:bS,PointLightHelper:LA,Points:Zx,PointsMaterial:tg,PolarGridHelper:zA,PolyhedronGeometry:Aa,PositionalAudio:hA,PropertyBinding:Ne,PropertyMixer:NS,QuadraticBezierCurve:ag,QuadraticBezierCurve3:rg,Quaternion:Xn,QuaternionKeyframeTrack:xc,QuaternionLinearInterpolant:yS,RED_GREEN_RGTC2_Format:Hh,RED_RGTC1_Format:km,REVISION:Fo,RGBADepthPacking:Tx,RGBAFormat:Wn,RGBAIntegerFormat:of,RGBA_ASTC_10x10_Format:Ph,RGBA_ASTC_10x5_Format:Uh,RGBA_ASTC_10x6_Format:Nh,RGBA_ASTC_10x8_Format:Lh,RGBA_ASTC_12x10_Format:Ih,RGBA_ASTC_12x12_Format:Oh,RGBA_ASTC_4x4_Format:bh,RGBA_ASTC_5x4_Format:Eh,RGBA_ASTC_5x5_Format:Th,RGBA_ASTC_6x5_Format:Ah,RGBA_ASTC_6x6_Format:wh,RGBA_ASTC_8x5_Format:Ch,RGBA_ASTC_8x6_Format:Rh,RGBA_ASTC_8x8_Format:Dh,RGBA_BPTC_Format:kl,RGBA_ETC2_EAC_Format:Mh,RGBA_PVRTC_2BPPV1_Format:yh,RGBA_PVRTC_4BPPV1_Format:_h,RGBA_S3TC_DXT1_Format:Hl,RGBA_S3TC_DXT3_Format:Vl,RGBA_S3TC_DXT5_Format:Gl,RGBDepthPacking:RE,RGBFormat:Vm,RGBIntegerFormat:TE,RGB_BPTC_SIGNED_Format:zh,RGB_BPTC_UNSIGNED_Format:Bh,RGB_ETC1_Format:xh,RGB_ETC2_Format:Sh,RGB_PVRTC_2BPPV1_Format:vh,RGB_PVRTC_4BPPV1_Format:gh,RGB_S3TC_DXT1_Format:Fl,RGDepthPacking:DE,RGFormat:Gm,RGIntegerFormat:rf,RawShaderMaterial:oS,Ray:Mr,Raycaster:PS,RectAreaLight:AS,RedFormat:af,RedIntegerFormat:dc,ReinhardToneMapping:mx,RenderTarget:Zm,RenderTarget3D:TA,RepeatWrapping:Kl,ReplaceStencilOp:NE,ReverseSubtractEquation:Ky,RingGeometry:Tf,SIGNED_RED_GREEN_RGTC2_Format:Vh,SIGNED_RED_RGTC1_Format:Fh,SRGBColorSpace:kn,SRGBTransfer:Ve,Scene:Jm,ShaderChunk:xe,ShaderLib:Ji,ShaderMaterial:Ai,ShadowMaterial:rS,Shape:vr,ShapeGeometry:Af,ShapePath:XA,ShapeUtils:Qi,ShortType:Bm,Skeleton:mf,SkeletonHelper:NA,SkinnedMesh:Wx,Source:ya,Sphere:_n,SphereGeometry:_c,Spherical:Em,SphericalHarmonics3:wS,SplineCurve:og,SpotLight:MS,SpotLightHelper:UA,Sprite:Gx,SpriteMaterial:Qm,SrcAlphaFactor:oh,SrcAlphaSaturateFactor:ox,SrcColorFactor:ex,StaticCopyUsage:KE,StaticDrawUsage:ec,StaticReadUsage:YE,StereoCamera:oA,StreamCopyUsage:QE,StreamDrawUsage:qE,StreamReadUsage:jE,StringKeyframeTrack:Tr,SubtractEquation:jy,SubtractiveBlending:dm,TOUCH:lr,TangentSpaceNormalMap:Ea,TetrahedronGeometry:wf,Texture:rn,TextureLoader:$T,TextureUtils:JA,TimestampQuery:t1,TorusGeometry:Cf,TorusKnotGeometry:Rf,Triangle:li,TriangleFanDrawMode:CE,TriangleStripDrawMode:wE,TrianglesDrawMode:AE,TubeGeometry:Df,UVMapping:tf,Uint16BufferAttribute:jm,Uint32BufferAttribute:Km,Uint8BufferAttribute:H1,Uint8ClampedBufferAttribute:V1,Uniform:Mg,UniformsGroup:wA,UniformsLib:Nt,UniformsUtils:kh,UnsignedByteType:Fi,UnsignedInt248Type:Do,UnsignedInt5999Type:Fm,UnsignedIntType:qs,UnsignedShort4444Type:nf,UnsignedShort5551Type:sf,UnsignedShortType:Ro,VSMShadowMap:Ki,Vector2:ut,Vector3:I,Vector4:Me,VectorKeyframeTrack:lc,VideoFrameTexture:uT,VideoTexture:jx,WebGL3DRenderTarget:w1,WebGLArrayRenderTarget:A1,WebGLCoordinateSystem:Bi,WebGLCubeRenderTarget:Hx,WebGLRenderTarget:_s,WebGLRenderer:kS,WebGLUtils:GS,WebGPUCoordinateSystem:nc,WebXRController:ih,WireframeGeometry:lg,WrapAroundEnding:$l,ZeroCurvatureEnding:fr,ZeroFactor:$y,ZeroSlopeEnding:dr,ZeroStencilOp:UE,createCanvasElement:Ix},Symbol.toStringTag,{value:"Module"}));var qp={exports:{}},Bs={};/**
 * @license React
 * react-reconciler-constants.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var gy;function L3(){return gy||(gy=1,Bs.ConcurrentRoot=1,Bs.ContinuousEventPriority=8,Bs.DefaultEventPriority=32,Bs.DiscreteEventPriority=2,Bs.IdleEventPriority=268435456,Bs.LegacyRoot=0,Bs.NoEventPriority=0),Bs}var vy;function P3(){return vy||(vy=1,qp.exports=L3()),qp.exports}var ah=P3(),Yp={exports:{}},Zp={},jp={exports:{}},Kp={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var _y;function I3(){if(_y)return Kp;_y=1;var s=Pm();function t(m,g){return m===g&&(m!==0||1/m===1/g)||m!==m&&g!==g}var e=typeof Object.is=="function"?Object.is:t,n=s.useState,i=s.useEffect,o=s.useLayoutEffect,l=s.useDebugValue;function c(m,g){var v=g(),x=n({inst:{value:v,getSnapshot:g}}),b=x[0].inst,S=x[1];return o(function(){b.value=v,b.getSnapshot=g,h(b)&&S({inst:b})},[m,v,g]),i(function(){return h(b)&&S({inst:b}),m(function(){h(b)&&S({inst:b})})},[m]),l(v),v}function h(m){var g=m.getSnapshot;m=m.value;try{var v=g();return!e(m,v)}catch{return!0}}function f(m,g){return g()}var p=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?f:c;return Kp.useSyncExternalStore=s.useSyncExternalStore!==void 0?s.useSyncExternalStore:p,Kp}var yy;function O3(){return yy||(yy=1,jp.exports=I3()),jp.exports}/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var xy;function z3(){if(xy)return Zp;xy=1;var s=Pm(),t=O3();function e(f,p){return f===p&&(f!==0||1/f===1/p)||f!==f&&p!==p}var n=typeof Object.is=="function"?Object.is:e,i=t.useSyncExternalStore,o=s.useRef,l=s.useEffect,c=s.useMemo,h=s.useDebugValue;return Zp.useSyncExternalStoreWithSelector=function(f,p,m,g,v){var x=o(null);if(x.current===null){var b={hasValue:!1,value:null};x.current=b}else b=x.current;x=c(function(){function _(D){if(!E){if(E=!0,T=D,D=g(D),v!==void 0&&b.hasValue){var P=b.value;if(v(P,D))return A=P}return A=D}if(P=A,n(T,D))return P;var z=g(D);return v!==void 0&&v(P,z)?(T=D,P):(T=D,A=z)}var E=!1,T,A,N=m===void 0?null:m;return[function(){return _(p())},N===null?void 0:function(){return _(N())}]},[p,m,g,v]);var S=i(f,x[0],x[1]);return l(function(){b.hasValue=!0,b.value=S},[S]),h(S),S},Zp}var Sy;function B3(){return Sy||(Sy=1,Yp.exports=z3()),Yp.exports}var F3=B3();const H3=Wy(F3),My=s=>{let t;const e=new Set,n=(f,p)=>{const m=typeof f=="function"?f(t):f;if(!Object.is(m,t)){const g=t;t=p??(typeof m!="object"||m===null)?m:Object.assign({},t,m),e.forEach(v=>v(t,g))}},i=()=>t,c={setState:n,getState:i,getInitialState:()=>h,subscribe:f=>(e.add(f),()=>e.delete(f))},h=t=s(n,i,c);return c},V3=s=>s?My(s):My,{useSyncExternalStoreWithSelector:G3}=H3,k3=s=>s;function W3(s,t=k3,e){const n=G3(s.subscribe,s.getState,s.getInitialState,t,e);return vE.useDebugValue(n),n}const by=(s,t)=>{const e=V3(s),n=(i,o=t)=>W3(e,i,o);return Object.assign(n,e),n},X3=(s,t)=>s?by(s,t):by;var Jp={exports:{}},Qp={exports:{}},$p={exports:{}},tm={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ey;function q3(){return Ey||(Ey=1,function(s){function t(k,et){var q=k.length;k.push(et);t:for(;0<q;){var ct=q-1>>>1,vt=k[ct];if(0<i(vt,et))k[ct]=et,k[q]=vt,q=ct;else break t}}function e(k){return k.length===0?null:k[0]}function n(k){if(k.length===0)return null;var et=k[0],q=k.pop();if(q!==et){k[0]=q;t:for(var ct=0,vt=k.length,yt=vt>>>1;ct<yt;){var Ot=2*(ct+1)-1,Qt=k[Ot],nt=Ot+1,St=k[nt];if(0>i(Qt,q))nt<vt&&0>i(St,Qt)?(k[ct]=St,k[nt]=q,ct=nt):(k[ct]=Qt,k[Ot]=q,ct=Ot);else if(nt<vt&&0>i(St,q))k[ct]=St,k[nt]=q,ct=nt;else break t}}return et}function i(k,et){var q=k.sortIndex-et.sortIndex;return q!==0?q:k.id-et.id}if(s.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var o=performance;s.unstable_now=function(){return o.now()}}else{var l=Date,c=l.now();s.unstable_now=function(){return l.now()-c}}var h=[],f=[],p=1,m=null,g=3,v=!1,x=!1,b=!1,S=typeof setTimeout=="function"?setTimeout:null,_=typeof clearTimeout=="function"?clearTimeout:null,E=typeof setImmediate<"u"?setImmediate:null;function T(k){for(var et=e(f);et!==null;){if(et.callback===null)n(f);else if(et.startTime<=k)n(f),et.sortIndex=et.expirationTime,t(h,et);else break;et=e(f)}}function A(k){if(b=!1,T(k),!x)if(e(h)!==null)x=!0,J();else{var et=e(f);et!==null&&rt(A,et.startTime-k)}}var N=!1,D=-1,P=5,z=-1;function C(){return!(s.unstable_now()-z<P)}function w(){if(N){var k=s.unstable_now();z=k;var et=!0;try{t:{x=!1,b&&(b=!1,_(D),D=-1),v=!0;var q=g;try{e:{for(T(k),m=e(h);m!==null&&!(m.expirationTime>k&&C());){var ct=m.callback;if(typeof ct=="function"){m.callback=null,g=m.priorityLevel;var vt=ct(m.expirationTime<=k);if(k=s.unstable_now(),typeof vt=="function"){m.callback=vt,T(k),et=!0;break e}m===e(h)&&n(h),T(k)}else n(h);m=e(h)}if(m!==null)et=!0;else{var yt=e(f);yt!==null&&rt(A,yt.startTime-k),et=!1}}break t}finally{m=null,g=q,v=!1}et=void 0}}finally{et?F():N=!1}}}var F;if(typeof E=="function")F=function(){E(w)};else if(typeof MessageChannel<"u"){var $=new MessageChannel,W=$.port2;$.port1.onmessage=w,F=function(){W.postMessage(null)}}else F=function(){S(w,0)};function J(){N||(N=!0,F())}function rt(k,et){D=S(function(){k(s.unstable_now())},et)}s.unstable_IdlePriority=5,s.unstable_ImmediatePriority=1,s.unstable_LowPriority=4,s.unstable_NormalPriority=3,s.unstable_Profiling=null,s.unstable_UserBlockingPriority=2,s.unstable_cancelCallback=function(k){k.callback=null},s.unstable_continueExecution=function(){x||v||(x=!0,J())},s.unstable_forceFrameRate=function(k){0>k||125<k?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<k?Math.floor(1e3/k):5},s.unstable_getCurrentPriorityLevel=function(){return g},s.unstable_getFirstCallbackNode=function(){return e(h)},s.unstable_next=function(k){switch(g){case 1:case 2:case 3:var et=3;break;default:et=g}var q=g;g=et;try{return k()}finally{g=q}},s.unstable_pauseExecution=function(){},s.unstable_requestPaint=function(){},s.unstable_runWithPriority=function(k,et){switch(k){case 1:case 2:case 3:case 4:case 5:break;default:k=3}var q=g;g=k;try{return et()}finally{g=q}},s.unstable_scheduleCallback=function(k,et,q){var ct=s.unstable_now();switch(typeof q=="object"&&q!==null?(q=q.delay,q=typeof q=="number"&&0<q?ct+q:ct):q=ct,k){case 1:var vt=-1;break;case 2:vt=250;break;case 5:vt=1073741823;break;case 4:vt=1e4;break;default:vt=5e3}return vt=q+vt,k={id:p++,callback:et,priorityLevel:k,startTime:q,expirationTime:vt,sortIndex:-1},q>ct?(k.sortIndex=q,t(f,k),e(h)===null&&k===e(f)&&(b?(_(D),D=-1):b=!0,rt(A,q-ct))):(k.sortIndex=vt,t(h,k),x||v||(x=!0,J())),k},s.unstable_shouldYield=C,s.unstable_wrapCallback=function(k){var et=g;return function(){var q=g;g=et;try{return k.apply(this,arguments)}finally{g=q}}}}(tm)),tm}var Ty;function WS(){return Ty||(Ty=1,$p.exports=q3()),$p.exports}/**
 * @license React
 * react-reconciler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Ay;function Y3(){return Ay||(Ay=1,function(s){s.exports=function(t){function e(a,r,u,d){return new PM(a,r,u,d)}function n(){}function i(a){var r="https://react.dev/errors/"+a;if(1<arguments.length){r+="?args[]="+encodeURIComponent(arguments[1]);for(var u=2;u<arguments.length;u++)r+="&args[]="+encodeURIComponent(arguments[u])}return"Minified React error #"+a+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function o(a){return a===null||typeof a!="object"?null:(a=s0&&a[s0]||a["@@iterator"],typeof a=="function"?a:null)}function l(a){if(a==null)return null;if(typeof a=="function")return a.$$typeof===HM?null:a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case Pr:return"Fragment";case Lr:return"Portal";case bd:return"Profiler";case e0:return"StrictMode";case Td:return"Suspense";case Ad:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case ta:return(a.displayName||"Context")+".Provider";case n0:return(a._context.displayName||"Context")+".Consumer";case Ed:var r=a.render;return a=a.displayName,a||(a=r.displayName||r.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case wd:return r=a.displayName||null,r!==null?r:l(a.type)||"Memo";case ea:r=a._payload,a=a._init;try{return l(a(r))}catch{}}return null}function c(a){if(Cd===void 0)try{throw Error()}catch(u){var r=u.stack.trim().match(/\n( *(at )?)/);Cd=r&&r[1]||"",a0=-1<u.stack.indexOf(`
    at`)?" (<anonymous>)":-1<u.stack.indexOf("@")?"@unknown:0:0":""}return`
`+Cd+a+a0}function h(a,r){if(!a||Rd)return"";Rd=!0;var u=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var d={DetermineComponentFrameRoot:function(){try{if(r){var Vt=function(){throw Error()};if(Object.defineProperty(Vt.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(Vt,[])}catch(ve){var kt=ve}Reflect.construct(a,[],Vt)}else{try{Vt.call()}catch(ve){kt=ve}a.call(Vt.prototype)}}else{try{throw Error()}catch(ve){kt=ve}(Vt=a())&&typeof Vt.catch=="function"&&Vt.catch(function(){})}}catch(ve){if(ve&&kt&&typeof ve.stack=="string")return[ve.stack,kt.stack]}return[null,null]}};d.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var y=Object.getOwnPropertyDescriptor(d.DetermineComponentFrameRoot,"name");y&&y.configurable&&Object.defineProperty(d.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var M=d.DetermineComponentFrameRoot(),L=M[0],G=M[1];if(L&&G){var j=L.split(`
`),ft=G.split(`
`);for(y=d=0;d<j.length&&!j[d].includes("DetermineComponentFrameRoot");)d++;for(;y<ft.length&&!ft[y].includes("DetermineComponentFrameRoot");)y++;if(d===j.length||y===ft.length)for(d=j.length-1,y=ft.length-1;1<=d&&0<=y&&j[d]!==ft[y];)y--;for(;1<=d&&0<=y;d--,y--)if(j[d]!==ft[y]){if(d!==1||y!==1)do if(d--,y--,0>y||j[d]!==ft[y]){var Rt=`
`+j[d].replace(" at new "," at ");return a.displayName&&Rt.includes("<anonymous>")&&(Rt=Rt.replace("<anonymous>",a.displayName)),Rt}while(1<=d&&0<=y);break}}}finally{Rd=!1,Error.prepareStackTrace=u}return(u=a?a.displayName||a.name:"")?c(u):""}function f(a){switch(a.tag){case 26:case 27:case 5:return c(a.type);case 16:return c("Lazy");case 13:return c("Suspense");case 19:return c("SuspenseList");case 0:case 15:return a=h(a.type,!1),a;case 11:return a=h(a.type.render,!1),a;case 1:return a=h(a.type,!0),a;default:return""}}function p(a){try{var r="";do r+=f(a),a=a.return;while(a);return r}catch(u){return`
Error generating stack: `+u.message+`
`+u.stack}}function m(a){var r=a,u=a;if(a.alternate)for(;r.return;)r=r.return;else{a=r;do r=a,(r.flags&4098)!==0&&(u=r.return),a=r.return;while(a)}return r.tag===3?u:null}function g(a){if(m(a)!==a)throw Error(i(188))}function v(a){var r=a.alternate;if(!r){if(r=m(a),r===null)throw Error(i(188));return r!==a?null:a}for(var u=a,d=r;;){var y=u.return;if(y===null)break;var M=y.alternate;if(M===null){if(d=y.return,d!==null){u=d;continue}break}if(y.child===M.child){for(M=y.child;M;){if(M===u)return g(y),a;if(M===d)return g(y),r;M=M.sibling}throw Error(i(188))}if(u.return!==d.return)u=y,d=M;else{for(var L=!1,G=y.child;G;){if(G===u){L=!0,u=y,d=M;break}if(G===d){L=!0,d=y,u=M;break}G=G.sibling}if(!L){for(G=M.child;G;){if(G===u){L=!0,u=M,d=y;break}if(G===d){L=!0,d=M,u=y;break}G=G.sibling}if(!L)throw Error(i(189))}}if(u.alternate!==d)throw Error(i(190))}if(u.tag!==3)throw Error(i(188));return u.stateNode.current===u?a:r}function x(a){var r=a.tag;if(r===5||r===26||r===27||r===6)return a;for(a=a.child;a!==null;){if(r=x(a),r!==null)return r;a=a.sibling}return null}function b(a){var r=a.tag;if(r===5||r===26||r===27||r===6)return a;for(a=a.child;a!==null;){if(a.tag!==4&&(r=b(a),r!==null))return r;a=a.sibling}return null}function S(a){return{current:a}}function _(a){0>Or||(a.current=Id[Or],Id[Or]=null,Or--)}function E(a,r){Or++,Id[Or]=a.current,a.current=r}function T(a){return a>>>=0,a===0?32:31-(eE(a)/nE|0)|0}function A(a){var r=a&42;if(r!==0)return r;switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194176;case 4194304:case 8388608:case 16777216:case 33554432:return a&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return a}}function N(a,r){var u=a.pendingLanes;if(u===0)return 0;var d=0,y=a.suspendedLanes,M=a.pingedLanes,L=a.warmLanes;a=a.finishedLanes!==0;var G=u&134217727;return G!==0?(u=G&~y,u!==0?d=A(u):(M&=G,M!==0?d=A(M):a||(L=G&~L,L!==0&&(d=A(L))))):(G=u&~y,G!==0?d=A(G):M!==0?d=A(M):a||(L=u&~L,L!==0&&(d=A(L)))),d===0?0:r!==0&&r!==d&&(r&y)===0&&(y=d&-d,L=r&-r,y>=L||y===32&&(L&4194176)!==0)?r:d}function D(a,r){return(a.pendingLanes&~(a.suspendedLanes&~a.pingedLanes)&r)===0}function P(a,r){switch(a){case 1:case 2:case 4:case 8:return r+250;case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return r+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function z(){var a=Fc;return Fc<<=1,(Fc&4194176)===0&&(Fc=128),a}function C(){var a=Hc;return Hc<<=1,(Hc&62914560)===0&&(Hc=4194304),a}function w(a){for(var r=[],u=0;31>u;u++)r.push(a);return r}function F(a,r){a.pendingLanes|=r,r!==268435456&&(a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0)}function $(a,r,u,d,y,M){var L=a.pendingLanes;a.pendingLanes=u,a.suspendedLanes=0,a.pingedLanes=0,a.warmLanes=0,a.expiredLanes&=u,a.entangledLanes&=u,a.errorRecoveryDisabledLanes&=u,a.shellSuspendCounter=0;var G=a.entanglements,j=a.expirationTimes,ft=a.hiddenUpdates;for(u=L&~u;0<u;){var Rt=31-gi(u),Vt=1<<Rt;G[Rt]=0,j[Rt]=-1;var kt=ft[Rt];if(kt!==null)for(ft[Rt]=null,Rt=0;Rt<kt.length;Rt++){var ve=kt[Rt];ve!==null&&(ve.lane&=-536870913)}u&=~Vt}d!==0&&W(a,d,0),M!==0&&y===0&&a.tag!==0&&(a.suspendedLanes|=M&~(L&~r))}function W(a,r,u){a.pendingLanes|=r,a.suspendedLanes&=~r;var d=31-gi(r);a.entangledLanes|=r,a.entanglements[d]=a.entanglements[d]|1073741824|u&4194218}function J(a,r){var u=a.entangledLanes|=r;for(a=a.entanglements;u;){var d=31-gi(u),y=1<<d;y&r|a[d]&r&&(a[d]|=r),u&=~y}}function rt(a){return a&=-a,2<a?8<a?(a&134217727)!==0?32:268435456:8:2}function k(a){if(vi&&typeof vi.onCommitFiberRoot=="function")try{vi.onCommitFiberRoot(ll,a,void 0,(a.current.flags&128)===128)}catch{}}function et(a){if(typeof oE=="function"&&lE(a),vi&&typeof vi.setStrictMode=="function")try{vi.setStrictMode(ll,a)}catch{}}function q(a,r){return a===r&&(a!==0||1/a===1/r)||a!==a&&r!==r}function ct(a,r){if(typeof a=="object"&&a!==null){var u=U0.get(a);return u!==void 0?u:(r={value:a,source:r,stack:p(r)},U0.set(a,r),r)}return{value:a,source:r,stack:p(r)}}function vt(a,r){Br[Fr++]=kc,Br[Fr++]=Gc,Gc=a,kc=r}function yt(a,r,u){Di[Ui++]=As,Di[Ui++]=ws,Di[Ui++]=za,za=a;var d=As;a=ws;var y=32-gi(d)-1;d&=~(1<<y),u+=1;var M=32-gi(r)+y;if(30<M){var L=y-y%5;M=(d&(1<<L)-1).toString(32),d>>=L,y-=L,As=1<<32-gi(r)+y|u<<y|d,ws=M+a}else As=1<<M|u<<y|d,ws=a}function Ot(a){a.return!==null&&(vt(a,1),yt(a,1,0))}function Qt(a){for(;a===Gc;)Gc=Br[--Fr],Br[Fr]=null,kc=Br[--Fr],Br[Fr]=null;for(;a===za;)za=Di[--Ui],Di[Ui]=null,ws=Di[--Ui],Di[Ui]=null,As=Di[--Ui],Di[Ui]=null}function nt(a,r){E(ia,r),E(cl,a),E(Rn,null),a=kM(r),_(Rn),E(Rn,a)}function St(){_(Rn),_(cl),_(ia)}function qt(a){a.memoizedState!==null&&E(Wc,a);var r=Rn.current,u=WM(r,a.type);r!==u&&(E(cl,a),E(Rn,u))}function Ut(a){cl.current===a&&(_(Rn),_(cl)),Wc.current===a&&(_(Wc),Ts?Oa._currentValue=Ir:Oa._currentValue2=Ir)}function Yt(a){var r=Error(i(418,""));throw re(ct(r,a)),Bd}function fe(a,r){if(!Ci)throw Error(i(175));zb(a.stateNode,a.type,a.memoizedProps,r,a)||Yt(a)}function ee(a){for(Kn=a.return;Kn;)switch(Kn.tag){case 3:case 27:is=!0;return;case 5:case 13:is=!1;return;default:Kn=Kn.return}}function Ue(a){if(!Ci||a!==Kn)return!1;if(!Pe)return ee(a),Pe=!0,!1;var r=!1;if(Bn?a.tag!==3&&a.tag!==27&&(a.tag!==5||x0(a.type)&&!Bc(a.type,a.memoizedProps))&&(r=!0):a.tag!==3&&(a.tag!==5||x0(a.type)&&!Bc(a.type,a.memoizedProps))&&(r=!0),r&&Fn&&Yt(a),ee(a),a.tag===13){if(!Ci)throw Error(i(316));if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(i(317));Fn=Hb(a)}else Fn=Kn?_0(a.stateNode):null;return!0}function ge(){Ci&&(Fn=Kn=null,Pe=!1)}function re(a){Xi===null?Xi=[a]:Xi.push(a)}function O(){for(var a=Hr,r=Fd=Hr=0;r<a;){var u=Ni[r];Ni[r++]=null;var d=Ni[r];Ni[r++]=null;var y=Ni[r];Ni[r++]=null;var M=Ni[r];if(Ni[r++]=null,d!==null&&y!==null){var L=d.pending;L===null?y.next=y:(y.next=L.next,L.next=y),d.pending=y}M!==0&&ht(u,y,M)}}function Ct(a,r,u,d){Ni[Hr++]=a,Ni[Hr++]=r,Ni[Hr++]=u,Ni[Hr++]=d,Fd|=d,a.lanes|=d,a=a.alternate,a!==null&&(a.lanes|=d)}function xt(a,r,u,d){return Ct(a,r,u,d),Ht(a)}function At(a,r){return Ct(a,null,null,r),Ht(a)}function ht(a,r,u){a.lanes|=u;var d=a.alternate;d!==null&&(d.lanes|=u);for(var y=!1,M=a.return;M!==null;)M.childLanes|=u,d=M.alternate,d!==null&&(d.childLanes|=u),M.tag===22&&(a=M.stateNode,a===null||a._visibility&1||(y=!0)),a=M,M=M.return;y&&r!==null&&a.tag===3&&(M=a.stateNode,y=31-gi(u),M=M.hiddenUpdates,a=M[y],a===null?M[y]=[r]:a.push(r),r.lane=u|536870912)}function Ht(a){if(50<_l)throw _l=0,ep=null,Error(i(185));for(var r=a.return;r!==null;)a=r,r=a.return;return a.tag===3?a.stateNode:null}function _t(a){a!==Vr&&a.next===null&&(Vr===null?Xc=Vr=a:Vr=Vr.next=a),qc=!0,Hd||(Hd=!0,ot(ce))}function Bt(a,r){if(!Vd&&qc){Vd=!0;do for(var u=!1,d=Xc;d!==null;){if(a!==0){var y=d.pendingLanes;if(y===0)var M=0;else{var L=d.suspendedLanes,G=d.pingedLanes;M=(1<<31-gi(42|a)+1)-1,M&=y&~(L&~G),M=M&201326677?M&201326677|1:M?M|2:0}M!==0&&(u=!0,K(d,M))}else M=De,M=N(d,d===Ze?M:0),(M&3)===0||D(d,M)||(u=!0,K(d,M));d=d.next}while(u);Vd=!1}}function ce(){qc=Hd=!1;var a=0;Gr!==0&&(QM()&&(a=Gr),Gr=0);for(var r=Wi(),u=null,d=Xc;d!==null;){var y=d.next,M=B(d,r);M===0?(d.next=null,u===null?Xc=y:u.next=y,y===null&&(Vr=u)):(u=d,(a!==0||(M&3)!==0)&&(qc=!0)),d=y}Bt(a)}function B(a,r){for(var u=a.suspendedLanes,d=a.pingedLanes,y=a.expirationTimes,M=a.pendingLanes&-62914561;0<M;){var L=31-gi(M),G=1<<L,j=y[L];j===-1?((G&u)===0||(G&d)!==0)&&(y[L]=P(G,r)):j<=r&&(a.expiredLanes|=G),M&=~G}if(r=Ze,u=De,u=N(a,a===r?u:0),d=a.callbackNode,u===0||a===r&&je===2||a.cancelPendingCommit!==null)return d!==null&&d!==null&&Od(d),a.callbackNode=null,a.callbackPriority=0;if((u&3)===0||D(a,u)){if(r=u&-u,r===a.callbackPriority)return r;switch(d!==null&&Od(d),rt(u)){case 2:case 8:u=aE;break;case 32:u=zd;break;case 268435456:u=rE;break;default:u=zd}return d=R.bind(null,a),u=Vc(u,d),a.callbackPriority=r,a.callbackNode=u,r}return d!==null&&d!==null&&Od(d),a.callbackPriority=2,a.callbackNode=null,2}function R(a,r){var u=a.callbackNode;if(La()&&a.callbackNode!==u)return null;var d=De;return d=N(a,a===Ze?d:0),d===0?null:(Pv(a,d,r),B(a,Wi()),a.callbackNode!=null&&a.callbackNode===u?R.bind(null,a):null)}function K(a,r){if(La())return null;Pv(a,r,!0)}function ot(a){sb?ab(function(){(ke&6)!==0?Vc(D0,a):a()}):Vc(D0,a)}function pt(){return Gr===0&&(Gr=z()),Gr}function lt(a,r){if(ul===null){var u=ul=[];Gd=0,kr=pt(),Wr={status:"pending",value:void 0,then:function(d){u.push(d)}}}return Gd++,r.then(Jt,Jt),r}function Jt(){if(--Gd===0&&ul!==null){Wr!==null&&(Wr.status="fulfilled");var a=ul;ul=null,kr=0,Wr=null;for(var r=0;r<a.length;r++)(0,a[r])()}}function Dt(a,r){var u=[],d={status:"pending",value:null,reason:null,then:function(y){u.push(y)}};return a.then(function(){d.status="fulfilled",d.value=r;for(var y=0;y<u.length;y++)(0,u[y])(r)},function(y){for(d.status="rejected",d.reason=y,y=0;y<u.length;y++)(0,u[y])(void 0)}),d}function Xt(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function jt(a,r){a=a.updateQueue,r.updateQueue===a&&(r.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,callbacks:null})}function mt(a){return{lane:a,tag:0,payload:null,callback:null,next:null}}function Pt(a,r,u){var d=a.updateQueue;if(d===null)return null;if(d=d.shared,(ke&2)!==0){var y=d.pending;return y===null?r.next=r:(r.next=y.next,y.next=r),d.pending=r,r=Ht(a),ht(a,null,u),r}return Ct(a,d,r,u),Ht(a)}function $t(a,r,u){if(r=r.updateQueue,r!==null&&(r=r.shared,(u&4194176)!==0)){var d=r.lanes;d&=a.pendingLanes,u|=d,r.lanes=u,J(a,u)}}function V(a,r){var u=a.updateQueue,d=a.alternate;if(d!==null&&(d=d.updateQueue,u===d)){var y=null,M=null;if(u=u.firstBaseUpdate,u!==null){do{var L={lane:u.lane,tag:u.tag,payload:u.payload,callback:null,next:null};M===null?y=M=L:M=M.next=L,u=u.next}while(u!==null);M===null?y=M=r:M=M.next=r}else y=M=r;u={baseState:d.baseState,firstBaseUpdate:y,lastBaseUpdate:M,shared:d.shared,callbacks:d.callbacks},a.updateQueue=u;return}a=u.lastBaseUpdate,a===null?u.firstBaseUpdate=r:a.next=r,u.lastBaseUpdate=r}function Q(){if(kd){var a=Wr;if(a!==null)throw a}}function bt(a,r,u,d){kd=!1;var y=a.updateQueue;sa=!1;var M=y.firstBaseUpdate,L=y.lastBaseUpdate,G=y.shared.pending;if(G!==null){y.shared.pending=null;var j=G,ft=j.next;j.next=null,L===null?M=ft:L.next=ft,L=j;var Rt=a.alternate;Rt!==null&&(Rt=Rt.updateQueue,G=Rt.lastBaseUpdate,G!==L&&(G===null?Rt.firstBaseUpdate=ft:G.next=ft,Rt.lastBaseUpdate=j))}if(M!==null){var Vt=y.baseState;L=0,Rt=ft=j=null,G=M;do{var kt=G.lane&-536870913,ve=kt!==G.lane;if(ve?(De&kt)===kt:(d&kt)===kt){kt!==0&&kt===kr&&(kd=!0),Rt!==null&&(Rt=Rt.next={lane:0,tag:G.tag,payload:G.payload,callback:null,next:null});t:{var Ii=a,yl=G;kt=r;var qa=u;switch(yl.tag){case 1:if(Ii=yl.payload,typeof Ii=="function"){Vt=Ii.call(qa,Vt,kt);break t}Vt=Ii;break t;case 3:Ii.flags=Ii.flags&-65537|128;case 0:if(Ii=yl.payload,kt=typeof Ii=="function"?Ii.call(qa,Vt,kt):Ii,kt==null)break t;Vt=Md({},Vt,kt);break t;case 2:sa=!0}}kt=G.callback,kt!==null&&(a.flags|=64,ve&&(a.flags|=8192),ve=y.callbacks,ve===null?y.callbacks=[kt]:ve.push(kt))}else ve={lane:kt,tag:G.tag,payload:G.payload,callback:G.callback,next:null},Rt===null?(ft=Rt=ve,j=Vt):Rt=Rt.next=ve,L|=kt;if(G=G.next,G===null){if(G=y.shared.pending,G===null)break;ve=G,G=ve.next,ve.next=null,y.lastBaseUpdate=ve,y.shared.pending=null}}while(!0);Rt===null&&(j=Vt),y.baseState=j,y.firstBaseUpdate=ft,y.lastBaseUpdate=Rt,M===null&&(y.shared.lanes=0),oa|=L,a.lanes=L,a.memoizedState=Vt}}function H(a,r){if(typeof a!="function")throw Error(i(191,a));a.call(r)}function Tt(a,r){var u=a.callbacks;if(u!==null)for(a.callbacks=null,a=0;a<u.length;a++)H(u[a],r)}function gt(a,r){if(_i(a,r))return!0;if(typeof a!="object"||a===null||typeof r!="object"||r===null)return!1;var u=Object.keys(a),d=Object.keys(r);if(u.length!==d.length)return!1;for(d=0;d<u.length;d++){var y=u[d];if(!cE.call(r,y)||!_i(a[y],r[y]))return!1}return!0}function zt(a){return a=a.status,a==="fulfilled"||a==="rejected"}function Et(){}function dt(a,r,u){switch(u=a[u],u===void 0?a.push(r):u!==r&&(r.then(Et,Et),r=u),r.status){case"fulfilled":return r.value;case"rejected":throw a=r.reason,a===hl?Error(i(483)):a;default:if(typeof r.status=="string")r.then(Et,Et);else{if(a=Ze,a!==null&&100<a.shellSuspendCounter)throw Error(i(482));a=r,a.status="pending",a.then(function(d){if(r.status==="pending"){var y=r;y.status="fulfilled",y.value=d}},function(d){if(r.status==="pending"){var y=r;y.status="rejected",y.reason=d}})}switch(r.status){case"fulfilled":return r.value;case"rejected":throw a=r.reason,a===hl?Error(i(483)):a}throw Xr=r,hl}}function Ft(){if(Xr===null)throw Error(i(459));var a=Xr;return Xr=null,a}function te(a){var r=fl;return fl+=1,qr===null&&(qr=[]),dt(qr,a,r)}function Te(a,r){r=r.props.ref,a.ref=r!==void 0?r:null}function Se(a,r){throw r.$$typeof===zM?Error(i(525)):(a=Object.prototype.toString.call(r),Error(i(31,a==="[object Object]"?"object with keys {"+Object.keys(r).join(", ")+"}":a)))}function un(a){var r=a._init;return r(a._payload)}function Tn(a){function r(tt,Z){if(a){var at=tt.deletions;at===null?(tt.deletions=[Z],tt.flags|=16):at.push(Z)}}function u(tt,Z){if(!a)return null;for(;Z!==null;)r(tt,Z),Z=Z.sibling;return null}function d(tt){for(var Z=new Map;tt!==null;)tt.key!==null?Z.set(tt.key,tt):Z.set(tt.index,tt),tt=tt.sibling;return Z}function y(tt,Z){return tt=$s(tt,Z),tt.index=0,tt.sibling=null,tt}function M(tt,Z,at){return tt.index=at,a?(at=tt.alternate,at!==null?(at=at.index,at<Z?(tt.flags|=33554434,Z):at):(tt.flags|=33554434,Z)):(tt.flags|=1048576,Z)}function L(tt){return a&&tt.alternate===null&&(tt.flags|=33554434),tt}function G(tt,Z,at,wt){return Z===null||Z.tag!==6?(Z=yd(at,tt.mode,wt),Z.return=tt,Z):(Z=y(Z,at),Z.return=tt,Z)}function j(tt,Z,at,wt){var ie=at.type;return ie===Pr?Rt(tt,Z,at.props.children,wt,at.key):Z!==null&&(Z.elementType===ie||typeof ie=="object"&&ie!==null&&ie.$$typeof===ea&&un(ie)===Z.type)?(Z=y(Z,at.props),Te(Z,at),Z.return=tt,Z):(Z=Ic(at.type,at.key,at.props,null,tt.mode,wt),Te(Z,at),Z.return=tt,Z)}function ft(tt,Z,at,wt){return Z===null||Z.tag!==4||Z.stateNode.containerInfo!==at.containerInfo||Z.stateNode.implementation!==at.implementation?(Z=xd(at,tt.mode,wt),Z.return=tt,Z):(Z=y(Z,at.children||[]),Z.return=tt,Z)}function Rt(tt,Z,at,wt,ie){return Z===null||Z.tag!==7?(Z=Pa(at,tt.mode,wt,ie),Z.return=tt,Z):(Z=y(Z,at),Z.return=tt,Z)}function Vt(tt,Z,at){if(typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint")return Z=yd(""+Z,tt.mode,at),Z.return=tt,Z;if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case Oc:return at=Ic(Z.type,Z.key,Z.props,null,tt.mode,at),Te(at,Z),at.return=tt,at;case Lr:return Z=xd(Z,tt.mode,at),Z.return=tt,Z;case ea:var wt=Z._init;return Z=wt(Z._payload),Vt(tt,Z,at)}if(zc(Z)||o(Z))return Z=Pa(Z,tt.mode,at,null),Z.return=tt,Z;if(typeof Z.then=="function")return Vt(tt,te(Z),at);if(Z.$$typeof===ta)return Vt(tt,Rc(tt,Z),at);Se(tt,Z)}return null}function kt(tt,Z,at,wt){var ie=Z!==null?Z.key:null;if(typeof at=="string"&&at!==""||typeof at=="number"||typeof at=="bigint")return ie!==null?null:G(tt,Z,""+at,wt);if(typeof at=="object"&&at!==null){switch(at.$$typeof){case Oc:return at.key===ie?j(tt,Z,at,wt):null;case Lr:return at.key===ie?ft(tt,Z,at,wt):null;case ea:return ie=at._init,at=ie(at._payload),kt(tt,Z,at,wt)}if(zc(at)||o(at))return ie!==null?null:Rt(tt,Z,at,wt,null);if(typeof at.then=="function")return kt(tt,Z,te(at),wt);if(at.$$typeof===ta)return kt(tt,Z,Rc(tt,at),wt);Se(tt,at)}return null}function ve(tt,Z,at,wt,ie){if(typeof wt=="string"&&wt!==""||typeof wt=="number"||typeof wt=="bigint")return tt=tt.get(at)||null,G(Z,tt,""+wt,ie);if(typeof wt=="object"&&wt!==null){switch(wt.$$typeof){case Oc:return tt=tt.get(wt.key===null?at:wt.key)||null,j(Z,tt,wt,ie);case Lr:return tt=tt.get(wt.key===null?at:wt.key)||null,ft(Z,tt,wt,ie);case ea:var Je=wt._init;return wt=Je(wt._payload),ve(tt,Z,at,wt,ie)}if(zc(wt)||o(wt))return tt=tt.get(at)||null,Rt(Z,tt,wt,ie,null);if(typeof wt.then=="function")return ve(tt,Z,at,te(wt),ie);if(wt.$$typeof===ta)return ve(tt,Z,at,Rc(Z,wt),ie);Se(Z,wt)}return null}function Ii(tt,Z,at,wt){for(var ie=null,Je=null,he=Z,Ie=Z=0,bn=null;he!==null&&Ie<at.length;Ie++){he.index>Ie?(bn=he,he=null):bn=he.sibling;var Oe=kt(tt,he,at[Ie],wt);if(Oe===null){he===null&&(he=bn);break}a&&he&&Oe.alternate===null&&r(tt,he),Z=M(Oe,Z,Ie),Je===null?ie=Oe:Je.sibling=Oe,Je=Oe,he=bn}if(Ie===at.length)return u(tt,he),Pe&&vt(tt,Ie),ie;if(he===null){for(;Ie<at.length;Ie++)he=Vt(tt,at[Ie],wt),he!==null&&(Z=M(he,Z,Ie),Je===null?ie=he:Je.sibling=he,Je=he);return Pe&&vt(tt,Ie),ie}for(he=d(he);Ie<at.length;Ie++)bn=ve(he,tt,Ie,at[Ie],wt),bn!==null&&(a&&bn.alternate!==null&&he.delete(bn.key===null?Ie:bn.key),Z=M(bn,Z,Ie),Je===null?ie=bn:Je.sibling=bn,Je=bn);return a&&he.forEach(function(ca){return r(tt,ca)}),Pe&&vt(tt,Ie),ie}function yl(tt,Z,at,wt){if(at==null)throw Error(i(151));for(var ie=null,Je=null,he=Z,Ie=Z=0,bn=null,Oe=at.next();he!==null&&!Oe.done;Ie++,Oe=at.next()){he.index>Ie?(bn=he,he=null):bn=he.sibling;var ca=kt(tt,he,Oe.value,wt);if(ca===null){he===null&&(he=bn);break}a&&he&&ca.alternate===null&&r(tt,he),Z=M(ca,Z,Ie),Je===null?ie=ca:Je.sibling=ca,Je=ca,he=bn}if(Oe.done)return u(tt,he),Pe&&vt(tt,Ie),ie;if(he===null){for(;!Oe.done;Ie++,Oe=at.next())Oe=Vt(tt,Oe.value,wt),Oe!==null&&(Z=M(Oe,Z,Ie),Je===null?ie=Oe:Je.sibling=Oe,Je=Oe);return Pe&&vt(tt,Ie),ie}for(he=d(he);!Oe.done;Ie++,Oe=at.next())Oe=ve(he,tt,Ie,Oe.value,wt),Oe!==null&&(a&&Oe.alternate!==null&&he.delete(Oe.key===null?Ie:Oe.key),Z=M(Oe,Z,Ie),Je===null?ie=Oe:Je.sibling=Oe,Je=Oe);return a&&he.forEach(function(gE){return r(tt,gE)}),Pe&&vt(tt,Ie),ie}function qa(tt,Z,at,wt){if(typeof at=="object"&&at!==null&&at.type===Pr&&at.key===null&&(at=at.props.children),typeof at=="object"&&at!==null){switch(at.$$typeof){case Oc:t:{for(var ie=at.key;Z!==null;){if(Z.key===ie){if(ie=at.type,ie===Pr){if(Z.tag===7){u(tt,Z.sibling),wt=y(Z,at.props.children),wt.return=tt,tt=wt;break t}}else if(Z.elementType===ie||typeof ie=="object"&&ie!==null&&ie.$$typeof===ea&&un(ie)===Z.type){u(tt,Z.sibling),wt=y(Z,at.props),Te(wt,at),wt.return=tt,tt=wt;break t}u(tt,Z);break}else r(tt,Z);Z=Z.sibling}at.type===Pr?(wt=Pa(at.props.children,tt.mode,wt,at.key),wt.return=tt,tt=wt):(wt=Ic(at.type,at.key,at.props,null,tt.mode,wt),Te(wt,at),wt.return=tt,tt=wt)}return L(tt);case Lr:t:{for(ie=at.key;Z!==null;){if(Z.key===ie)if(Z.tag===4&&Z.stateNode.containerInfo===at.containerInfo&&Z.stateNode.implementation===at.implementation){u(tt,Z.sibling),wt=y(Z,at.children||[]),wt.return=tt,tt=wt;break t}else{u(tt,Z);break}else r(tt,Z);Z=Z.sibling}wt=xd(at,tt.mode,wt),wt.return=tt,tt=wt}return L(tt);case ea:return ie=at._init,at=ie(at._payload),qa(tt,Z,at,wt)}if(zc(at))return Ii(tt,Z,at,wt);if(o(at)){if(ie=o(at),typeof ie!="function")throw Error(i(150));return at=ie.call(at),yl(tt,Z,at,wt)}if(typeof at.then=="function")return qa(tt,Z,te(at),wt);if(at.$$typeof===ta)return qa(tt,Z,Rc(tt,at),wt);Se(tt,at)}return typeof at=="string"&&at!==""||typeof at=="number"||typeof at=="bigint"?(at=""+at,Z!==null&&Z.tag===6?(u(tt,Z.sibling),wt=y(Z,at),wt.return=tt,tt=wt):(u(tt,Z),wt=yd(at,tt.mode,wt),wt.return=tt,tt=wt),L(tt)):u(tt,Z)}return function(tt,Z,at,wt){try{fl=0;var ie=qa(tt,Z,at,wt);return qr=null,ie}catch(he){if(he===hl)throw he;var Je=e(29,he,null,tt.mode);return Je.lanes=wt,Je.return=tt,Je}finally{}}}function qo(a,r){a=Us,E(Zc,a),E(Yr,r),Us=a|r.baseLanes}function Ar(){E(Zc,Us),E(Yr,Yr.current)}function Vi(){Us=Zc.current,_(Yr),_(Zc)}function wi(a){var r=a.alternate;E(mn,mn.current&1),E(Li,a),ss===null&&(r===null||Yr.current!==null||r.memoizedState!==null)&&(ss=a)}function Yo(a){if(a.tag===22){if(E(mn,mn.current),E(Li,a),ss===null){var r=a.alternate;r!==null&&r.memoizedState!==null&&(ss=a)}}else Gi()}function Gi(){E(mn,mn.current),E(Li,Li.current)}function ni(a){_(Li),ss===a&&(ss=null),_(mn)}function Ca(a){for(var r=a;r!==null;){if(r.tag===13){var u=r.memoizedState;if(u!==null&&(u=u.dehydrated,u===null||Nd(u)||Ld(u)))return r}else if(r.tag===19&&r.memoizedProps.revealOrder!==void 0){if((r.flags&128)!==0)return r}else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===a)break;for(;r.sibling===null;){if(r.return===null||r.return===a)return null;r=r.return}r.sibling.return=r.return,r=r.sibling}return null}function qe(){throw Error(i(321))}function wr(a,r){if(r===null)return!1;for(var u=0;u<r.length&&u<a.length;u++)if(!_i(a[u],r[u]))return!1;return!0}function Cr(a,r,u,d,y,M){return aa=M,Ee=r,r.memoizedState=null,r.updateQueue=null,r.lanes=0,de.H=a===null||a.memoizedState===null?Ha:ra,Fa=!1,M=u(d,y),Fa=!1,Zr&&(M=bc(r,u,d,y)),Mc(a),M}function Mc(a){de.H=as;var r=Ge!==null&&Ge.next!==null;if(aa=0,hn=Ge=Ee=null,jc=!1,dl=0,jr=null,r)throw Error(i(300));a===null||Sn||(a=a.dependencies,a!==null&&Cc(a)&&(Sn=!0))}function bc(a,r,u,d){Ee=a;var y=0;do{if(Zr&&(jr=null),dl=0,Zr=!1,25<=y)throw Error(i(301));if(y+=1,hn=Ge=null,a.updateQueue!=null){var M=a.updateQueue;M.lastEffect=null,M.events=null,M.stores=null,M.memoCache!=null&&(M.memoCache.index=0)}de.H=Va,M=r(u,d)}while(Zr);return M}function Pf(){var a=de.H,r=a.useState()[0];return r=typeof r.then=="function"?it(r):r,a=a.useState()[0],(Ge!==null?Ge.memoizedState:null)!==a&&(Ee.flags|=1024),r}function Zo(){var a=Kc!==0;return Kc=0,a}function jo(a,r,u){r.updateQueue=a.updateQueue,r.flags&=-2053,a.lanes&=~u}function Ko(a){if(jc){for(a=a.memoizedState;a!==null;){var r=a.queue;r!==null&&(r.pending=null),a=a.next}jc=!1}aa=0,hn=Ge=Ee=null,Zr=!1,dl=Kc=0,jr=null}function U(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return hn===null?Ee.memoizedState=hn=a:hn=hn.next=a,hn}function X(){if(Ge===null){var a=Ee.alternate;a=a!==null?a.memoizedState:null}else a=Ge.next;var r=hn===null?Ee.memoizedState:hn.next;if(r!==null)hn=r,Ge=a;else{if(a===null)throw Ee.alternate===null?Error(i(467)):Error(i(310));Ge=a,a={memoizedState:Ge.memoizedState,baseState:Ge.baseState,baseQueue:Ge.baseQueue,queue:Ge.queue,next:null},hn===null?Ee.memoizedState=hn=a:hn=hn.next=a}return hn}function it(a){var r=dl;return dl+=1,jr===null&&(jr=[]),a=dt(jr,a,r),r=Ee,(hn===null?r.memoizedState:hn.next)===null&&(r=r.alternate,de.H=r===null||r.memoizedState===null?Ha:ra),a}function st(a){if(a!==null&&typeof a=="object"){if(typeof a.then=="function")return it(a);if(a.$$typeof===ta)return On(a)}throw Error(i(438,String(a)))}function Y(a){var r=null,u=Ee.updateQueue;if(u!==null&&(r=u.memoCache),r==null){var d=Ee.alternate;d!==null&&(d=d.updateQueue,d!==null&&(d=d.memoCache,d!=null&&(r={data:d.data.map(function(y){return y.slice()}),index:0})))}if(r==null&&(r={data:[],index:0}),u===null&&(u=Xd(),Ee.updateQueue=u),u.memoCache=r,u=r.data[r.index],u===void 0)for(u=r.data[r.index]=Array(a),d=0;d<a;d++)u[d]=FM;return r.index++,u}function Mt(a,r){return typeof r=="function"?r(a):r}function It(a){var r=X();return Kt(r,Ge,a)}function Kt(a,r,u){var d=a.queue;if(d===null)throw Error(i(311));d.lastRenderedReducer=u;var y=a.baseQueue,M=d.pending;if(M!==null){if(y!==null){var L=y.next;y.next=M.next,M.next=L}r.baseQueue=y=M,d.pending=null}if(M=a.baseState,y===null)a.memoizedState=M;else{r=y.next;var G=L=null,j=null,ft=r,Rt=!1;do{var Vt=ft.lane&-536870913;if(Vt!==ft.lane?(De&Vt)===Vt:(aa&Vt)===Vt){var kt=ft.revertLane;if(kt===0)j!==null&&(j=j.next={lane:0,revertLane:0,action:ft.action,hasEagerState:ft.hasEagerState,eagerState:ft.eagerState,next:null}),Vt===kr&&(Rt=!0);else if((aa&kt)===kt){ft=ft.next,kt===kr&&(Rt=!0);continue}else Vt={lane:0,revertLane:ft.revertLane,action:ft.action,hasEagerState:ft.hasEagerState,eagerState:ft.eagerState,next:null},j===null?(G=j=Vt,L=M):j=j.next=Vt,Ee.lanes|=kt,oa|=kt;Vt=ft.action,Fa&&u(M,Vt),M=ft.hasEagerState?ft.eagerState:u(M,Vt)}else kt={lane:Vt,revertLane:ft.revertLane,action:ft.action,hasEagerState:ft.hasEagerState,eagerState:ft.eagerState,next:null},j===null?(G=j=kt,L=M):j=j.next=kt,Ee.lanes|=Vt,oa|=Vt;ft=ft.next}while(ft!==null&&ft!==r);if(j===null?L=M:j.next=G,!_i(M,a.memoizedState)&&(Sn=!0,Rt&&(u=Wr,u!==null)))throw u;a.memoizedState=M,a.baseState=L,a.baseQueue=j,d.lastRenderedState=M}return y===null&&(d.lanes=0),[a.memoizedState,d.dispatch]}function Wt(a){var r=X(),u=r.queue;if(u===null)throw Error(i(311));u.lastRenderedReducer=a;var d=u.dispatch,y=u.pending,M=r.memoizedState;if(y!==null){u.pending=null;var L=y=y.next;do M=a(M,L.action),L=L.next;while(L!==y);_i(M,r.memoizedState)||(Sn=!0),r.memoizedState=M,r.baseQueue===null&&(r.baseState=M),u.lastRenderedState=M}return[M,d]}function le(a,r,u){var d=Ee,y=X(),M=Pe;if(M){if(u===void 0)throw Error(i(407));u=u()}else u=r();var L=!_i((Ge||y).memoizedState,u);if(L&&(y.memoizedState=u,Sn=!0),y=y.queue,If(be.bind(null,d,y,a),[a]),y.getSnapshot!==r||L||hn!==null&&hn.memoizedState.tag&1){if(d.flags|=2048,es(9,ne.bind(null,d,y,u,r),{destroy:void 0},null),Ze===null)throw Error(i(349));M||(aa&60)!==0||ue(d,r,u)}return u}function ue(a,r,u){a.flags|=16384,a={getSnapshot:r,value:u},r=Ee.updateQueue,r===null?(r=Xd(),Ee.updateQueue=r,r.stores=[a]):(u=r.stores,u===null?r.stores=[a]:u.push(a))}function ne(a,r,u,d){r.value=u,r.getSnapshot=d,ze(r)&&Ke(a)}function be(a,r,u){return u(function(){ze(r)&&Ke(a)})}function ze(a){var r=a.getSnapshot;a=a.value;try{var u=r();return!_i(a,u)}catch{return!0}}function Ke(a){var r=At(a,2);r!==null&&jn(r,a,2)}function Fe(a){var r=U();if(typeof a=="function"){var u=a;if(a=u(),Fa){et(!0);try{u()}finally{et(!1)}}}return r.memoizedState=r.baseState=a,r.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Mt,lastRenderedState:a},r}function Be(a,r,u,d){return a.baseState=u,Kt(a,Ge,typeof d=="function"?d:Mt)}function se(a,r,u,d,y){if(Ac(a))throw Error(i(485));if(a=r.action,a!==null){var M={payload:y,action:a,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(L){M.listeners.push(L)}};de.T!==null?u(!0):M.isTransition=!1,d(M),u=r.pending,u===null?(M.next=r.pending=M,Ye(r,M)):(M.next=u.next,r.pending=u.next=M)}}function Ye(a,r){var u=r.action,d=r.payload,y=a.state;if(r.isTransition){var M=de.T,L={};de.T=L;try{var G=u(y,d),j=de.S;j!==null&&j(L,G),Ce(a,r,G)}catch(ft){ts(a,r,ft)}finally{de.T=M}}else try{M=u(y,d),Ce(a,r,M)}catch(ft){ts(a,r,ft)}}function Ce(a,r,u){u!==null&&typeof u=="object"&&typeof u.then=="function"?u.then(function(d){Pn(a,r,d)},function(d){return ts(a,r,d)}):Pn(a,r,u)}function Pn(a,r,u){r.status="fulfilled",r.value=u,In(r),a.state=u,r=a.pending,r!==null&&(u=r.next,u===r?a.pending=null:(u=u.next,r.next=u,Ye(a,u)))}function ts(a,r,u){var d=a.pending;if(a.pending=null,d!==null){d=d.next;do r.status="rejected",r.reason=u,In(r),r=r.next;while(r!==d)}a.action=null}function In(a){a=a.listeners;for(var r=0;r<a.length;r++)(0,a[r])()}function Zs(a,r){return r}function Xe(a,r){if(Pe){var u=Ze.formState;if(u!==null){t:{var d=Ee;if(Pe){if(Fn){var y=Db(Fn,is);if(y){Fn=_0(y),d=Ub(y);break t}}Yt(d)}d=!1}d&&(r=u[0])}}u=U(),u.memoizedState=u.baseState=r,d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Zs,lastRenderedState:r},u.queue=d,u=kg.bind(null,Ee,d),d.dispatch=u,d=Fe(!1);var M=Ff.bind(null,Ee,!1,d.queue);return d=U(),y={state:r,dispatch:null,action:a,pending:null},d.queue=y,u=se.bind(null,Ee,y,M,u),y.dispatch=u,d.memoizedState=a,[r,u,!1]}function Yn(a){var r=X();return Zn(r,Ge,a)}function Zn(a,r,u){r=Kt(a,r,Zs)[0],a=It(Mt)[0],r=typeof r=="object"&&r!==null&&typeof r.then=="function"?it(r):r;var d=X(),y=d.queue,M=y.dispatch;return u!==d.memoizedState&&(Ee.flags|=2048,es(9,An.bind(null,y,u),{destroy:void 0},null)),[r,M,a]}function An(a,r){a.action=r}function wn(a){var r=X(),u=Ge;if(u!==null)return Zn(r,u,a);X(),r=r.memoizedState,u=X();var d=u.queue.dispatch;return u.memoizedState=a,[r,d,!1]}function es(a,r,u,d){return a={tag:a,create:r,inst:u,deps:d,next:null},r=Ee.updateQueue,r===null&&(r=Xd(),Ee.updateQueue=r),u=r.lastEffect,u===null?r.lastEffect=a.next=a:(d=u.next,u.next=a,a.next=d,r.lastEffect=a),a}function ns(){return X().memoizedState}function Ec(a,r,u,d){var y=U();Ee.flags|=a,y.memoizedState=es(1|r,u,{destroy:void 0},d===void 0?null:d)}function Tc(a,r,u,d){var y=X();d=d===void 0?null:d;var M=y.memoizedState.inst;Ge!==null&&d!==null&&wr(d,Ge.memoizedState.deps)?y.memoizedState=es(r,u,M,d):(Ee.flags|=a,y.memoizedState=es(1|r,u,M,d))}function Ug(a,r){Ec(8390656,8,a,r)}function If(a,r){Tc(2048,8,a,r)}function Ng(a,r){return Tc(4,2,a,r)}function Lg(a,r){return Tc(4,4,a,r)}function Pg(a,r){if(typeof r=="function"){a=a();var u=r(a);return function(){typeof u=="function"?u():r(null)}}if(r!=null)return a=a(),r.current=a,function(){r.current=null}}function Ig(a,r,u){u=u!=null?u.concat([a]):null,Tc(4,4,Pg.bind(null,r,a),u)}function Of(){}function Og(a,r){var u=X();r=r===void 0?null:r;var d=u.memoizedState;return r!==null&&wr(r,d[1])?d[0]:(u.memoizedState=[a,r],a)}function zg(a,r){var u=X();r=r===void 0?null:r;var d=u.memoizedState;if(r!==null&&wr(r,d[1]))return d[0];if(d=a(),Fa){et(!0);try{a()}finally{et(!1)}}return u.memoizedState=[d,r],d}function zf(a,r,u){return u===void 0||(aa&1073741824)!==0?a.memoizedState=r:(a.memoizedState=u,a=Lv(),Ee.lanes|=a,oa|=a,u)}function Bg(a,r,u,d){return _i(u,r)?u:Yr.current!==null?(a=zf(a,u,d),_i(a,r)||(Sn=!0),a):(aa&42)===0?(Sn=!0,a.memoizedState=u):(a=Lv(),Ee.lanes|=a,oa|=a,r)}function Fg(a,r,u,d,y){var M=Ia();si(M!==0&&8>M?M:8);var L=de.T,G={};de.T=G,Ff(a,!1,r,u);try{var j=y(),ft=de.S;if(ft!==null&&ft(G,j),j!==null&&typeof j=="object"&&typeof j.then=="function"){var Rt=Dt(j,d);Jo(a,r,Rt,pi(a))}else Jo(a,r,d,pi(a))}catch(Vt){Jo(a,r,{then:function(){},status:"rejected",reason:Vt},pi())}finally{si(M),de.T=L}}function Hg(a){var r=a.memoizedState;if(r!==null)return r;r={memoizedState:Ir,baseState:Ir,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Mt,lastRenderedState:Ir},next:null};var u={};return r.next={memoizedState:u,baseState:u,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Mt,lastRenderedState:u},next:null},a.memoizedState=r,a=a.alternate,a!==null&&(a.memoizedState=r),r}function Bf(){return On(Oa)}function Vg(){return X().memoizedState}function Gg(){return X().memoizedState}function vM(a){for(var r=a.return;r!==null;){switch(r.tag){case 24:case 3:var u=pi();a=mt(u);var d=Pt(r,a,u);d!==null&&(jn(d,r,u),$t(d,r,u)),r={cache:Qf()},a.payload=r;return}r=r.return}}function _M(a,r,u){var d=pi();u={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null},Ac(a)?Wg(r,u):(u=xt(a,r,u,d),u!==null&&(jn(u,a,d),Xg(u,r,d)))}function kg(a,r,u){var d=pi();Jo(a,r,u,d)}function Jo(a,r,u,d){var y={lane:d,revertLane:0,action:u,hasEagerState:!1,eagerState:null,next:null};if(Ac(a))Wg(r,y);else{var M=a.alternate;if(a.lanes===0&&(M===null||M.lanes===0)&&(M=r.lastRenderedReducer,M!==null))try{var L=r.lastRenderedState,G=M(L,u);if(y.hasEagerState=!0,y.eagerState=G,_i(G,L))return Ct(a,r,y,0),Ze===null&&O(),!1}catch{}finally{}if(u=xt(a,r,y,d),u!==null)return jn(u,a,d),Xg(u,r,d),!0}return!1}function Ff(a,r,u,d){if(d={lane:2,revertLane:pt(),action:d,hasEagerState:!1,eagerState:null,next:null},Ac(a)){if(r)throw Error(i(479))}else r=xt(a,u,d,2),r!==null&&jn(r,a,2)}function Ac(a){var r=a.alternate;return a===Ee||r!==null&&r===Ee}function Wg(a,r){Zr=jc=!0;var u=a.pending;u===null?r.next=r:(r.next=u.next,u.next=r),a.pending=r}function Xg(a,r,u){if((u&4194176)!==0){var d=r.lanes;d&=a.pendingLanes,u|=d,r.lanes=u,J(a,u)}}function Hf(a,r,u,d){r=a.memoizedState,u=u(d,r),u=u==null?r:Md({},r,u),a.memoizedState=u,a.lanes===0&&(a.updateQueue.baseState=u)}function qg(a,r,u,d,y,M,L){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(d,M,L):r.prototype&&r.prototype.isPureReactComponent?!gt(u,d)||!gt(y,M):!0}function Yg(a,r,u,d){a=r.state,typeof r.componentWillReceiveProps=="function"&&r.componentWillReceiveProps(u,d),typeof r.UNSAFE_componentWillReceiveProps=="function"&&r.UNSAFE_componentWillReceiveProps(u,d),r.state!==a&&qd.enqueueReplaceState(r,r.state,null)}function Ra(a,r){var u=r;if("ref"in r){u={};for(var d in r)d!=="ref"&&(u[d]=r[d])}if(a=a.defaultProps){u===r&&(u=Md({},u));for(var y in a)u[y]===void 0&&(u[y]=a[y])}return u}function wc(a,r){try{var u=a.onUncaughtError;u(r.value,{componentStack:r.stack})}catch(d){setTimeout(function(){throw d})}}function Zg(a,r,u){try{var d=a.onCaughtError;d(u.value,{componentStack:u.stack,errorBoundary:r.tag===1?r.stateNode:null})}catch(y){setTimeout(function(){throw y})}}function Vf(a,r,u){return u=mt(u),u.tag=3,u.payload={element:null},u.callback=function(){wc(a,r)},u}function jg(a){return a=mt(a),a.tag=3,a}function Kg(a,r,u,d){var y=u.type.getDerivedStateFromError;if(typeof y=="function"){var M=d.value;a.payload=function(){return y(M)},a.callback=function(){Zg(r,u,d)}}var L=u.stateNode;L!==null&&typeof L.componentDidCatch=="function"&&(a.callback=function(){Zg(r,u,d),typeof y!="function"&&(la===null?la=new Set([this]):la.add(this));var G=d.stack;this.componentDidCatch(d.value,{componentStack:G!==null?G:""})})}function yM(a,r,u,d,y){if(u.flags|=32768,d!==null&&typeof d=="object"&&typeof d.then=="function"){if(r=u.alternate,r!==null&&$o(r,u,y,!0),u=Li.current,u!==null){switch(u.tag){case 13:return ss===null?md():u.alternate===null&&sn===0&&(sn=3),u.flags&=-257,u.flags|=65536,u.lanes=y,d===Yc?u.flags|=16384:(r=u.updateQueue,r===null?u.updateQueue=new Set([d]):r.add(d),vd(a,d,y)),!1;case 22:return u.flags|=65536,d===Yc?u.flags|=16384:(r=u.updateQueue,r===null?(r={transitions:null,markerInstances:null,retryQueue:new Set([d])},u.updateQueue=r):(u=r.retryQueue,u===null?r.retryQueue=new Set([d]):u.add(d)),vd(a,d,y)),!1}throw Error(i(435,u.tag))}return vd(a,d,y),md(),!1}if(Pe)return r=Li.current,r!==null?((r.flags&65536)===0&&(r.flags|=256),r.flags|=65536,r.lanes=y,d!==Bd&&(a=Error(i(422),{cause:d}),re(ct(a,u)))):(d!==Bd&&(r=Error(i(423),{cause:d}),re(ct(r,u))),a=a.current.alternate,a.flags|=65536,y&=-y,a.lanes|=y,d=ct(d,u),y=Vf(a.stateNode,d,y),V(a,y),sn!==4&&(sn=2)),!1;var M=Error(i(520),{cause:d});if(M=ct(M,u),ml===null?ml=[M]:ml.push(M),sn!==4&&(sn=2),r===null)return!0;d=ct(d,u),u=r;do{switch(u.tag){case 3:return u.flags|=65536,a=y&-y,u.lanes|=a,a=Vf(u.stateNode,d,a),V(u,a),!1;case 1:if(r=u.type,M=u.stateNode,(u.flags&128)===0&&(typeof r.getDerivedStateFromError=="function"||M!==null&&typeof M.componentDidCatch=="function"&&(la===null||!la.has(M))))return u.flags|=65536,y&=-y,u.lanes|=y,y=jg(y),Kg(y,a,u,d),V(u,y),!1}u=u.return}while(u!==null);return!1}function Cn(a,r,u,d){r.child=a===null?N0(r,null,u,d):Ba(r,a.child,u,d)}function Jg(a,r,u,d,y){u=u.render;var M=r.ref;if("ref"in d){var L={};for(var G in d)G!=="ref"&&(L[G]=d[G])}else L=d;return Da(r),d=Cr(a,r,u,L,M,y),G=Zo(),a!==null&&!Sn?(jo(a,r,y),Ss(a,r,y)):(Pe&&G&&Ot(r),r.flags|=1,Cn(a,r,d,y),r.child)}function Qg(a,r,u,d,y){if(a===null){var M=u.type;return typeof M=="function"&&!_d(M)&&M.defaultProps===void 0&&u.compare===null?(r.tag=15,r.type=M,$g(a,r,M,d,y)):(a=Ic(u.type,null,d,r,r.mode,y),a.ref=r.ref,a.return=r,r.child=a)}if(M=a.child,!jf(a,y)){var L=M.memoizedProps;if(u=u.compare,u=u!==null?u:gt,u(L,d)&&a.ref===r.ref)return Ss(a,r,y)}return r.flags|=1,a=$s(M,d),a.ref=r.ref,a.return=r,r.child=a}function $g(a,r,u,d,y){if(a!==null){var M=a.memoizedProps;if(gt(M,d)&&a.ref===r.ref)if(Sn=!1,r.pendingProps=d=M,jf(a,y))(a.flags&131072)!==0&&(Sn=!0);else return r.lanes=a.lanes,Ss(a,r,y)}return Gf(a,r,u,d,y)}function tv(a,r,u){var d=r.pendingProps,y=d.children,M=(r.stateNode._pendingVisibility&2)!==0,L=a!==null?a.memoizedState:null;if(Qo(a,r),d.mode==="hidden"||M){if((r.flags&128)!==0){if(d=L!==null?L.baseLanes|u:u,a!==null){for(y=r.child=a.child,M=0;y!==null;)M=M|y.lanes|y.childLanes,y=y.sibling;r.childLanes=M&~d}else r.childLanes=0,r.child=null;return ev(a,r,d,u)}if((u&536870912)!==0)r.memoizedState={baseLanes:0,cachePool:null},a!==null&&Dc(r,L!==null?L.cachePool:null),L!==null?qo(r,L):Ar(),Yo(r);else return r.lanes=r.childLanes=536870912,ev(a,r,L!==null?L.baseLanes|u:u,u)}else L!==null?(Dc(r,L.cachePool),qo(r,L),Gi(),r.memoizedState=null):(a!==null&&Dc(r,null),Ar(),Gi());return Cn(a,r,y,u),r.child}function ev(a,r,u,d){var y=$f();return y=y===null?null:{parent:Ts?en._currentValue:en._currentValue2,pool:y},r.memoizedState={baseLanes:u,cachePool:y},a!==null&&Dc(r,null),Ar(),Yo(r),a!==null&&$o(a,r,d,!0),null}function Qo(a,r){var u=r.ref;if(u===null)a!==null&&a.ref!==null&&(r.flags|=2097664);else{if(typeof u!="function"&&typeof u!="object")throw Error(i(284));(a===null||a.ref!==u)&&(r.flags|=2097664)}}function Gf(a,r,u,d,y){return Da(r),u=Cr(a,r,u,d,void 0,y),d=Zo(),a!==null&&!Sn?(jo(a,r,y),Ss(a,r,y)):(Pe&&d&&Ot(r),r.flags|=1,Cn(a,r,u,y),r.child)}function nv(a,r,u,d,y,M){return Da(r),r.updateQueue=null,u=bc(r,d,u,y),Mc(a),d=Zo(),a!==null&&!Sn?(jo(a,r,M),Ss(a,r,M)):(Pe&&d&&Ot(r),r.flags|=1,Cn(a,r,u,M),r.child)}function iv(a,r,u,d,y){if(Da(r),r.stateNode===null){var M=zr,L=u.contextType;typeof L=="object"&&L!==null&&(M=On(L)),M=new u(d,M),r.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,M.updater=qd,r.stateNode=M,M._reactInternals=r,M=r.stateNode,M.props=d,M.state=r.memoizedState,M.refs={},Xt(r),L=u.contextType,M.context=typeof L=="object"&&L!==null?On(L):zr,M.state=r.memoizedState,L=u.getDerivedStateFromProps,typeof L=="function"&&(Hf(r,u,L,d),M.state=r.memoizedState),typeof u.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(L=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),L!==M.state&&qd.enqueueReplaceState(M,M.state,null),bt(r,d,M,y),Q(),M.state=r.memoizedState),typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!0}else if(a===null){M=r.stateNode;var G=r.memoizedProps,j=Ra(u,G);M.props=j;var ft=M.context,Rt=u.contextType;L=zr,typeof Rt=="object"&&Rt!==null&&(L=On(Rt));var Vt=u.getDerivedStateFromProps;Rt=typeof Vt=="function"||typeof M.getSnapshotBeforeUpdate=="function",G=r.pendingProps!==G,Rt||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(G||ft!==L)&&Yg(r,M,d,L),sa=!1;var kt=r.memoizedState;M.state=kt,bt(r,d,M,y),Q(),ft=r.memoizedState,G||kt!==ft||sa?(typeof Vt=="function"&&(Hf(r,u,Vt,d),ft=r.memoizedState),(j=sa||qg(r,u,j,d,kt,ft,L))?(Rt||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount()),typeof M.componentDidMount=="function"&&(r.flags|=4194308)):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),r.memoizedProps=d,r.memoizedState=ft),M.props=d,M.state=ft,M.context=L,d=j):(typeof M.componentDidMount=="function"&&(r.flags|=4194308),d=!1)}else{M=r.stateNode,jt(a,r),L=r.memoizedProps,Rt=Ra(u,L),M.props=Rt,Vt=r.pendingProps,kt=M.context,ft=u.contextType,j=zr,typeof ft=="object"&&ft!==null&&(j=On(ft)),G=u.getDerivedStateFromProps,(ft=typeof G=="function"||typeof M.getSnapshotBeforeUpdate=="function")||typeof M.UNSAFE_componentWillReceiveProps!="function"&&typeof M.componentWillReceiveProps!="function"||(L!==Vt||kt!==j)&&Yg(r,M,d,j),sa=!1,kt=r.memoizedState,M.state=kt,bt(r,d,M,y),Q();var ve=r.memoizedState;L!==Vt||kt!==ve||sa||a!==null&&a.dependencies!==null&&Cc(a.dependencies)?(typeof G=="function"&&(Hf(r,u,G,d),ve=r.memoizedState),(Rt=sa||qg(r,u,Rt,d,kt,ve,j)||a!==null&&a.dependencies!==null&&Cc(a.dependencies))?(ft||typeof M.UNSAFE_componentWillUpdate!="function"&&typeof M.componentWillUpdate!="function"||(typeof M.componentWillUpdate=="function"&&M.componentWillUpdate(d,ve,j),typeof M.UNSAFE_componentWillUpdate=="function"&&M.UNSAFE_componentWillUpdate(d,ve,j)),typeof M.componentDidUpdate=="function"&&(r.flags|=4),typeof M.getSnapshotBeforeUpdate=="function"&&(r.flags|=1024)):(typeof M.componentDidUpdate!="function"||L===a.memoizedProps&&kt===a.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||L===a.memoizedProps&&kt===a.memoizedState||(r.flags|=1024),r.memoizedProps=d,r.memoizedState=ve),M.props=d,M.state=ve,M.context=j,d=Rt):(typeof M.componentDidUpdate!="function"||L===a.memoizedProps&&kt===a.memoizedState||(r.flags|=4),typeof M.getSnapshotBeforeUpdate!="function"||L===a.memoizedProps&&kt===a.memoizedState||(r.flags|=1024),d=!1)}return M=d,Qo(a,r),d=(r.flags&128)!==0,M||d?(M=r.stateNode,u=d&&typeof u.getDerivedStateFromError!="function"?null:M.render(),r.flags|=1,a!==null&&d?(r.child=Ba(r,a.child,null,y),r.child=Ba(r,null,u,y)):Cn(a,r,u,y),r.memoizedState=M.state,a=r.child):a=Ss(a,r,y),a}function sv(a,r,u,d){return ge(),r.flags|=256,Cn(a,r,u,d),r.child}function kf(a){return{baseLanes:a,cachePool:uv()}}function Wf(a,r,u){return a=a!==null?a.childLanes&~u:0,r&&(a|=Pi),a}function av(a,r,u){var d=r.pendingProps,y=!1,M=(r.flags&128)!==0,L;if((L=M)||(L=a!==null&&a.memoizedState===null?!1:(mn.current&2)!==0),L&&(y=!0,r.flags&=-129),L=(r.flags&32)!==0,r.flags&=-33,a===null){if(Pe){if(y?wi(r):Gi(),Pe){var G=Fn,j;(j=G)&&(G=Ob(G,is),G!==null?(r.memoizedState={dehydrated:G,treeContext:za!==null?{id:As,overflow:ws}:null,retryLane:536870912},j=e(18,null,null,0),j.stateNode=G,j.return=r,r.child=j,Kn=r,Fn=null,j=!0):j=!1),j||Yt(r)}if(G=r.memoizedState,G!==null&&(G=G.dehydrated,G!==null))return Ld(G)?r.lanes=16:r.lanes=536870912,null;ni(r)}return G=d.children,d=d.fallback,y?(Gi(),y=r.mode,G=qf({mode:"hidden",children:G},y),d=Pa(d,y,u,null),G.return=r,d.return=r,G.sibling=d,r.child=G,y=r.child,y.memoizedState=kf(u),y.childLanes=Wf(a,L,u),r.memoizedState=Yd,d):(wi(r),Xf(r,G))}if(j=a.memoizedState,j!==null&&(G=j.dehydrated,G!==null)){if(M)r.flags&256?(wi(r),r.flags&=-257,r=Yf(a,r,u)):r.memoizedState!==null?(Gi(),r.child=a.child,r.flags|=128,r=null):(Gi(),y=d.fallback,G=r.mode,d=qf({mode:"visible",children:d.children},G),y=Pa(y,G,u,null),y.flags|=2,d.return=r,y.return=r,d.sibling=y,r.child=d,Ba(r,a.child,null,u),d=r.child,d.memoizedState=kf(u),d.childLanes=Wf(a,L,u),r.memoizedState=Yd,r=y);else if(wi(r),Ld(G))L=Cb(G).digest,d=Error(i(419)),d.stack="",d.digest=L,re({value:d,source:null,stack:null}),r=Yf(a,r,u);else if(Sn||$o(a,r,u,!1),L=(u&a.childLanes)!==0,Sn||L){if(L=Ze,L!==null){if(d=u&-u,(d&42)!==0)d=1;else switch(d){case 2:d=1;break;case 8:d=4;break;case 32:d=16;break;case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:d=64;break;case 268435456:d=134217728;break;default:d=0}if(d=(d&(L.suspendedLanes|u))!==0?0:d,d!==0&&d!==j.retryLane)throw j.retryLane=d,At(a,d),jn(L,a,d),P0}Nd(G)||md(),r=Yf(a,r,u)}else Nd(G)?(r.flags|=128,r.child=a.child,r=UM.bind(null,a),Rb(G,r),r=null):(a=j.treeContext,Ci&&(Fn=Lb(G),Kn=r,Pe=!0,Xi=null,is=!1,a!==null&&(Di[Ui++]=As,Di[Ui++]=ws,Di[Ui++]=za,As=a.id,ws=a.overflow,za=r)),r=Xf(r,d.children),r.flags|=4096);return r}return y?(Gi(),y=d.fallback,G=r.mode,j=a.child,M=j.sibling,d=$s(j,{mode:"hidden",children:d.children}),d.subtreeFlags=j.subtreeFlags&31457280,M!==null?y=$s(M,y):(y=Pa(y,G,u,null),y.flags|=2),y.return=r,d.return=r,d.sibling=y,r.child=d,d=y,y=r.child,G=a.child.memoizedState,G===null?G=kf(u):(j=G.cachePool,j!==null?(M=Ts?en._currentValue:en._currentValue2,j=j.parent!==M?{parent:M,pool:M}:j):j=uv(),G={baseLanes:G.baseLanes|u,cachePool:j}),y.memoizedState=G,y.childLanes=Wf(a,L,u),r.memoizedState=Yd,d):(wi(r),u=a.child,a=u.sibling,u=$s(u,{mode:"visible",children:d.children}),u.return=r,u.sibling=null,a!==null&&(L=r.deletions,L===null?(r.deletions=[a],r.flags|=16):L.push(a)),r.child=u,r.memoizedState=null,u)}function Xf(a,r){return r=qf({mode:"visible",children:r},a.mode),r.return=a,a.child=r}function qf(a,r){return jv(a,r,0,null)}function Yf(a,r,u){return Ba(r,a.child,null,u),a=Xf(r,r.pendingProps.children),a.flags|=2,r.memoizedState=null,a}function rv(a,r,u){a.lanes|=r;var d=a.alternate;d!==null&&(d.lanes|=r),Kf(a.return,r,u)}function Zf(a,r,u,d,y){var M=a.memoizedState;M===null?a.memoizedState={isBackwards:r,rendering:null,renderingStartTime:0,last:d,tail:u,tailMode:y}:(M.isBackwards=r,M.rendering=null,M.renderingStartTime=0,M.last=d,M.tail=u,M.tailMode=y)}function ov(a,r,u){var d=r.pendingProps,y=d.revealOrder,M=d.tail;if(Cn(a,r,d.children,u),d=mn.current,(d&2)!==0)d=d&1|2,r.flags|=128;else{if(a!==null&&(a.flags&128)!==0)t:for(a=r.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&rv(a,u,r);else if(a.tag===19)rv(a,u,r);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===r)break t;for(;a.sibling===null;){if(a.return===null||a.return===r)break t;a=a.return}a.sibling.return=a.return,a=a.sibling}d&=1}switch(E(mn,d),y){case"forwards":for(u=r.child,y=null;u!==null;)a=u.alternate,a!==null&&Ca(a)===null&&(y=u),u=u.sibling;u=y,u===null?(y=r.child,r.child=null):(y=u.sibling,u.sibling=null),Zf(r,!1,y,u,M);break;case"backwards":for(u=null,y=r.child,r.child=null;y!==null;){if(a=y.alternate,a!==null&&Ca(a)===null){r.child=y;break}a=y.sibling,y.sibling=u,u=y,y=a}Zf(r,!0,u,null,M);break;case"together":Zf(r,!1,null,null,void 0);break;default:r.memoizedState=null}return r.child}function Ss(a,r,u){if(a!==null&&(r.dependencies=a.dependencies),oa|=r.lanes,(u&r.childLanes)===0)if(a!==null){if($o(a,r,u,!1),(u&r.childLanes)===0)return null}else return null;if(a!==null&&r.child!==a.child)throw Error(i(153));if(r.child!==null){for(a=r.child,u=$s(a,a.pendingProps),r.child=u,u.return=r;a.sibling!==null;)a=a.sibling,u=u.sibling=$s(a,a.pendingProps),u.return=r;u.sibling=null}return r.child}function jf(a,r){return(a.lanes&r)!==0?!0:(a=a.dependencies,!!(a!==null&&Cc(a)))}function xM(a,r,u){switch(r.tag){case 3:nt(r,r.stateNode.containerInfo),js(r,en,a.memoizedState.cache),ge();break;case 27:case 5:qt(r);break;case 4:nt(r,r.stateNode.containerInfo);break;case 10:js(r,r.type,r.memoizedProps.value);break;case 13:var d=r.memoizedState;if(d!==null)return d.dehydrated!==null?(wi(r),r.flags|=128,null):(u&r.child.childLanes)!==0?av(a,r,u):(wi(r),a=Ss(a,r,u),a!==null?a.sibling:null);wi(r);break;case 19:var y=(a.flags&128)!==0;if(d=(u&r.childLanes)!==0,d||($o(a,r,u,!1),d=(u&r.childLanes)!==0),y){if(d)return ov(a,r,u);r.flags|=128}if(y=r.memoizedState,y!==null&&(y.rendering=null,y.tail=null,y.lastEffect=null),E(mn,mn.current),d)break;return null;case 22:case 23:return r.lanes=0,tv(a,r,u);case 24:js(r,en,a.memoizedState.cache)}return Ss(a,r,u)}function lv(a,r,u){if(a!==null)if(a.memoizedProps!==r.pendingProps)Sn=!0;else{if(!jf(a,u)&&(r.flags&128)===0)return Sn=!1,xM(a,r,u);Sn=(a.flags&131072)!==0}else Sn=!1,Pe&&(r.flags&1048576)!==0&&yt(r,kc,r.index);switch(r.lanes=0,r.tag){case 16:t:{a=r.pendingProps;var d=r.elementType,y=d._init;if(d=y(d._payload),r.type=d,typeof d=="function")_d(d)?(a=Ra(d,a),r.tag=1,r=iv(null,r,d,a,u)):(r.tag=0,r=Gf(null,r,d,a,u));else{if(d!=null){if(y=d.$$typeof,y===Ed){r.tag=11,r=Jg(null,r,d,a,u);break t}else if(y===wd){r.tag=14,r=Qg(null,r,d,a,u);break t}}throw r=l(d)||d,Error(i(306,r,""))}}return r;case 0:return Gf(a,r,r.type,r.pendingProps,u);case 1:return d=r.type,y=Ra(d,r.pendingProps),iv(a,r,d,y,u);case 3:t:{if(nt(r,r.stateNode.containerInfo),a===null)throw Error(i(387));var M=r.pendingProps;y=r.memoizedState,d=y.element,jt(a,r),bt(r,M,null,u);var L=r.memoizedState;if(M=L.cache,js(r,en,M),M!==y.cache&&Jf(r,[en],u,!0),Q(),M=L.element,Ci&&y.isDehydrated)if(y={element:M,isDehydrated:!1,cache:L.cache},r.updateQueue.baseState=y,r.memoizedState=y,r.flags&256){r=sv(a,r,M,u);break t}else if(M!==d){d=ct(Error(i(424)),r),re(d),r=sv(a,r,M,u);break t}else for(Ci&&(Fn=Nb(r.stateNode.containerInfo),Kn=r,Pe=!0,Xi=null,is=!0),u=N0(r,null,M,u),r.child=u;u;)u.flags=u.flags&-3|4096,u=u.sibling;else{if(ge(),M===d){r=Ss(a,r,u);break t}Cn(a,r,M,u)}r=r.child}return r;case 26:if(Ri)return Qo(a,r),a===null?(u=M0(r.type,null,r.pendingProps,null))?r.memoizedState=u:Pe||(r.stateNode=Zb(r.type,r.pendingProps,ia.current,r)):r.memoizedState=M0(r.type,a.memoizedProps,r.pendingProps,a.memoizedState),null;case 27:if(Bn)return qt(r),a===null&&Bn&&Pe&&(d=r.stateNode=C0(r.type,r.pendingProps,ia.current,Rn.current,!1),Kn=r,is=!0,Fn=y0(d)),d=r.pendingProps.children,a!==null||Pe?Cn(a,r,d,u):r.child=Ba(r,null,d,u),Qo(a,r),r.child;case 5:return a===null&&Pe&&(Xb(r.type,r.pendingProps,Rn.current),(y=d=Fn)&&(d=Pb(d,r.type,r.pendingProps,is),d!==null?(r.stateNode=d,Kn=r,Fn=y0(d),is=!1,y=!0):y=!1),y||Yt(r)),qt(r),y=r.type,M=r.pendingProps,L=a!==null?a.memoizedProps:null,d=M.children,Bc(y,M)?d=null:L!==null&&Bc(y,L)&&(r.flags|=32),r.memoizedState!==null&&(y=Cr(a,r,Pf,null,null,u),Ts?Oa._currentValue=y:Oa._currentValue2=y),Qo(a,r),Cn(a,r,d,u),r.child;case 6:return a===null&&Pe&&(qb(r.pendingProps,Rn.current),(a=u=Fn)&&(u=Ib(u,r.pendingProps,is),u!==null?(r.stateNode=u,Kn=r,Fn=null,a=!0):a=!1),a||Yt(r)),null;case 13:return av(a,r,u);case 4:return nt(r,r.stateNode.containerInfo),d=r.pendingProps,a===null?r.child=Ba(r,null,d,u):Cn(a,r,d,u),r.child;case 11:return Jg(a,r,r.type,r.pendingProps,u);case 7:return Cn(a,r,r.pendingProps,u),r.child;case 8:return Cn(a,r,r.pendingProps.children,u),r.child;case 12:return Cn(a,r,r.pendingProps.children,u),r.child;case 10:return d=r.pendingProps,js(r,r.type,d.value),Cn(a,r,d.children,u),r.child;case 9:return y=r.type._context,d=r.pendingProps.children,Da(r),y=On(y),d=d(y),r.flags|=1,Cn(a,r,d,u),r.child;case 14:return Qg(a,r,r.type,r.pendingProps,u);case 15:return $g(a,r,r.type,r.pendingProps,u);case 19:return ov(a,r,u);case 22:return tv(a,r,u);case 24:return Da(r),d=On(en),a===null?(y=$f(),y===null&&(y=Ze,M=Qf(),y.pooledCache=M,M.refCount++,M!==null&&(y.pooledCacheLanes|=u),y=M),r.memoizedState={parent:d,cache:y},Xt(r),js(r,en,y)):((a.lanes&u)!==0&&(jt(a,r),bt(r,null,null,u),Q()),y=a.memoizedState,M=r.memoizedState,y.parent!==d?(y={parent:d,cache:d},r.memoizedState=y,r.lanes===0&&(r.memoizedState=r.updateQueue.baseState=y),js(r,en,d)):(d=M.cache,js(r,en,d),d!==y.cache&&Jf(r,[en],u,!0))),Cn(a,r,r.pendingProps.children,u),r.child;case 29:throw r.pendingProps}throw Error(i(156,r.tag))}function js(a,r,u){Ts?(E(Jc,r._currentValue),r._currentValue=u):(E(Jc,r._currentValue2),r._currentValue2=u)}function Ms(a){var r=Jc.current;Ts?a._currentValue=r:a._currentValue2=r,_(Jc)}function Kf(a,r,u){for(;a!==null;){var d=a.alternate;if((a.childLanes&r)!==r?(a.childLanes|=r,d!==null&&(d.childLanes|=r)):d!==null&&(d.childLanes&r)!==r&&(d.childLanes|=r),a===u)break;a=a.return}}function Jf(a,r,u,d){var y=a.child;for(y!==null&&(y.return=a);y!==null;){var M=y.dependencies;if(M!==null){var L=y.child;M=M.firstContext;t:for(;M!==null;){var G=M;M=y;for(var j=0;j<r.length;j++)if(G.context===r[j]){M.lanes|=u,G=M.alternate,G!==null&&(G.lanes|=u),Kf(M.return,u,a),d||(L=null);break t}M=G.next}}else if(y.tag===18){if(L=y.return,L===null)throw Error(i(341));L.lanes|=u,M=L.alternate,M!==null&&(M.lanes|=u),Kf(L,u,a),L=null}else L=y.child;if(L!==null)L.return=y;else for(L=y;L!==null;){if(L===a){L=null;break}if(y=L.sibling,y!==null){y.return=L.return,L=y;break}L=L.return}y=L}}function $o(a,r,u,d){a=null;for(var y=r,M=!1;y!==null;){if(!M){if((y.flags&524288)!==0)M=!0;else if((y.flags&262144)!==0)break}if(y.tag===10){var L=y.alternate;if(L===null)throw Error(i(387));if(L=L.memoizedProps,L!==null){var G=y.type;_i(y.pendingProps.value,L.value)||(a!==null?a.push(G):a=[G])}}else if(y===Wc.current){if(L=y.alternate,L===null)throw Error(i(387));L.memoizedState.memoizedState!==y.memoizedState.memoizedState&&(a!==null?a.push(Oa):a=[Oa])}y=y.return}a!==null&&Jf(r,a,u,d),r.flags|=262144}function Cc(a){for(a=a.firstContext;a!==null;){var r=a.context;if(!_i(Ts?r._currentValue:r._currentValue2,a.memoizedValue))return!0;a=a.next}return!1}function Da(a){Ga=a,Cs=null,a=a.dependencies,a!==null&&(a.firstContext=null)}function On(a){return cv(Ga,a)}function Rc(a,r){return Ga===null&&Da(a),cv(a,r)}function cv(a,r){var u=Ts?r._currentValue:r._currentValue2;if(r={context:r,memoizedValue:u,next:null},Cs===null){if(a===null)throw Error(i(308));Cs=r,a.dependencies={lanes:0,firstContext:r},a.flags|=524288}else Cs=Cs.next=r;return u}function Qf(){return{controller:new hE,data:new Map,refCount:0}}function tl(a){a.refCount--,a.refCount===0&&fE(dE,function(){a.controller.abort()})}function $f(){var a=ka.current;return a!==null?a:Ze.pooledCache}function Dc(a,r){r===null?E(ka,ka.current):E(ka,r.pool)}function uv(){var a=$f();return a===null?null:{parent:Ts?en._currentValue:en._currentValue2,pool:a}}function hi(a){a.flags|=4}function hv(a,r){if(a!==null&&a.child===r.child)return!1;if((r.flags&16)!==0)return!0;for(a=r.child;a!==null;){if((a.flags&13878)!==0||(a.subtreeFlags&13878)!==0)return!0;a=a.sibling}return!1}function td(a,r,u,d){if(zn)for(u=r.child;u!==null;){if(u.tag===5||u.tag===6)Dd(a,u.stateNode);else if(!(u.tag===4||Bn&&u.tag===27)&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===r)break;for(;u.sibling===null;){if(u.return===null||u.return===r)return;u=u.return}u.sibling.return=u.return,u=u.sibling}else if(na)for(var y=r.child;y!==null;){if(y.tag===5){var M=y.stateNode;u&&d&&(M=g0(M,y.type,y.memoizedProps)),Dd(a,M)}else if(y.tag===6)M=y.stateNode,u&&d&&(M=v0(M,y.memoizedProps)),Dd(a,M);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)M=y.child,M!==null&&(M.return=y),td(a,y,!0,!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===r)break;for(;y.sibling===null;){if(y.return===null||y.return===r)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function fv(a,r,u,d){if(na)for(var y=r.child;y!==null;){if(y.tag===5){var M=y.stateNode;u&&d&&(M=g0(M,y.type,y.memoizedProps)),p0(a,M)}else if(y.tag===6)M=y.stateNode,u&&d&&(M=v0(M,y.memoizedProps)),p0(a,M);else if(y.tag!==4){if(y.tag===22&&y.memoizedState!==null)M=y.child,M!==null&&(M.return=y),fv(a,y,!(y.memoizedProps!==null&&y.memoizedProps.mode==="manual"),!0);else if(y.child!==null){y.child.return=y,y=y.child;continue}}if(y===r)break;for(;y.sibling===null;){if(y.return===null||y.return===r)return;y=y.return}y.sibling.return=y.return,y=y.sibling}}function dv(a,r){if(na&&hv(a,r)){a=r.stateNode;var u=a.containerInfo,d=d0();fv(d,r,!1,!1),a.pendingChildren=d,hi(r),wb(u,d)}}function ed(a,r,u,d){if(zn)a.memoizedProps!==d&&hi(r);else if(na){var y=a.stateNode,M=a.memoizedProps;if((a=hv(a,r))||M!==d){var L=Rn.current;M=Ab(y,u,M,d,!a,null),M===y?r.stateNode=y:(o0(M,u,d,L)&&hi(r),r.stateNode=M,a?td(M,r,!1,!1):hi(r))}else r.stateNode=y}}function nd(a,r,u){if(tb(r,u)){if(a.flags|=16777216,!u0(r,u))if(Bv())a.flags|=8192;else throw Xr=Yc,Wd}else a.flags&=-16777217}function pv(a,r){if(Kb(r)){if(a.flags|=16777216,!w0(r))if(Bv())a.flags|=8192;else throw Xr=Yc,Wd}else a.flags&=-16777217}function Uc(a,r){r!==null&&(a.flags|=4),a.flags&16384&&(r=a.tag!==22?C():536870912,a.lanes|=r,Qr|=r)}function el(a,r){if(!Pe)switch(a.tailMode){case"hidden":r=a.tail;for(var u=null;r!==null;)r.alternate!==null&&(u=r),r=r.sibling;u===null?a.tail=null:u.sibling=null;break;case"collapsed":u=a.tail;for(var d=null;u!==null;)u.alternate!==null&&(d=u),u=u.sibling;d===null?r||a.tail===null?a.tail=null:a.tail.sibling=null:d.sibling=null}}function Qe(a){var r=a.alternate!==null&&a.alternate.child===a.child,u=0,d=0;if(r)for(var y=a.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags&31457280,d|=y.flags&31457280,y.return=a,y=y.sibling;else for(y=a.child;y!==null;)u|=y.lanes|y.childLanes,d|=y.subtreeFlags,d|=y.flags,y.return=a,y=y.sibling;return a.subtreeFlags|=d,a.childLanes=u,r}function SM(a,r,u){var d=r.pendingProps;switch(Qt(r),r.tag){case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Qe(r),null;case 1:return Qe(r),null;case 3:return u=r.stateNode,d=null,a!==null&&(d=a.memoizedState.cache),r.memoizedState.cache!==d&&(r.flags|=2048),Ms(en),St(),u.pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),(a===null||a.child===null)&&(Ue(r)?hi(r):a===null||a.memoizedState.isDehydrated&&(r.flags&256)===0||(r.flags|=1024,Xi!==null&&(dd(Xi),Xi=null))),dv(a,r),Qe(r),null;case 26:if(Ri){u=r.type;var y=r.memoizedState;return a===null?(hi(r),y!==null?(Qe(r),pv(r,y)):(Qe(r),nd(r,u,d))):y?y!==a.memoizedState?(hi(r),Qe(r),pv(r,y)):(Qe(r),r.flags&=-16777217):(zn?a.memoizedProps!==d&&hi(r):ed(a,r,u,d),Qe(r),nd(r,u,d)),null}case 27:if(Bn){if(Ut(r),u=ia.current,y=r.type,a!==null&&r.stateNode!=null)zn?a.memoizedProps!==d&&hi(r):ed(a,r,y,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return Qe(r),null}a=Rn.current,Ue(r)?fe(r,a):(a=C0(y,d,u,a,!0),r.stateNode=a,hi(r))}return Qe(r),null}case 5:if(Ut(r),u=r.type,a!==null&&r.stateNode!=null)ed(a,r,u,d);else{if(!d){if(r.stateNode===null)throw Error(i(166));return Qe(r),null}a=Rn.current,Ue(r)?fe(r,a):(y=YM(u,d,ia.current,a,r),td(y,r,!1,!1),r.stateNode=y,o0(y,u,d,a)&&hi(r))}return Qe(r),nd(r,r.type,r.pendingProps),null;case 6:if(a&&r.stateNode!=null)u=a.memoizedProps,zn?u!==d&&hi(r):na&&(u!==d?(r.stateNode=l0(d,ia.current,Rn.current,r),hi(r)):r.stateNode=a.stateNode);else{if(typeof d!="string"&&r.stateNode===null)throw Error(i(166));if(a=ia.current,u=Rn.current,Ue(r)){if(!Ci)throw Error(i(176));if(a=r.stateNode,u=r.memoizedProps,d=null,y=Kn,y!==null)switch(y.tag){case 27:case 5:d=y.memoizedProps}Bb(a,u,r,d)||Yt(r)}else r.stateNode=l0(d,a,u,r)}return Qe(r),null;case 13:if(d=r.memoizedState,a===null||a.memoizedState!==null&&a.memoizedState.dehydrated!==null){if(y=Ue(r),d!==null&&d.dehydrated!==null){if(a===null){if(!y)throw Error(i(318));if(!Ci)throw Error(i(344));if(y=r.memoizedState,y=y!==null?y.dehydrated:null,!y)throw Error(i(317));Fb(y,r)}else ge(),(r.flags&128)===0&&(r.memoizedState=null),r.flags|=4;Qe(r),y=!1}else Xi!==null&&(dd(Xi),Xi=null),y=!0;if(!y)return r.flags&256?(ni(r),r):(ni(r),null)}if(ni(r),(r.flags&128)!==0)return r.lanes=u,r;if(u=d!==null,a=a!==null&&a.memoizedState!==null,u){d=r.child,y=null,d.alternate!==null&&d.alternate.memoizedState!==null&&d.alternate.memoizedState.cachePool!==null&&(y=d.alternate.memoizedState.cachePool.pool);var M=null;d.memoizedState!==null&&d.memoizedState.cachePool!==null&&(M=d.memoizedState.cachePool.pool),M!==y&&(d.flags|=2048)}return u!==a&&u&&(r.child.flags|=8192),Uc(r,r.updateQueue),Qe(r),null;case 4:return St(),dv(a,r),a===null&&KM(r.stateNode.containerInfo),Qe(r),null;case 10:return Ms(r.type),Qe(r),null;case 19:if(_(mn),y=r.memoizedState,y===null)return Qe(r),null;if(d=(r.flags&128)!==0,M=y.rendering,M===null)if(d)el(y,!1);else{if(sn!==0||a!==null&&(a.flags&128)!==0)for(a=r.child;a!==null;){if(M=Ca(a),M!==null){for(r.flags|=128,el(y,!1),a=M.updateQueue,r.updateQueue=a,Uc(r,a),r.subtreeFlags=0,a=u,u=r.child;u!==null;)Zv(u,a),u=u.sibling;return E(mn,mn.current&1|2),r.child}a=a.sibling}y.tail!==null&&Wi()>gl&&(r.flags|=128,d=!0,el(y,!1),r.lanes=4194304)}else{if(!d)if(a=Ca(M),a!==null){if(r.flags|=128,d=!0,a=a.updateQueue,r.updateQueue=a,Uc(r,a),el(y,!0),y.tail===null&&y.tailMode==="hidden"&&!M.alternate&&!Pe)return Qe(r),null}else 2*Wi()-y.renderingStartTime>gl&&u!==536870912&&(r.flags|=128,d=!0,el(y,!1),r.lanes=4194304);y.isBackwards?(M.sibling=r.child,r.child=M):(a=y.last,a!==null?a.sibling=M:r.child=M,y.last=M)}return y.tail!==null?(r=y.tail,y.rendering=r,y.tail=r.sibling,y.renderingStartTime=Wi(),r.sibling=null,a=mn.current,E(mn,d?a&1|2:a&1),r):(Qe(r),null);case 22:case 23:return ni(r),Vi(),d=r.memoizedState!==null,a!==null?a.memoizedState!==null!==d&&(r.flags|=8192):d&&(r.flags|=8192),d?(u&536870912)!==0&&(r.flags&128)===0&&(Qe(r),r.subtreeFlags&6&&(r.flags|=8192)):Qe(r),u=r.updateQueue,u!==null&&Uc(r,u.retryQueue),u=null,a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),d=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(d=r.memoizedState.cachePool.pool),d!==u&&(r.flags|=2048),a!==null&&_(ka),null;case 24:return u=null,a!==null&&(u=a.memoizedState.cache),r.memoizedState.cache!==u&&(r.flags|=2048),Ms(en),Qe(r),null;case 25:return null}throw Error(i(156,r.tag))}function MM(a,r){switch(Qt(r),r.tag){case 1:return a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 3:return Ms(en),St(),a=r.flags,(a&65536)!==0&&(a&128)===0?(r.flags=a&-65537|128,r):null;case 26:case 27:case 5:return Ut(r),null;case 13:if(ni(r),a=r.memoizedState,a!==null&&a.dehydrated!==null){if(r.alternate===null)throw Error(i(340));ge()}return a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 19:return _(mn),null;case 4:return St(),null;case 10:return Ms(r.type),null;case 22:case 23:return ni(r),Vi(),a!==null&&_(ka),a=r.flags,a&65536?(r.flags=a&-65537|128,r):null;case 24:return Ms(en),null;case 25:return null;default:return null}}function mv(a,r){switch(Qt(r),r.tag){case 3:Ms(en),St();break;case 26:case 27:case 5:Ut(r);break;case 4:St();break;case 13:ni(r);break;case 19:_(mn);break;case 10:Ms(r.type);break;case 22:case 23:ni(r),Vi(),a!==null&&_(ka);break;case 24:Ms(en)}}function nl(a,r){try{var u=r.updateQueue,d=u!==null?u.lastEffect:null;if(d!==null){var y=d.next;u=y;do{if((u.tag&a)===a){d=void 0;var M=u.create,L=u.inst;d=M(),L.destroy=d}u=u.next}while(u!==y)}}catch(G){He(r,r.return,G)}}function Ks(a,r,u){try{var d=r.updateQueue,y=d!==null?d.lastEffect:null;if(y!==null){var M=y.next;d=M;do{if((d.tag&a)===a){var L=d.inst,G=L.destroy;if(G!==void 0){L.destroy=void 0,y=r;var j=u;try{G()}catch(ft){He(y,j,ft)}}}d=d.next}while(d!==M)}}catch(ft){He(r,r.return,ft)}}function gv(a){var r=a.updateQueue;if(r!==null){var u=a.stateNode;try{Tt(r,u)}catch(d){He(a,a.return,d)}}}function vv(a,r,u){u.props=Ra(a.type,a.memoizedProps),u.state=a.memoizedState;try{u.componentWillUnmount()}catch(d){He(a,r,d)}}function Ua(a,r){try{var u=a.ref;if(u!==null){var d=a.stateNode;switch(a.tag){case 26:case 27:case 5:var y=al(d);break;default:y=d}typeof u=="function"?a.refCleanup=u(y):u.current=y}}catch(M){He(a,r,M)}}function fi(a,r){var u=a.ref,d=a.refCleanup;if(u!==null)if(typeof d=="function")try{d()}catch(y){He(a,r,y)}finally{a.refCleanup=null,a=a.alternate,a!=null&&(a.refCleanup=null)}else if(typeof u=="function")try{u(null)}catch(y){He(a,r,y)}else u.current=null}function _v(a){var r=a.type,u=a.memoizedProps,d=a.stateNode;try{mb(d,r,u,a)}catch(y){He(a,a.return,y)}}function yv(a,r,u){try{gb(a.stateNode,a.type,u,r,a)}catch(d){He(a,a.return,d)}}function xv(a){return a.tag===5||a.tag===3||(Ri?a.tag===26:!1)||(Bn?a.tag===27:!1)||a.tag===4}function id(a){t:for(;;){for(;a.sibling===null;){if(a.return===null||xv(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&(!Bn||a.tag!==27)&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue t;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function sd(a,r,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,r?_b(u,a,r):db(u,a);else if(!(d===4||Bn&&d===27)&&(a=a.child,a!==null))for(sd(a,r,u),a=a.sibling;a!==null;)sd(a,r,u),a=a.sibling}function Nc(a,r,u){var d=a.tag;if(d===5||d===6)a=a.stateNode,r?vb(u,a,r):fb(u,a);else if(!(d===4||Bn&&d===27)&&(a=a.child,a!==null))for(Nc(a,r,u),a=a.sibling;a!==null;)Nc(a,r,u),a=a.sibling}function Sv(a,r,u){a=a.containerInfo;try{m0(a,u)}catch(d){He(r,r.return,d)}}function bM(a,r){for(XM(a.containerInfo),Mn=r;Mn!==null;)if(a=Mn,r=a.child,(a.subtreeFlags&1028)!==0&&r!==null)r.return=a,Mn=r;else for(;Mn!==null;){a=Mn;var u=a.alternate;switch(r=a.flags,a.tag){case 0:break;case 11:case 15:break;case 1:if((r&1024)!==0&&u!==null){r=void 0;var d=a,y=u.memoizedProps;u=u.memoizedState;var M=d.stateNode;try{var L=Ra(d.type,y,d.elementType===d.type);r=M.getSnapshotBeforeUpdate(L,u),M.__reactInternalSnapshotBeforeUpdate=r}catch(G){He(d,d.return,G)}}break;case 3:(r&1024)!==0&&zn&&Tb(a.stateNode.containerInfo);break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((r&1024)!==0)throw Error(i(163))}if(r=a.sibling,r!==null){r.return=a.return,Mn=r;break}Mn=a.return}return L=z0,z0=!1,L}function Mv(a,r,u){var d=u.flags;switch(u.tag){case 0:case 11:case 15:bs(a,u),d&4&&nl(5,u);break;case 1:if(bs(a,u),d&4)if(a=u.stateNode,r===null)try{a.componentDidMount()}catch(G){He(u,u.return,G)}else{var y=Ra(u.type,r.memoizedProps);r=r.memoizedState;try{a.componentDidUpdate(y,r,a.__reactInternalSnapshotBeforeUpdate)}catch(G){He(u,u.return,G)}}d&64&&gv(u),d&512&&Ua(u,u.return);break;case 3:if(bs(a,u),d&64&&(d=u.updateQueue,d!==null)){if(a=null,u.child!==null)switch(u.child.tag){case 27:case 5:a=al(u.child.stateNode);break;case 1:a=u.child.stateNode}try{Tt(d,a)}catch(G){He(u,u.return,G)}}break;case 26:if(Ri){bs(a,u),d&512&&Ua(u,u.return);break}case 27:case 5:bs(a,u),r===null&&d&4&&_v(u),d&512&&Ua(u,u.return);break;case 12:bs(a,u);break;case 13:bs(a,u),d&4&&Ev(a,u);break;case 22:if(y=u.memoizedState!==null||Rs,!y){r=r!==null&&r.memoizedState!==null||nn;var M=Rs,L=nn;Rs=y,(nn=r)&&!L?Js(a,u,(u.subtreeFlags&8772)!==0):bs(a,u),Rs=M,nn=L}d&512&&(u.memoizedProps.mode==="manual"?Ua(u,u.return):fi(u,u.return));break;default:bs(a,u)}}function bv(a){var r=a.alternate;r!==null&&(a.alternate=null,bv(r)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(r=a.stateNode,r!==null&&$M(r)),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function ki(a,r,u){for(u=u.child;u!==null;)ad(a,r,u),u=u.sibling}function ad(a,r,u){if(vi&&typeof vi.onCommitFiberUnmount=="function")try{vi.onCommitFiberUnmount(ll,u)}catch{}switch(u.tag){case 26:if(Ri){nn||fi(u,r),ki(a,r,u),u.memoizedState?E0(u.memoizedState):u.stateNode&&A0(u.stateNode);break}case 27:if(Bn){nn||fi(u,r);var d=fn,y=yi;fn=u.stateNode,ki(a,r,u),tE(u.stateNode),fn=d,yi=y;break}case 5:nn||fi(u,r);case 6:if(zn){if(d=fn,y=yi,fn=null,ki(a,r,u),fn=d,yi=y,fn!==null)if(yi)try{xb(fn,u.stateNode)}catch(M){He(u,r,M)}else try{yb(fn,u.stateNode)}catch(M){He(u,r,M)}}else ki(a,r,u);break;case 18:zn&&fn!==null&&(yi?Wb(fn,u.stateNode):kb(fn,u.stateNode));break;case 4:zn?(d=fn,y=yi,fn=u.stateNode.containerInfo,yi=!0,ki(a,r,u),fn=d,yi=y):(na&&Sv(u.stateNode,u,d0()),ki(a,r,u));break;case 0:case 11:case 14:case 15:nn||Ks(2,u,r),nn||Ks(4,u,r),ki(a,r,u);break;case 1:nn||(fi(u,r),d=u.stateNode,typeof d.componentWillUnmount=="function"&&vv(u,r,d)),ki(a,r,u);break;case 21:ki(a,r,u);break;case 22:nn||fi(u,r),nn=(d=nn)||u.memoizedState!==null,ki(a,r,u),nn=d;break;default:ki(a,r,u)}}function Ev(a,r){if(Ci&&r.memoizedState===null&&(a=r.alternate,a!==null&&(a=a.memoizedState,a!==null&&(a=a.dehydrated,a!==null))))try{Gb(a)}catch(u){He(r,r.return,u)}}function EM(a){switch(a.tag){case 13:case 19:var r=a.stateNode;return r===null&&(r=a.stateNode=new O0),r;case 22:return a=a.stateNode,r=a._retryCache,r===null&&(r=a._retryCache=new O0),r;default:throw Error(i(435,a.tag))}}function rd(a,r){var u=EM(a);r.forEach(function(d){var y=NM.bind(null,a,d);u.has(d)||(u.add(d),d.then(y,y))})}function ii(a,r){var u=r.deletions;if(u!==null)for(var d=0;d<u.length;d++){var y=u[d],M=a,L=r;if(zn){var G=L;t:for(;G!==null;){switch(G.tag){case 27:case 5:fn=G.stateNode,yi=!1;break t;case 3:fn=G.stateNode.containerInfo,yi=!0;break t;case 4:fn=G.stateNode.containerInfo,yi=!0;break t}G=G.return}if(fn===null)throw Error(i(160));ad(M,L,y),fn=null,yi=!1}else ad(M,L,y);M=y.alternate,M!==null&&(M.return=null),y.return=null}if(r.subtreeFlags&13878)for(r=r.child;r!==null;)Tv(r,a),r=r.sibling}function Tv(a,r){var u=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ii(r,a),di(a),d&4&&(Ks(3,a,a.return),nl(3,a),Ks(5,a,a.return));break;case 1:ii(r,a),di(a),d&512&&(nn||u===null||fi(u,u.return)),d&64&&Rs&&(a=a.updateQueue,a!==null&&(d=a.callbacks,d!==null&&(u=a.shared.hiddenCallbacks,a.shared.hiddenCallbacks=u===null?d:u.concat(d))));break;case 26:if(Ri){var y=qi;ii(r,a),di(a),d&512&&(nn||u===null||fi(u,u.return)),d&4&&(d=u!==null?u.memoizedState:null,r=a.memoizedState,u===null?r===null?a.stateNode===null?a.stateNode=Yb(y,a.type,a.memoizedProps,a):T0(y,a.type,a.stateNode):a.stateNode=b0(y,r,a.memoizedProps):d!==r?(d===null?u.stateNode!==null&&A0(u.stateNode):E0(d),r===null?T0(y,a.type,a.stateNode):b0(y,r,a.memoizedProps)):r===null&&a.stateNode!==null&&yv(a,a.memoizedProps,u.memoizedProps));break}case 27:if(Bn&&d&4&&a.alternate===null){y=a.stateNode;var M=a.memoizedProps;try{Qb(y),$b(a.type,M,y,a)}catch(Rt){He(a,a.return,Rt)}}case 5:if(ii(r,a),di(a),d&512&&(nn||u===null||fi(u,u.return)),zn){if(a.flags&32){r=a.stateNode;try{f0(r)}catch(Rt){He(a,a.return,Rt)}}d&4&&a.stateNode!=null&&(r=a.memoizedProps,yv(a,r,u!==null?u.memoizedProps:r)),d&1024&&(Zd=!0)}break;case 6:if(ii(r,a),di(a),d&4&&zn){if(a.stateNode===null)throw Error(i(162));d=a.memoizedProps,u=u!==null?u.memoizedProps:d,r=a.stateNode;try{pb(r,u,d)}catch(Rt){He(a,a.return,Rt)}}break;case 3:if(Ri?(jb(),y=qi,qi=Pd(r.containerInfo),ii(r,a),qi=y):ii(r,a),di(a),d&4){if(zn&&Ci&&u!==null&&u.memoizedState.isDehydrated)try{Vb(r.containerInfo)}catch(Rt){He(a,a.return,Rt)}if(na){d=r.containerInfo,u=r.pendingChildren;try{m0(d,u)}catch(Rt){He(a,a.return,Rt)}}}Zd&&(Zd=!1,Av(a));break;case 4:Ri?(u=qi,qi=Pd(a.stateNode.containerInfo),ii(r,a),di(a),qi=u):(ii(r,a),di(a)),d&4&&na&&Sv(a.stateNode,a,a.stateNode.pendingChildren);break;case 12:ii(r,a),di(a);break;case 13:ii(r,a),di(a),a.child.flags&8192&&a.memoizedState!==null!=(u!==null&&u.memoizedState!==null)&&(Qd=Wi()),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,rd(a,d)));break;case 22:d&512&&(nn||u===null||fi(u,u.return)),y=a.memoizedState!==null;var L=u!==null&&u.memoizedState!==null,G=Rs,j=nn;if(Rs=G||y,nn=j||L,ii(r,a),nn=j,Rs=G,di(a),r=a.stateNode,r._current=a,r._visibility&=-3,r._visibility|=r._pendingVisibility&2,d&8192&&(r._visibility=y?r._visibility&-2:r._visibility|1,y&&(r=Rs||nn,u===null||L||r||Rr(a)),zn&&(a.memoizedProps===null||a.memoizedProps.mode!=="manual"))){t:if(u=null,zn)for(r=a;;){if(r.tag===5||Ri&&r.tag===26||Bn&&r.tag===27){if(u===null){L=u=r;try{M=L.stateNode,y?Sb(M):bb(L.stateNode,L.memoizedProps)}catch(Rt){He(L,L.return,Rt)}}}else if(r.tag===6){if(u===null){L=r;try{var ft=L.stateNode;y?Mb(ft):Eb(ft,L.memoizedProps)}catch(Rt){He(L,L.return,Rt)}}}else if((r.tag!==22&&r.tag!==23||r.memoizedState===null||r===a)&&r.child!==null){r.child.return=r,r=r.child;continue}if(r===a)break t;for(;r.sibling===null;){if(r.return===null||r.return===a)break t;u===r&&(u=null),r=r.return}u===r&&(u=null),r.sibling.return=r.return,r=r.sibling}}d&4&&(d=a.updateQueue,d!==null&&(u=d.retryQueue,u!==null&&(d.retryQueue=null,rd(a,u))));break;case 19:ii(r,a),di(a),d&4&&(d=a.updateQueue,d!==null&&(a.updateQueue=null,rd(a,d)));break;case 21:break;default:ii(r,a),di(a)}}function di(a){var r=a.flags;if(r&2){try{if(zn&&(!Bn||a.tag!==27)){t:{for(var u=a.return;u!==null;){if(xv(u)){var d=u;break t}u=u.return}throw Error(i(160))}switch(d.tag){case 27:if(Bn){var y=d.stateNode,M=id(a);Nc(a,M,y);break}case 5:var L=d.stateNode;d.flags&32&&(f0(L),d.flags&=-33);var G=id(a);Nc(a,G,L);break;case 3:case 4:var j=d.stateNode.containerInfo,ft=id(a);sd(a,ft,j);break;default:throw Error(i(161))}}}catch(Rt){He(a,a.return,Rt)}a.flags&=-3}r&4096&&(a.flags&=-4097)}function Av(a){if(a.subtreeFlags&1024)for(a=a.child;a!==null;){var r=a;Av(r),r.tag===5&&r.flags&1024&&ib(r.stateNode),a=a.sibling}}function bs(a,r){if(r.subtreeFlags&8772)for(r=r.child;r!==null;)Mv(a,r.alternate,r),r=r.sibling}function Rr(a){for(a=a.child;a!==null;){var r=a;switch(r.tag){case 0:case 11:case 14:case 15:Ks(4,r,r.return),Rr(r);break;case 1:fi(r,r.return);var u=r.stateNode;typeof u.componentWillUnmount=="function"&&vv(r,r.return,u),Rr(r);break;case 26:case 27:case 5:fi(r,r.return),Rr(r);break;case 22:fi(r,r.return),r.memoizedState===null&&Rr(r);break;default:Rr(r)}a=a.sibling}}function Js(a,r,u){for(u=u&&(r.subtreeFlags&8772)!==0,r=r.child;r!==null;){var d=r.alternate,y=a,M=r,L=M.flags;switch(M.tag){case 0:case 11:case 15:Js(y,M,u),nl(4,M);break;case 1:if(Js(y,M,u),d=M,y=d.stateNode,typeof y.componentDidMount=="function")try{y.componentDidMount()}catch(ft){He(d,d.return,ft)}if(d=M,y=d.updateQueue,y!==null){var G=d.stateNode;try{var j=y.shared.hiddenCallbacks;if(j!==null)for(y.shared.hiddenCallbacks=null,y=0;y<j.length;y++)H(j[y],G)}catch(ft){He(d,d.return,ft)}}u&&L&64&&gv(M),Ua(M,M.return);break;case 26:case 27:case 5:Js(y,M,u),u&&d===null&&L&4&&_v(M),Ua(M,M.return);break;case 12:Js(y,M,u);break;case 13:Js(y,M,u),u&&L&4&&Ev(y,M);break;case 22:M.memoizedState===null&&Js(y,M,u),Ua(M,M.return);break;default:Js(y,M,u)}r=r.sibling}}function od(a,r){var u=null;a!==null&&a.memoizedState!==null&&a.memoizedState.cachePool!==null&&(u=a.memoizedState.cachePool.pool),a=null,r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(a=r.memoizedState.cachePool.pool),a!==u&&(a!=null&&a.refCount++,u!=null&&tl(u))}function ld(a,r){a=null,r.alternate!==null&&(a=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==a&&(r.refCount++,a!=null&&tl(a))}function Qs(a,r,u,d){if(r.subtreeFlags&10256)for(r=r.child;r!==null;)wv(a,r,u,d),r=r.sibling}function wv(a,r,u,d){var y=r.flags;switch(r.tag){case 0:case 11:case 15:Qs(a,r,u,d),y&2048&&nl(9,r);break;case 3:Qs(a,r,u,d),y&2048&&(a=null,r.alternate!==null&&(a=r.alternate.memoizedState.cache),r=r.memoizedState.cache,r!==a&&(r.refCount++,a!=null&&tl(a)));break;case 12:if(y&2048){Qs(a,r,u,d),a=r.stateNode;try{var M=r.memoizedProps,L=M.id,G=M.onPostCommit;typeof G=="function"&&G(L,r.alternate===null?"mount":"update",a.passiveEffectDuration,-0)}catch(j){He(r,r.return,j)}}else Qs(a,r,u,d);break;case 23:break;case 22:M=r.stateNode,r.memoizedState!==null?M._visibility&4?Qs(a,r,u,d):il(a,r):M._visibility&4?Qs(a,r,u,d):(M._visibility|=4,Dr(a,r,u,d,(r.subtreeFlags&10256)!==0)),y&2048&&od(r.alternate,r);break;case 24:Qs(a,r,u,d),y&2048&&ld(r.alternate,r);break;default:Qs(a,r,u,d)}}function Dr(a,r,u,d,y){for(y=y&&(r.subtreeFlags&10256)!==0,r=r.child;r!==null;){var M=a,L=r,G=u,j=d,ft=L.flags;switch(L.tag){case 0:case 11:case 15:Dr(M,L,G,j,y),nl(8,L);break;case 23:break;case 22:var Rt=L.stateNode;L.memoizedState!==null?Rt._visibility&4?Dr(M,L,G,j,y):il(M,L):(Rt._visibility|=4,Dr(M,L,G,j,y)),y&&ft&2048&&od(L.alternate,L);break;case 24:Dr(M,L,G,j,y),y&&ft&2048&&ld(L.alternate,L);break;default:Dr(M,L,G,j,y)}r=r.sibling}}function il(a,r){if(r.subtreeFlags&10256)for(r=r.child;r!==null;){var u=a,d=r,y=d.flags;switch(d.tag){case 22:il(u,d),y&2048&&od(d.alternate,d);break;case 24:il(u,d),y&2048&&ld(d.alternate,d);break;default:il(u,d)}r=r.sibling}}function Na(a){if(a.subtreeFlags&Kr)for(a=a.child;a!==null;)Cv(a),a=a.sibling}function Cv(a){switch(a.tag){case 26:Na(a),a.flags&Kr&&(a.memoizedState!==null?Jb(qi,a.memoizedState,a.memoizedProps):h0(a.type,a.memoizedProps));break;case 5:Na(a),a.flags&Kr&&h0(a.type,a.memoizedProps);break;case 3:case 4:if(Ri){var r=qi;qi=Pd(a.stateNode.containerInfo),Na(a),qi=r}else Na(a);break;case 22:a.memoizedState===null&&(r=a.alternate,r!==null&&r.memoizedState!==null?(r=Kr,Kr=16777216,Na(a),Kr=r):Na(a));break;default:Na(a)}}function Rv(a){var r=a.alternate;if(r!==null&&(a=r.child,a!==null)){r.child=null;do r=a.sibling,a.sibling=null,a=r;while(a!==null)}}function sl(a){var r=a.deletions;if((a.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];Mn=d,Uv(d,a)}Rv(a)}if(a.subtreeFlags&10256)for(a=a.child;a!==null;)Dv(a),a=a.sibling}function Dv(a){switch(a.tag){case 0:case 11:case 15:sl(a),a.flags&2048&&Ks(9,a,a.return);break;case 3:sl(a);break;case 12:sl(a);break;case 22:var r=a.stateNode;a.memoizedState!==null&&r._visibility&4&&(a.return===null||a.return.tag!==13)?(r._visibility&=-5,Lc(a)):sl(a);break;default:sl(a)}}function Lc(a){var r=a.deletions;if((a.flags&16)!==0){if(r!==null)for(var u=0;u<r.length;u++){var d=r[u];Mn=d,Uv(d,a)}Rv(a)}for(a=a.child;a!==null;){switch(r=a,r.tag){case 0:case 11:case 15:Ks(8,r,r.return),Lc(r);break;case 22:u=r.stateNode,u._visibility&4&&(u._visibility&=-5,Lc(r));break;default:Lc(r)}a=a.sibling}}function Uv(a,r){for(;Mn!==null;){var u=Mn;switch(u.tag){case 0:case 11:case 15:Ks(8,u,r);break;case 23:case 22:if(u.memoizedState!==null&&u.memoizedState.cachePool!==null){var d=u.memoizedState.cachePool.pool;d!=null&&d.refCount++}break;case 24:tl(u.memoizedState.cache)}if(d=u.child,d!==null)d.return=u,Mn=d;else t:for(u=a;Mn!==null;){d=Mn;var y=d.sibling,M=d.return;if(bv(d),d===u){Mn=null;break t}if(y!==null){y.return=M,Mn=y;break t}Mn=M}}}function cd(a){var r=c0(a);if(r!=null){if(typeof r.memoizedProps["data-testname"]!="string")throw Error(i(364));return r}if(a=rb(a),a===null)throw Error(i(362));return a.stateNode.current}function ud(a,r){var u=a.tag;switch(r.$$typeof){case Qc:if(a.type===r.value)return!0;break;case $c:t:{for(r=r.value,a=[a,0],u=0;u<a.length;){var d=a[u++],y=d.tag,M=a[u++],L=r[M];if(y!==5&&y!==26&&y!==27||!ol(d)){for(;L!=null&&ud(d,L);)M++,L=r[M];if(M===r.length){r=!0;break t}else for(d=d.child;d!==null;)a.push(d,M),d=d.sibling}}r=!1}return r;case tu:if((u===5||u===26||u===27)&&cb(a.stateNode,r.value))return!0;break;case nu:if((u===5||u===6||u===26||u===27)&&(a=lb(a),a!==null&&0<=a.indexOf(r.value)))return!0;break;case eu:if((u===5||u===26||u===27)&&(a=a.memoizedProps["data-testname"],typeof a=="string"&&a.toLowerCase()===r.value.toLowerCase()))return!0;break;default:throw Error(i(365))}return!1}function hd(a){switch(a.$$typeof){case Qc:return"<"+(l(a.value)||"Unknown")+">";case $c:return":has("+(hd(a)||"")+")";case tu:return'[role="'+a.value+'"]';case nu:return'"'+a.value+'"';case eu:return'[data-testname="'+a.value+'"]';default:throw Error(i(365))}}function Nv(a,r){var u=[];a=[a,0];for(var d=0;d<a.length;){var y=a[d++],M=y.tag,L=a[d++],G=r[L];if(M!==5&&M!==26&&M!==27||!ol(y)){for(;G!=null&&ud(y,G);)L++,G=r[L];if(L===r.length)u.push(y);else for(y=y.child;y!==null;)a.push(y,L),y=y.sibling}}return u}function fd(a,r){if(!rl)throw Error(i(363));a=cd(a),a=Nv(a,r),r=[],a=Array.from(a);for(var u=0;u<a.length;){var d=a[u++],y=d.tag;if(y===5||y===26||y===27)ol(d)||r.push(d.stateNode);else for(d=d.child;d!==null;)a.push(d),d=d.sibling}return r}function pi(){if((ke&2)!==0&&De!==0)return De&-De;if(de.T!==null){var a=kr;return a!==0?a:pt()}return JM()}function Lv(){Pi===0&&(Pi=(De&536870912)===0||Pe?z():536870912);var a=Li.current;return a!==null&&(a.flags|=32),Pi}function jn(a,r,u){(a===Ze&&je===2||a.cancelPendingCommit!==null)&&(Ur(a,0),Es(a,De,Pi,!1)),F(a,u),((ke&2)===0||a!==Ze)&&(a===Ze&&((ke&2)===0&&(Wa|=u),sn===4&&Es(a,De,Pi,!1)),_t(a))}function Pv(a,r,u){if((ke&6)!==0)throw Error(i(327));var d=!u&&(r&60)===0&&(r&a.expiredLanes)===0||D(a,r),y=d?wM(a,r):gd(a,r,!0),M=d;do{if(y===0){Jr&&!d&&Es(a,r,0,!1);break}else if(y===6)Es(a,r,0,!Ds);else{if(u=a.current.alternate,M&&!TM(u)){y=gd(a,r,!1),M=!1;continue}if(y===2){if(M=r,a.errorRecoveryDisabledLanes&M)var L=0;else L=a.pendingLanes&-536870913,L=L!==0?L:L&536870912?536870912:0;if(L!==0){r=L;t:{var G=a;y=ml;var j=Ci&&G.current.memoizedState.isDehydrated;if(j&&(Ur(G,L).flags|=256),L=gd(G,L,!1),L!==2){if(jd&&!j){G.errorRecoveryDisabledLanes|=M,Wa|=M,y=4;break t}M=rs,rs=y,M!==null&&dd(M)}y=L}if(M=!1,y!==2)continue}}if(y===1){Ur(a,0),Es(a,r,0,!0);break}t:{switch(d=a,y){case 0:case 1:throw Error(i(345));case 4:if((r&4194176)===r){Es(d,r,Pi,!Ds);break t}break;case 2:rs=null;break;case 3:case 5:break;default:throw Error(i(329))}if(d.finishedWork=u,d.finishedLanes=r,(r&62914560)===r&&(M=Qd+300-Wi(),10<M)){if(Es(d,r,Pi,!Ds),N(d,0)!==0)break t;d.timeoutHandle=ZM(Iv.bind(null,d,u,rs,iu,Jd,r,Pi,Wa,Qr,Ds,2,-0,0),M);break t}Iv(d,u,rs,iu,Jd,r,Pi,Wa,Qr,Ds,0,-0,0)}}break}while(!0);_t(a)}function dd(a){rs===null?rs=a:rs.push.apply(rs,a)}function Iv(a,r,u,d,y,M,L,G,j,ft,Rt,Vt,kt){var ve=r.subtreeFlags;if((ve&8192||(ve&16785408)===16785408)&&(eb(),Cv(r),r=nb(),r!==null)){a.cancelPendingCommit=r(Wv.bind(null,a,u,d,y,L,G,j,1,Vt,kt)),Es(a,M,L,!ft);return}Wv(a,u,d,y,L,G,j,Rt,Vt,kt)}function TM(a){for(var r=a;;){var u=r.tag;if((u===0||u===11||u===15)&&r.flags&16384&&(u=r.updateQueue,u!==null&&(u=u.stores,u!==null)))for(var d=0;d<u.length;d++){var y=u[d],M=y.getSnapshot;y=y.value;try{if(!_i(M(),y))return!1}catch{return!1}}if(u=r.child,r.subtreeFlags&16384&&u!==null)u.return=r,r=u;else{if(r===a)break;for(;r.sibling===null;){if(r.return===null||r.return===a)return!0;r=r.return}r.sibling.return=r.return,r=r.sibling}}return!0}function Es(a,r,u,d){r&=~Kd,r&=~Wa,a.suspendedLanes|=r,a.pingedLanes&=~r,d&&(a.warmLanes|=r),d=a.expirationTimes;for(var y=r;0<y;){var M=31-gi(y),L=1<<M;d[M]=-1,y&=~L}u!==0&&W(a,u,r)}function Ov(){return(ke&6)===0?(Bt(0),!1):!0}function pd(){if(we!==null){if(je===0)var a=we.return;else a=we,Cs=Ga=null,Ko(a),qr=null,fl=0,a=we;for(;a!==null;)mv(a.alternate,a),a=a.return;we=null}}function Ur(a,r){a.finishedWork=null,a.finishedLanes=0;var u=a.timeoutHandle;u!==Ud&&(a.timeoutHandle=Ud,jM(u)),u=a.cancelPendingCommit,u!==null&&(a.cancelPendingCommit=null,u()),pd(),Ze=a,we=u=$s(a.current,null),De=r,je=0,xi=null,Ds=!1,Jr=D(a,r),jd=!1,Qr=Pi=Kd=Wa=oa=sn=0,rs=ml=null,Jd=!1,(r&8)!==0&&(r|=r&32);var d=a.entangledLanes;if(d!==0)for(a=a.entanglements,d&=r;0<d;){var y=31-gi(d),M=1<<y;r|=a[y],d&=~M}return Us=r,O(),u}function zv(a,r){Ee=null,de.H=as,r===hl?(r=Ft(),je=3):r===Wd?(r=Ft(),je=4):je=r===P0?8:r!==null&&typeof r=="object"&&typeof r.then=="function"?6:1,xi=r,we===null&&(sn=1,wc(a,ct(r,a.current)))}function Bv(){var a=Li.current;return a===null?!0:(De&4194176)===De?ss===null:(De&62914560)===De||(De&536870912)!==0?a===ss:!1}function Fv(){var a=de.H;return de.H=as,a===null?as:a}function Hv(){var a=de.A;return de.A=pE,a}function md(){sn=4,Ds||(De&4194176)!==De&&Li.current!==null||(Jr=!0),(oa&134217727)===0&&(Wa&134217727)===0||Ze===null||Es(Ze,De,Pi,!1)}function gd(a,r,u){var d=ke;ke|=2;var y=Fv(),M=Hv();(Ze!==a||De!==r)&&(iu=null,Ur(a,r)),r=!1;var L=sn;t:do try{if(je!==0&&we!==null){var G=we,j=xi;switch(je){case 8:pd(),L=6;break t;case 3:case 2:case 6:Li.current===null&&(r=!0);var ft=je;if(je=0,xi=null,Nr(a,G,j,ft),u&&Jr){L=0;break t}break;default:ft=je,je=0,xi=null,Nr(a,G,j,ft)}}AM(),L=sn;break}catch(Rt){zv(a,Rt)}while(!0);return r&&a.shellSuspendCounter++,Cs=Ga=null,ke=d,de.H=y,de.A=M,we===null&&(Ze=null,De=0,O()),L}function AM(){for(;we!==null;)Vv(we)}function wM(a,r){var u=ke;ke|=2;var d=Fv(),y=Hv();Ze!==a||De!==r?(iu=null,gl=Wi()+500,Ur(a,r)):Jr=D(a,r);t:do try{if(je!==0&&we!==null){r=we;var M=xi;e:switch(je){case 1:je=0,xi=null,Nr(a,r,M,1);break;case 2:if(zt(M)){je=0,xi=null,Gv(r);break}r=function(){je===2&&Ze===a&&(je=7),_t(a)},M.then(r,r);break t;case 3:je=7;break t;case 4:je=5;break t;case 7:zt(M)?(je=0,xi=null,Gv(r)):(je=0,xi=null,Nr(a,r,M,7));break;case 5:var L=null;switch(we.tag){case 26:L=we.memoizedState;case 5:case 27:var G=we,j=G.type,ft=G.pendingProps;if(L?w0(L):u0(j,ft)){je=0,xi=null;var Rt=G.sibling;if(Rt!==null)we=Rt;else{var Vt=G.return;Vt!==null?(we=Vt,Pc(Vt)):we=null}break e}}je=0,xi=null,Nr(a,r,M,5);break;case 6:je=0,xi=null,Nr(a,r,M,6);break;case 8:pd(),sn=6;break t;default:throw Error(i(462))}}CM();break}catch(kt){zv(a,kt)}while(!0);return Cs=Ga=null,de.H=d,de.A=y,ke=u,we!==null?0:(Ze=null,De=0,O(),sn)}function CM(){for(;we!==null&&!iE();)Vv(we)}function Vv(a){var r=lv(a.alternate,a,Us);a.memoizedProps=a.pendingProps,r===null?Pc(a):we=r}function Gv(a){var r=a,u=r.alternate;switch(r.tag){case 15:case 0:r=nv(u,r,r.pendingProps,r.type,void 0,De);break;case 11:r=nv(u,r,r.pendingProps,r.type.render,r.ref,De);break;case 5:Ko(r);default:mv(u,r),r=we=Zv(r,Us),r=lv(u,r,Us)}a.memoizedProps=a.pendingProps,r===null?Pc(a):we=r}function Nr(a,r,u,d){Cs=Ga=null,Ko(r),qr=null,fl=0;var y=r.return;try{if(yM(a,y,r,u,De)){sn=1,wc(a,ct(u,a.current)),we=null;return}}catch(M){if(y!==null)throw we=y,M;sn=1,wc(a,ct(u,a.current)),we=null;return}r.flags&32768?(Pe||d===1?a=!0:Jr||(De&536870912)!==0?a=!1:(Ds=a=!0,(d===2||d===3||d===6)&&(d=Li.current,d!==null&&d.tag===13&&(d.flags|=16384))),kv(r,a)):Pc(r)}function Pc(a){var r=a;do{if((r.flags&32768)!==0){kv(r,Ds);return}a=r.return;var u=SM(r.alternate,r,Us);if(u!==null){we=u;return}if(r=r.sibling,r!==null){we=r;return}we=r=a}while(r!==null);sn===0&&(sn=5)}function kv(a,r){do{var u=MM(a.alternate,a);if(u!==null){u.flags&=32767,we=u;return}if(u=a.return,u!==null&&(u.flags|=32768,u.subtreeFlags=0,u.deletions=null),!r&&(a=a.sibling,a!==null)){we=a;return}we=a=u}while(a!==null);sn=6,we=null}function Wv(a,r,u,d,y,M,L,G,j,ft){var Rt=de.T,Vt=Ia();try{si(2),de.T=null,RM(a,r,u,d,Vt,y,M,L,G,j,ft)}finally{de.T=Rt,si(Vt)}}function RM(a,r,u,d,y,M,L,G){do La();while(Xa!==null);if((ke&6)!==0)throw Error(i(327));var j=a.finishedWork;if(d=a.finishedLanes,j===null)return null;if(a.finishedWork=null,a.finishedLanes=0,j===a.current)throw Error(i(177));a.callbackNode=null,a.callbackPriority=0,a.cancelPendingCommit=null;var ft=j.lanes|j.childLanes;if(ft|=Fd,$(a,d,ft,M,L,G),a===Ze&&(we=Ze=null,De=0),(j.subtreeFlags&10256)===0&&(j.flags&10256)===0||su||(su=!0,$d=ft,tp=u,LM(zd,function(){return La(),null})),u=(j.flags&15990)!==0,(j.subtreeFlags&15990)!==0||u?(u=de.T,de.T=null,M=Ia(),si(2),L=ke,ke|=4,bM(a,j),Tv(j,a),qM(a.containerInfo),a.current=j,Mv(a,j.alternate,j),sE(),ke=L,si(M),de.T=u):a.current=j,su?(su=!1,Xa=a,vl=d):Xv(a,ft),ft=a.pendingLanes,ft===0&&(la=null),k(j.stateNode),_t(a),r!==null)for(y=a.onRecoverableError,j=0;j<r.length;j++)ft=r[j],y(ft.value,{componentStack:ft.stack});return(vl&3)!==0&&La(),ft=a.pendingLanes,(d&4194218)!==0&&(ft&42)!==0?a===ep?_l++:(_l=0,ep=a):_l=0,Bt(0),null}function Xv(a,r){(a.pooledCacheLanes&=r)===0&&(r=a.pooledCache,r!=null&&(a.pooledCache=null,tl(r)))}function La(){if(Xa!==null){var a=Xa,r=$d;$d=0;var u=rt(vl),d=32>u?32:u;u=de.T;var y=Ia();try{if(si(d),de.T=null,Xa===null)var M=!1;else{d=tp,tp=null;var L=Xa,G=vl;if(Xa=null,vl=0,(ke&6)!==0)throw Error(i(331));var j=ke;if(ke|=4,Dv(L.current),wv(L,L.current,G,d),ke=j,Bt(0,!1),vi&&typeof vi.onPostCommitFiberRoot=="function")try{vi.onPostCommitFiberRoot(ll,L)}catch{}M=!0}return M}finally{si(y),de.T=u,Xv(a,r)}}return!1}function qv(a,r,u){r=ct(u,r),r=Vf(a.stateNode,r,2),a=Pt(a,r,2),a!==null&&(F(a,2),_t(a))}function He(a,r,u){if(a.tag===3)qv(a,a,u);else for(;r!==null;){if(r.tag===3){qv(r,a,u);break}else if(r.tag===1){var d=r.stateNode;if(typeof r.type.getDerivedStateFromError=="function"||typeof d.componentDidCatch=="function"&&(la===null||!la.has(d))){a=ct(u,a),u=jg(2),d=Pt(r,u,2),d!==null&&(Kg(u,d,r,a),F(d,2),_t(d));break}}r=r.return}}function vd(a,r,u){var d=a.pingCache;if(d===null){d=a.pingCache=new mE;var y=new Set;d.set(r,y)}else y=d.get(r),y===void 0&&(y=new Set,d.set(r,y));y.has(u)||(jd=!0,y.add(u),a=DM.bind(null,a,r,u),r.then(a,a))}function DM(a,r,u){var d=a.pingCache;d!==null&&d.delete(r),a.pingedLanes|=a.suspendedLanes&u,a.warmLanes&=~u,Ze===a&&(De&u)===u&&(sn===4||sn===3&&(De&62914560)===De&&300>Wi()-Qd?(ke&2)===0&&Ur(a,0):Kd|=u,Qr===De&&(Qr=0)),_t(a)}function Yv(a,r){r===0&&(r=C()),a=At(a,r),a!==null&&(F(a,r),_t(a))}function UM(a){var r=a.memoizedState,u=0;r!==null&&(u=r.retryLane),Yv(a,u)}function NM(a,r){var u=0;switch(a.tag){case 13:var d=a.stateNode,y=a.memoizedState;y!==null&&(u=y.retryLane);break;case 19:d=a.stateNode;break;case 22:d=a.stateNode._retryCache;break;default:throw Error(i(314))}d!==null&&d.delete(r),Yv(a,u)}function LM(a,r){return Vc(a,r)}function PM(a,r,u,d){this.tag=a,this.key=u,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=r,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=d,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _d(a){return a=a.prototype,!(!a||!a.isReactComponent)}function $s(a,r){var u=a.alternate;return u===null?(u=e(a.tag,r,a.key,a.mode),u.elementType=a.elementType,u.type=a.type,u.stateNode=a.stateNode,u.alternate=a,a.alternate=u):(u.pendingProps=r,u.type=a.type,u.flags=0,u.subtreeFlags=0,u.deletions=null),u.flags=a.flags&31457280,u.childLanes=a.childLanes,u.lanes=a.lanes,u.child=a.child,u.memoizedProps=a.memoizedProps,u.memoizedState=a.memoizedState,u.updateQueue=a.updateQueue,r=a.dependencies,u.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext},u.sibling=a.sibling,u.index=a.index,u.ref=a.ref,u.refCleanup=a.refCleanup,u}function Zv(a,r){a.flags&=31457282;var u=a.alternate;return u===null?(a.childLanes=0,a.lanes=r,a.child=null,a.subtreeFlags=0,a.memoizedProps=null,a.memoizedState=null,a.updateQueue=null,a.dependencies=null,a.stateNode=null):(a.childLanes=u.childLanes,a.lanes=u.lanes,a.child=u.child,a.subtreeFlags=0,a.deletions=null,a.memoizedProps=u.memoizedProps,a.memoizedState=u.memoizedState,a.updateQueue=u.updateQueue,a.type=u.type,r=u.dependencies,a.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext}),a}function Ic(a,r,u,d,y,M){var L=0;if(d=a,typeof a=="function")_d(a)&&(L=1);else if(typeof a=="string")L=Ri&&Bn?S0(a,u,Rn.current)?26:R0(a)?27:5:Ri?S0(a,u,Rn.current)?26:5:Bn&&R0(a)?27:5;else t:switch(a){case Pr:return Pa(u.children,y,M,r);case e0:L=8,y|=24;break;case bd:return a=e(12,u,r,y|2),a.elementType=bd,a.lanes=M,a;case Td:return a=e(13,u,r,y),a.elementType=Td,a.lanes=M,a;case Ad:return a=e(19,u,r,y),a.elementType=Ad,a.lanes=M,a;case i0:return jv(u,y,M,r);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case BM:case ta:L=10;break t;case n0:L=9;break t;case Ed:L=11;break t;case wd:L=14;break t;case ea:L=16,d=null;break t}L=29,u=Error(i(130,a===null?"null":typeof a,"")),d=null}return r=e(L,u,r,y),r.elementType=a,r.type=d,r.lanes=M,r}function Pa(a,r,u,d){return a=e(7,a,d,r),a.lanes=u,a}function jv(a,r,u,d){a=e(22,a,d,r),a.elementType=i0,a.lanes=u;var y={_visibility:1,_pendingVisibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null,_current:null,detach:function(){var M=y._current;if(M===null)throw Error(i(456));if((y._pendingVisibility&2)===0){var L=At(M,2);L!==null&&(y._pendingVisibility|=2,jn(L,M,2))}},attach:function(){var M=y._current;if(M===null)throw Error(i(456));if((y._pendingVisibility&2)!==0){var L=At(M,2);L!==null&&(y._pendingVisibility&=-3,jn(L,M,2))}}};return a.stateNode=y,a}function yd(a,r,u){return a=e(6,a,null,r),a.lanes=u,a}function xd(a,r,u){return r=e(4,a.children!==null?a.children:[],a.key,r),r.lanes=u,r.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},r}function IM(a,r,u,d,y,M,L,G){this.tag=1,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Ud,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=w(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.finishedLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=w(0),this.hiddenUpdates=w(null),this.identifierPrefix=d,this.onUncaughtError=y,this.onCaughtError=M,this.onRecoverableError=L,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=G,this.incompleteTransitions=new Map}function Kv(a,r,u,d,y,M,L,G,j,ft,Rt,Vt){return a=new IM(a,r,u,L,G,j,ft,Vt),r=1,M===!0&&(r|=24),M=e(3,null,null,r),a.current=M,M.stateNode=a,r=Qf(),r.refCount++,a.pooledCache=r,r.refCount++,M.memoizedState={element:d,isDehydrated:u,cache:r},Xt(M),a}function Jv(a){return a?(a=zr,a):zr}function Qv(a){var r=a._reactInternals;if(r===void 0)throw typeof a.render=="function"?Error(i(188)):(a=Object.keys(a).join(","),Error(i(268,a)));return a=v(r),a=a!==null?x(a):null,a===null?null:al(a.stateNode)}function $v(a,r,u,d,y,M){y=Jv(y),d.context===null?d.context=y:d.pendingContext=y,d=mt(r),d.payload={element:u},M=M===void 0?null:M,M!==null&&(d.callback=M),u=Pt(a,d,r),u!==null&&(jn(u,a,r),$t(u,a,r))}function t0(a,r){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var u=a.retryLane;a.retryLane=u!==0&&u<r?u:r}}function Sd(a,r){t0(a,r),(a=a.alternate)&&t0(a,r)}var Ae={},OM=Pm(),mi=WS(),Md=Object.assign,zM=Symbol.for("react.element"),Oc=Symbol.for("react.transitional.element"),Lr=Symbol.for("react.portal"),Pr=Symbol.for("react.fragment"),e0=Symbol.for("react.strict_mode"),bd=Symbol.for("react.profiler"),BM=Symbol.for("react.provider"),n0=Symbol.for("react.consumer"),ta=Symbol.for("react.context"),Ed=Symbol.for("react.forward_ref"),Td=Symbol.for("react.suspense"),Ad=Symbol.for("react.suspense_list"),wd=Symbol.for("react.memo"),ea=Symbol.for("react.lazy"),i0=Symbol.for("react.offscreen"),FM=Symbol.for("react.memo_cache_sentinel"),s0=Symbol.iterator,HM=Symbol.for("react.client.reference"),de=OM.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,Cd,a0,Rd=!1,zc=Array.isArray,VM=t.rendererVersion,GM=t.rendererPackageName,r0=t.extraDevToolsConfig,al=t.getPublicInstance,kM=t.getRootHostContext,WM=t.getChildHostContext,XM=t.prepareForCommit,qM=t.resetAfterCommit,YM=t.createInstance,Dd=t.appendInitialChild,o0=t.finalizeInitialChildren,Bc=t.shouldSetTextContent,l0=t.createTextInstance,ZM=t.scheduleTimeout,jM=t.cancelTimeout,Ud=t.noTimeout,Ts=t.isPrimaryRenderer;t.warnsIfNotActing;var zn=t.supportsMutation,na=t.supportsPersistence,Ci=t.supportsHydration,c0=t.getInstanceFromNode;t.beforeActiveInstanceBlur,t.afterActiveInstanceBlur;var KM=t.preparePortalMount;t.prepareScopeUpdate,t.getInstanceFromScope;var si=t.setCurrentUpdatePriority,Ia=t.getCurrentUpdatePriority,JM=t.resolveUpdatePriority;t.resolveEventType,t.resolveEventTimeStamp;var QM=t.shouldAttemptEagerTransition,$M=t.detachDeletedInstance;t.requestPostPaintCallback;var tb=t.maySuspendCommit,u0=t.preloadInstance,eb=t.startSuspendingCommit,h0=t.suspendInstance,nb=t.waitForCommitToBeReady,Ir=t.NotPendingTransition,Oa=t.HostTransitionContext,ib=t.resetFormInstance;t.bindToConsole;var sb=t.supportsMicrotasks,ab=t.scheduleMicrotask,rl=t.supportsTestSelectors,rb=t.findFiberRoot,ob=t.getBoundingRect,lb=t.getTextContent,ol=t.isHiddenSubtree,cb=t.matchAccessibilityRole,ub=t.setFocusIfFocusable,hb=t.setupIntersectionObserver,fb=t.appendChild,db=t.appendChildToContainer,pb=t.commitTextUpdate,mb=t.commitMount,gb=t.commitUpdate,vb=t.insertBefore,_b=t.insertInContainerBefore,yb=t.removeChild,xb=t.removeChildFromContainer,f0=t.resetTextContent,Sb=t.hideInstance,Mb=t.hideTextInstance,bb=t.unhideInstance,Eb=t.unhideTextInstance,Tb=t.clearContainer,Ab=t.cloneInstance,d0=t.createContainerChildSet,p0=t.appendChildToContainerChildSet,wb=t.finalizeContainerChildren,m0=t.replaceContainerChildren,g0=t.cloneHiddenInstance,v0=t.cloneHiddenTextInstance,Nd=t.isSuspenseInstancePending,Ld=t.isSuspenseInstanceFallback,Cb=t.getSuspenseInstanceFallbackErrorDetails,Rb=t.registerSuspenseInstanceRetry,Db=t.canHydrateFormStateMarker,Ub=t.isFormStateMarkerMatching,_0=t.getNextHydratableSibling,y0=t.getFirstHydratableChild,Nb=t.getFirstHydratableChildWithinContainer,Lb=t.getFirstHydratableChildWithinSuspenseInstance,Pb=t.canHydrateInstance,Ib=t.canHydrateTextInstance,Ob=t.canHydrateSuspenseInstance,zb=t.hydrateInstance,Bb=t.hydrateTextInstance,Fb=t.hydrateSuspenseInstance,Hb=t.getNextHydratableInstanceAfterSuspenseInstance,Vb=t.commitHydratedContainer,Gb=t.commitHydratedSuspenseInstance,kb=t.clearSuspenseBoundary,Wb=t.clearSuspenseBoundaryFromContainer,x0=t.shouldDeleteUnhydratedTailInstances;t.diffHydratedPropsForDevWarnings,t.diffHydratedTextForDevWarnings,t.describeHydratableInstanceForDevWarnings;var Xb=t.validateHydratableInstance,qb=t.validateHydratableTextInstance,Ri=t.supportsResources,S0=t.isHostHoistableType,Pd=t.getHoistableRoot,M0=t.getResource,b0=t.acquireResource,E0=t.releaseResource,Yb=t.hydrateHoistable,T0=t.mountHoistable,A0=t.unmountHoistable,Zb=t.createHoistableInstance,jb=t.prepareToCommitHoistables,Kb=t.mayResourceSuspendCommit,w0=t.preloadResource,Jb=t.suspendResource,Bn=t.supportsSingletons,C0=t.resolveSingletonInstance,Qb=t.clearSingleton,$b=t.acquireSingletonInstance,tE=t.releaseSingletonInstance,R0=t.isHostSingletonType,Id=[],Or=-1,zr={},gi=Math.clz32?Math.clz32:T,eE=Math.log,nE=Math.LN2,Fc=128,Hc=4194304,Vc=mi.unstable_scheduleCallback,Od=mi.unstable_cancelCallback,iE=mi.unstable_shouldYield,sE=mi.unstable_requestPaint,Wi=mi.unstable_now,D0=mi.unstable_ImmediatePriority,aE=mi.unstable_UserBlockingPriority,zd=mi.unstable_NormalPriority,rE=mi.unstable_IdlePriority,oE=mi.log,lE=mi.unstable_setDisableYieldValue,ll=null,vi=null,_i=typeof Object.is=="function"?Object.is:q,U0=new WeakMap,Br=[],Fr=0,Gc=null,kc=0,Di=[],Ui=0,za=null,As=1,ws="",Rn=S(null),cl=S(null),ia=S(null),Wc=S(null),Kn=null,Fn=null,Pe=!1,Xi=null,is=!1,Bd=Error(i(519)),Ni=[],Hr=0,Fd=0,Xc=null,Vr=null,Hd=!1,qc=!1,Vd=!1,Gr=0,ul=null,Gd=0,kr=0,Wr=null,sa=!1,kd=!1,cE=Object.prototype.hasOwnProperty,hl=Error(i(460)),Wd=Error(i(474)),Yc={then:function(){}},Xr=null,qr=null,fl=0,Ba=Tn(!0),N0=Tn(!1),Yr=S(null),Zc=S(0),Li=S(null),ss=null,mn=S(0),aa=0,Ee=null,Ge=null,hn=null,jc=!1,Zr=!1,Fa=!1,Kc=0,dl=0,jr=null,uE=0,Xd=function(){return{lastEffect:null,events:null,stores:null,memoCache:null}},as={readContext:On,use:st,useCallback:qe,useContext:qe,useEffect:qe,useImperativeHandle:qe,useLayoutEffect:qe,useInsertionEffect:qe,useMemo:qe,useReducer:qe,useRef:qe,useState:qe,useDebugValue:qe,useDeferredValue:qe,useTransition:qe,useSyncExternalStore:qe,useId:qe};as.useCacheRefresh=qe,as.useMemoCache=qe,as.useHostTransitionStatus=qe,as.useFormState=qe,as.useActionState=qe,as.useOptimistic=qe;var Ha={readContext:On,use:st,useCallback:function(a,r){return U().memoizedState=[a,r===void 0?null:r],a},useContext:On,useEffect:Ug,useImperativeHandle:function(a,r,u){u=u!=null?u.concat([a]):null,Ec(4194308,4,Pg.bind(null,r,a),u)},useLayoutEffect:function(a,r){return Ec(4194308,4,a,r)},useInsertionEffect:function(a,r){Ec(4,2,a,r)},useMemo:function(a,r){var u=U();r=r===void 0?null:r;var d=a();if(Fa){et(!0);try{a()}finally{et(!1)}}return u.memoizedState=[d,r],d},useReducer:function(a,r,u){var d=U();if(u!==void 0){var y=u(r);if(Fa){et(!0);try{u(r)}finally{et(!1)}}}else y=r;return d.memoizedState=d.baseState=y,a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:y},d.queue=a,a=a.dispatch=_M.bind(null,Ee,a),[d.memoizedState,a]},useRef:function(a){var r=U();return a={current:a},r.memoizedState=a},useState:function(a){a=Fe(a);var r=a.queue,u=kg.bind(null,Ee,r);return r.dispatch=u,[a.memoizedState,u]},useDebugValue:Of,useDeferredValue:function(a,r){var u=U();return zf(u,a,r)},useTransition:function(){var a=Fe(!1);return a=Fg.bind(null,Ee,a.queue,!0,!1),U().memoizedState=a,[!1,a]},useSyncExternalStore:function(a,r,u){var d=Ee,y=U();if(Pe){if(u===void 0)throw Error(i(407));u=u()}else{if(u=r(),Ze===null)throw Error(i(349));(De&60)!==0||ue(d,r,u)}y.memoizedState=u;var M={value:u,getSnapshot:r};return y.queue=M,Ug(be.bind(null,d,M,a),[a]),d.flags|=2048,es(9,ne.bind(null,d,M,u,r),{destroy:void 0},null),u},useId:function(){var a=U(),r=Ze.identifierPrefix;if(Pe){var u=ws,d=As;u=(d&~(1<<32-gi(d)-1)).toString(32)+u,r=":"+r+"R"+u,u=Kc++,0<u&&(r+="H"+u.toString(32)),r+=":"}else u=uE++,r=":"+r+"r"+u.toString(32)+":";return a.memoizedState=r},useCacheRefresh:function(){return U().memoizedState=vM.bind(null,Ee)}};Ha.useMemoCache=Y,Ha.useHostTransitionStatus=Bf,Ha.useFormState=Xe,Ha.useActionState=Xe,Ha.useOptimistic=function(a){var r=U();r.memoizedState=r.baseState=a;var u={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return r.queue=u,r=Ff.bind(null,Ee,!0,u),u.dispatch=r,[a,r]};var ra={readContext:On,use:st,useCallback:Og,useContext:On,useEffect:If,useImperativeHandle:Ig,useInsertionEffect:Ng,useLayoutEffect:Lg,useMemo:zg,useReducer:It,useRef:ns,useState:function(){return It(Mt)},useDebugValue:Of,useDeferredValue:function(a,r){var u=X();return Bg(u,Ge.memoizedState,a,r)},useTransition:function(){var a=It(Mt)[0],r=X().memoizedState;return[typeof a=="boolean"?a:it(a),r]},useSyncExternalStore:le,useId:Vg};ra.useCacheRefresh=Gg,ra.useMemoCache=Y,ra.useHostTransitionStatus=Bf,ra.useFormState=Yn,ra.useActionState=Yn,ra.useOptimistic=function(a,r){var u=X();return Be(u,Ge,a,r)};var Va={readContext:On,use:st,useCallback:Og,useContext:On,useEffect:If,useImperativeHandle:Ig,useInsertionEffect:Ng,useLayoutEffect:Lg,useMemo:zg,useReducer:Wt,useRef:ns,useState:function(){return Wt(Mt)},useDebugValue:Of,useDeferredValue:function(a,r){var u=X();return Ge===null?zf(u,a,r):Bg(u,Ge.memoizedState,a,r)},useTransition:function(){var a=Wt(Mt)[0],r=X().memoizedState;return[typeof a=="boolean"?a:it(a),r]},useSyncExternalStore:le,useId:Vg};Va.useCacheRefresh=Gg,Va.useMemoCache=Y,Va.useHostTransitionStatus=Bf,Va.useFormState=wn,Va.useActionState=wn,Va.useOptimistic=function(a,r){var u=X();return Ge!==null?Be(u,Ge,a,r):(u.baseState=a,[a,u.queue.dispatch])};var qd={isMounted:function(a){return(a=a._reactInternals)?m(a)===a:!1},enqueueSetState:function(a,r,u){a=a._reactInternals;var d=pi(),y=mt(d);y.payload=r,u!=null&&(y.callback=u),r=Pt(a,y,d),r!==null&&(jn(r,a,d),$t(r,a,d))},enqueueReplaceState:function(a,r,u){a=a._reactInternals;var d=pi(),y=mt(d);y.tag=1,y.payload=r,u!=null&&(y.callback=u),r=Pt(a,y,d),r!==null&&(jn(r,a,d),$t(r,a,d))},enqueueForceUpdate:function(a,r){a=a._reactInternals;var u=pi(),d=mt(u);d.tag=2,r!=null&&(d.callback=r),r=Pt(a,d,u),r!==null&&(jn(r,a,u),$t(r,a,u))}},L0=typeof reportError=="function"?reportError:function(a){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var r=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof a=="object"&&a!==null&&typeof a.message=="string"?String(a.message):String(a),error:a});if(!window.dispatchEvent(r))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",a);return}console.error(a)},P0=Error(i(461)),Sn=!1,Yd={dehydrated:null,treeContext:null,retryLane:0},Jc=S(null),Ga=null,Cs=null,hE=typeof AbortController<"u"?AbortController:function(){var a=[],r=this.signal={aborted:!1,addEventListener:function(u,d){a.push(d)}};this.abort=function(){r.aborted=!0,a.forEach(function(u){return u()})}},fE=mi.unstable_scheduleCallback,dE=mi.unstable_NormalPriority,en={$$typeof:ta,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0},I0=de.S;de.S=function(a,r){typeof r=="object"&&r!==null&&typeof r.then=="function"&&lt(a,r),I0!==null&&I0(a,r)};var ka=S(null),Rs=!1,nn=!1,Zd=!1,O0=typeof WeakSet=="function"?WeakSet:Set,Mn=null,z0=!1,fn=null,yi=!1,qi=null,Kr=8192,pE={getCacheForType:function(a){var r=On(en),u=r.data.get(a);return u===void 0&&(u=a(),r.data.set(a,u)),u}},Qc=0,$c=1,tu=2,eu=3,nu=4;if(typeof Symbol=="function"&&Symbol.for){var pl=Symbol.for;Qc=pl("selector.component"),$c=pl("selector.has_pseudo_class"),tu=pl("selector.role"),eu=pl("selector.test_id"),nu=pl("selector.text")}var mE=typeof WeakMap=="function"?WeakMap:Map,ke=0,Ze=null,we=null,De=0,je=0,xi=null,Ds=!1,Jr=!1,jd=!1,Us=0,sn=0,oa=0,Wa=0,Kd=0,Pi=0,Qr=0,ml=null,rs=null,Jd=!1,Qd=0,gl=1/0,iu=null,la=null,su=!1,Xa=null,vl=0,$d=0,tp=null,_l=0,ep=null;return Ae.attemptContinuousHydration=function(a){if(a.tag===13){var r=At(a,67108864);r!==null&&jn(r,a,67108864),Sd(a,67108864)}},Ae.attemptHydrationAtCurrentPriority=function(a){if(a.tag===13){var r=pi(),u=At(a,r);u!==null&&jn(u,a,r),Sd(a,r)}},Ae.attemptSynchronousHydration=function(a){switch(a.tag){case 3:if(a=a.stateNode,a.current.memoizedState.isDehydrated){var r=A(a.pendingLanes);if(r!==0){for(a.pendingLanes|=2,a.entangledLanes|=2;r;){var u=1<<31-gi(r);a.entanglements[1]|=u,r&=~u}_t(a),(ke&6)===0&&(gl=Wi()+500,Bt(0))}}break;case 13:r=At(a,2),r!==null&&jn(r,a,2),Ov(),Sd(a,2)}},Ae.batchedUpdates=function(a,r){return a(r)},Ae.createComponentSelector=function(a){return{$$typeof:Qc,value:a}},Ae.createContainer=function(a,r,u,d,y,M,L,G,j,ft){return Kv(a,r,!1,null,u,d,M,L,G,j,ft,null)},Ae.createHasPseudoClassSelector=function(a){return{$$typeof:$c,value:a}},Ae.createHydrationContainer=function(a,r,u,d,y,M,L,G,j,ft,Rt,Vt,kt){return a=Kv(u,d,!0,a,y,M,G,j,ft,Rt,Vt,kt),a.context=Jv(null),u=a.current,d=pi(),y=mt(d),y.callback=r??null,Pt(u,y,d),a.current.lanes=d,F(a,d),_t(a),a},Ae.createPortal=function(a,r,u){var d=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Lr,key:d==null?null:""+d,children:a,containerInfo:r,implementation:u}},Ae.createRoleSelector=function(a){return{$$typeof:tu,value:a}},Ae.createTestNameSelector=function(a){return{$$typeof:eu,value:a}},Ae.createTextSelector=function(a){return{$$typeof:nu,value:a}},Ae.defaultOnCaughtError=function(a){console.error(a)},Ae.defaultOnRecoverableError=function(a){L0(a)},Ae.defaultOnUncaughtError=function(a){L0(a)},Ae.deferredUpdates=function(a){var r=de.T,u=Ia();try{return si(32),de.T=null,a()}finally{si(u),de.T=r}},Ae.discreteUpdates=function(a,r,u,d,y){var M=de.T,L=Ia();try{return si(2),de.T=null,a(r,u,d,y)}finally{si(L),de.T=M,ke===0&&(gl=Wi()+500)}},Ae.findAllNodes=fd,Ae.findBoundingRects=function(a,r){if(!rl)throw Error(i(363));r=fd(a,r),a=[];for(var u=0;u<r.length;u++)a.push(ob(r[u]));for(r=a.length-1;0<r;r--){u=a[r];for(var d=u.x,y=d+u.width,M=u.y,L=M+u.height,G=r-1;0<=G;G--)if(r!==G){var j=a[G],ft=j.x,Rt=ft+j.width,Vt=j.y,kt=Vt+j.height;if(d>=ft&&M>=Vt&&y<=Rt&&L<=kt){a.splice(r,1);break}else if(d!==ft||u.width!==j.width||kt<M||Vt>L){if(!(M!==Vt||u.height!==j.height||Rt<d||ft>y)){ft>d&&(j.width+=ft-d,j.x=d),Rt<y&&(j.width=y-ft),a.splice(r,1);break}}else{Vt>M&&(j.height+=Vt-M,j.y=M),kt<L&&(j.height=L-Vt),a.splice(r,1);break}}}return a},Ae.findHostInstance=Qv,Ae.findHostInstanceWithNoPortals=function(a){return a=v(a),a=a!==null?b(a):null,a===null?null:al(a.stateNode)},Ae.findHostInstanceWithWarning=function(a){return Qv(a)},Ae.flushPassiveEffects=La,Ae.flushSyncFromReconciler=function(a){var r=ke;ke|=1;var u=de.T,d=Ia();try{if(si(2),de.T=null,a)return a()}finally{si(d),de.T=u,ke=r,(ke&6)===0&&Bt(0)}},Ae.flushSyncWork=Ov,Ae.focusWithin=function(a,r){if(!rl)throw Error(i(363));for(a=cd(a),r=Nv(a,r),r=Array.from(r),a=0;a<r.length;){var u=r[a++],d=u.tag;if(!ol(u)){if((d===5||d===26||d===27)&&ub(u.stateNode))return!0;for(u=u.child;u!==null;)r.push(u),u=u.sibling}}return!1},Ae.getFindAllNodesFailureDescription=function(a,r){if(!rl)throw Error(i(363));var u=0,d=[];a=[cd(a),0];for(var y=0;y<a.length;){var M=a[y++],L=M.tag,G=a[y++],j=r[G];if((L!==5&&L!==26&&L!==27||!ol(M))&&(ud(M,j)&&(d.push(hd(j)),G++,G>u&&(u=G)),G<r.length))for(M=M.child;M!==null;)a.push(M,G),M=M.sibling}if(u<r.length){for(a=[];u<r.length;u++)a.push(hd(r[u]));return`findAllNodes was able to match part of the selector:
  `+(d.join(" > ")+`

No matching component was found for:
  `)+a.join(" > ")}return null},Ae.getPublicRootInstance=function(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 27:case 5:return al(a.child.stateNode);default:return a.child.stateNode}},Ae.injectIntoDevTools=function(){var a={bundleType:0,version:VM,rendererPackageName:GM,currentDispatcherRef:de,findFiberByHostInstance:c0,reconcilerVersion:"19.0.0"};if(r0!==null&&(a.rendererConfig=r0),typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")a=!1;else{var r=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(r.isDisabled||!r.supportsFiber)a=!0;else{try{ll=r.inject(a),vi=r}catch{}a=!!r.checkDCE}}return a},Ae.isAlreadyRendering=function(){return!1},Ae.observeVisibleRects=function(a,r,u,d){if(!rl)throw Error(i(363));a=fd(a,r);var y=hb(a,u,d).disconnect;return{disconnect:function(){y()}}},Ae.shouldError=function(){return null},Ae.shouldSuspend=function(){return!1},Ae.startHostTransition=function(a,r,u,d){if(a.tag!==5)throw Error(i(476));var y=Hg(a).queue;Fg(a,y,r,Ir,u===null?n:function(){var M=Hg(a).next.queue;return Jo(a,M,{},pi()),u(d)})},Ae.updateContainer=function(a,r,u,d){var y=r.current,M=pi();return $v(y,M,a,r,u,d),M},Ae.updateContainerSync=function(a,r,u,d){return r.tag===0&&La(),$v(r.current,2,a,r,u,d),2},Ae},s.exports.default=s.exports,Object.defineProperty(s.exports,"__esModule",{value:!0})}(Qp)),Qp.exports}var wy;function Z3(){return wy||(wy=1,Jp.exports=Y3()),Jp.exports}var j3=Z3();const K3=Wy(j3);var Cy=WS();function Tg(s,t,e){if(!s)return;if(e(s)===!0)return s;let n=t?s.return:s.child;for(;n;){const i=Tg(n,t,e);if(i)return i;n=t?null:n.sibling}}function XS(s){try{return Object.defineProperties(s,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return s}}const Ag=XS(Lt.createContext(null));class qS extends Lt.Component{render(){return Lt.createElement(Ag.Provider,{value:this._reactInternals},this.props.children)}}function YS(){const s=Lt.useContext(Ag);if(s===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const t=Lt.useId();return Lt.useMemo(()=>{for(const e of[s,s?.alternate]){if(!e)continue;const n=Tg(e,!1,i=>{let o=i.memoizedState;for(;o;){if(o.memoizedState===t)return!0;o=o.next}});if(n)return n}},[s,t])}const J3=Symbol.for("react.context"),Q3=s=>s!==null&&typeof s=="object"&&"$$typeof"in s&&s.$$typeof===J3;function $3(){const s=YS(),[t]=Lt.useState(()=>new Map);t.clear();let e=s;for(;e;){const n=e.type;Q3(n)&&n!==Ag&&!t.has(n)&&t.set(n,Lt.use(XS(n))),e=e.return}return t}function tD(){const s=$3();return Lt.useMemo(()=>Array.from(s.keys()).reduce((t,e)=>n=>Lt.createElement(t,null,Lt.createElement(e.Provider,{...n,value:s.get(e)})),t=>Lt.createElement(qS,{...t})),[s])}function ZS(s){let t=s.root;for(;t.getState().previousRoot;)t=t.getState().previousRoot;return t}const jS=s=>s&&s.isOrthographicCamera,eD=s=>s&&s.hasOwnProperty("current"),nD=s=>s!=null&&(typeof s=="string"||typeof s=="number"||s.isColor),Sc=((s,t)=>typeof window<"u"&&(((s=window.document)==null?void 0:s.createElement)||((t=window.navigator)==null?void 0:t.product)==="ReactNative"))()?Lt.useLayoutEffect:Lt.useEffect;function KS(s){const t=Lt.useRef(s);return Sc(()=>void(t.current=s),[s]),t}function iD(){const s=YS(),t=tD();return Lt.useMemo(()=>({children:e})=>{const i=!!Tg(s,!0,o=>o.type===Lt.StrictMode)?Lt.StrictMode:Lt.Fragment;return pn.jsx(i,{children:pn.jsx(t,{children:e})})},[s,t])}function sD({set:s}){return Sc(()=>(s(new Promise(()=>null)),()=>s(!1)),[s]),null}const aD=(s=>(s=class extends Lt.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}},s.getDerivedStateFromError=()=>({error:!0}),s))();function JS(s){var t;const e=typeof window<"u"?(t=window.devicePixelRatio)!=null?t:2:1;return Array.isArray(s)?Math.min(Math.max(s[0],e),s[1]):s}function yo(s){var t;return(t=s.__r3f)==null?void 0:t.root.getState()}const $e={obj:s=>s===Object(s)&&!$e.arr(s)&&typeof s!="function",fun:s=>typeof s=="function",str:s=>typeof s=="string",num:s=>typeof s=="number",boo:s=>typeof s=="boolean",und:s=>s===void 0,nul:s=>s===null,arr:s=>Array.isArray(s),equ(s,t,{arrays:e="shallow",objects:n="reference",strict:i=!0}={}){if(typeof s!=typeof t||!!s!=!!t)return!1;if($e.str(s)||$e.num(s)||$e.boo(s))return s===t;const o=$e.obj(s);if(o&&n==="reference")return s===t;const l=$e.arr(s);if(l&&e==="reference")return s===t;if((l||o)&&s===t)return!0;let c;for(c in s)if(!(c in t))return!1;if(o&&e==="shallow"&&n==="shallow"){for(c in i?t:s)if(!$e.equ(s[c],t[c],{strict:i,objects:"reference"}))return!1}else for(c in i?t:s)if(s[c]!==t[c])return!1;if($e.und(c)){if(l&&s.length===0&&t.length===0||o&&Object.keys(s).length===0&&Object.keys(t).length===0)return!0;if(s!==t)return!1}return!0}};function rD(s){s.type!=="Scene"&&(s.dispose==null||s.dispose());for(const t in s){const e=s[t];e?.type!=="Scene"&&(e==null||e.dispose==null||e.dispose())}}const QS=["children","key","ref"];function oD(s){const t={};for(const e in s)QS.includes(e)||(t[e]=s[e]);return t}function jh(s,t,e,n){const i=s;let o=i?.__r3f;return o||(o={root:t,type:e,parent:null,children:[],props:oD(n),object:i,eventCount:0,handlers:{},isHidden:!1},i&&(i.__r3f=o)),o}function hc(s,t){let e=s[t];if(!t.includes("-"))return{root:s,key:t,target:e};e=s;for(const i of t.split("-")){var n;t=i,s=e,e=(n=e)==null?void 0:n[t]}return{root:s,key:t,target:e}}const Ry=/-\d+$/;function Kh(s,t){if($e.str(t.props.attach)){if(Ry.test(t.props.attach)){const i=t.props.attach.replace(Ry,""),{root:o,key:l}=hc(s.object,i);Array.isArray(o[l])||(o[l]=[])}const{root:e,key:n}=hc(s.object,t.props.attach);t.previousAttach=e[n],e[n]=t.object}else $e.fun(t.props.attach)&&(t.previousAttach=t.props.attach(s.object,t.object))}function Jh(s,t){if($e.str(t.props.attach)){const{root:e,key:n}=hc(s.object,t.props.attach),i=t.previousAttach;i===void 0?delete e[n]:e[n]=i}else t.previousAttach==null||t.previousAttach(s.object,t.object);delete t.previousAttach}const Cm=[...QS,"args","dispose","attach","object","onUpdate","dispose"],Dy=new Map;function lD(s){let t=Dy.get(s.constructor);try{t||(t=new s.constructor,Dy.set(s.constructor,t))}catch{}return t}function cD(s,t){const e={};for(const n in t)if(!Cm.includes(n)&&!$e.equ(t[n],s.props[n])){e[n]=t[n];for(const i in t)i.startsWith(`${n}-`)&&(e[i]=t[i])}for(const n in s.props){if(Cm.includes(n)||t.hasOwnProperty(n))continue;const{root:i,key:o}=hc(s.object,n);if(i.constructor&&i.constructor.length===0){const l=lD(i);$e.und(l)||(e[o]=l[o])}else e[o]=0}return e}const uD=["map","emissiveMap","sheenColorMap","specularColorMap","envMap"],hD=/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/;function _a(s,t){var e;const n=s.__r3f,i=n&&ZS(n).getState(),o=n?.eventCount;for(const c in t){let h=t[c];if(Cm.includes(c))continue;if(n&&hD.test(c)){typeof h=="function"?n.handlers[c]=h:delete n.handlers[c],n.eventCount=Object.keys(n.handlers).length;continue}if(h===void 0)continue;let{root:f,key:p,target:m}=hc(s,c);if(m instanceof Po&&h instanceof Po)m.mask=h.mask;else if(m instanceof Gt&&nD(h))m.set(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof m.copy=="function"&&h!=null&&h.constructor&&m.constructor===h.constructor)m.copy(h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&Array.isArray(h))typeof m.fromArray=="function"?m.fromArray(h):m.set(...h);else if(m!==null&&typeof m=="object"&&typeof m.set=="function"&&typeof h=="number")typeof m.setScalar=="function"?m.setScalar(h):m.set(h);else{var l;f[p]=h,i&&!i.linear&&uD.includes(p)&&(l=f[p])!=null&&l.isTexture&&f[p].format===Wn&&f[p].type===Fi&&(f[p].colorSpace=kn)}}if(n!=null&&n.parent&&i!=null&&i.internal&&(e=n.object)!=null&&e.isObject3D&&o!==n.eventCount){const c=n.object,h=i.internal.interaction.indexOf(c);h>-1&&i.internal.interaction.splice(h,1),n.eventCount&&c.raycast!==null&&i.internal.interaction.push(c)}return n&&n.props.attach===void 0&&(n.object.isBufferGeometry?n.props.attach="geometry":n.object.isMaterial&&(n.props.attach="material")),n&&Xo(n),s}function Xo(s){var t;if(!s.parent)return;s.props.onUpdate==null||s.props.onUpdate(s.object);const e=(t=s.root)==null||t.getState==null?void 0:t.getState();e&&e.internal.frames===0&&e.invalidate()}function fD(s,t){s.manual||(jS(s)?(s.left=t.width/-2,s.right=t.width/2,s.top=t.height/2,s.bottom=t.height/-2):s.aspect=t.width/t.height,s.updateProjectionMatrix())}const oi=s=>s?.isObject3D;function Ku(s){return(s.eventObject||s.object).uuid+"/"+s.index+s.instanceId}function $S(s,t,e,n){const i=e.get(t);i&&(e.delete(t),e.size===0&&(s.delete(n),i.target.releasePointerCapture(n)))}function dD(s,t){const{internal:e}=s.getState();e.interaction=e.interaction.filter(n=>n!==t),e.initialHits=e.initialHits.filter(n=>n!==t),e.hovered.forEach((n,i)=>{(n.eventObject===t||n.object===t)&&e.hovered.delete(i)}),e.capturedMap.forEach((n,i)=>{$S(e.capturedMap,t,n,i)})}function pD(s){function t(h){const{internal:f}=s.getState(),p=h.offsetX-f.initialClick[0],m=h.offsetY-f.initialClick[1];return Math.round(Math.sqrt(p*p+m*m))}function e(h){return h.filter(f=>["Move","Over","Enter","Out","Leave"].some(p=>{var m;return(m=f.__r3f)==null?void 0:m.handlers["onPointer"+p]}))}function n(h,f){const p=s.getState(),m=new Set,g=[],v=f?f(p.internal.interaction):p.internal.interaction;for(let _=0;_<v.length;_++){const E=yo(v[_]);E&&(E.raycaster.camera=void 0)}p.previousRoot||p.events.compute==null||p.events.compute(h,p);function x(_){const E=yo(_);if(!E||!E.events.enabled||E.raycaster.camera===null)return[];if(E.raycaster.camera===void 0){var T;E.events.compute==null||E.events.compute(h,E,(T=E.previousRoot)==null?void 0:T.getState()),E.raycaster.camera===void 0&&(E.raycaster.camera=null)}return E.raycaster.camera?E.raycaster.intersectObject(_,!0):[]}let b=v.flatMap(x).sort((_,E)=>{const T=yo(_.object),A=yo(E.object);return!T||!A?_.distance-E.distance:A.events.priority-T.events.priority||_.distance-E.distance}).filter(_=>{const E=Ku(_);return m.has(E)?!1:(m.add(E),!0)});p.events.filter&&(b=p.events.filter(b,p));for(const _ of b){let E=_.object;for(;E;){var S;(S=E.__r3f)!=null&&S.eventCount&&g.push({..._,eventObject:E}),E=E.parent}}if("pointerId"in h&&p.internal.capturedMap.has(h.pointerId))for(let _ of p.internal.capturedMap.get(h.pointerId).values())m.has(Ku(_.intersection))||g.push(_.intersection);return g}function i(h,f,p,m){if(h.length){const g={stopped:!1};for(const v of h){let x=yo(v.object);if(x||v.object.traverseAncestors(b=>{const S=yo(b);if(S)return x=S,!1}),x){const{raycaster:b,pointer:S,camera:_,internal:E}=x,T=new I(S.x,S.y,0).unproject(_),A=C=>{var w,F;return(w=(F=E.capturedMap.get(C))==null?void 0:F.has(v.eventObject))!=null?w:!1},N=C=>{const w={intersection:v,target:f.target};E.capturedMap.has(C)?E.capturedMap.get(C).set(v.eventObject,w):E.capturedMap.set(C,new Map([[v.eventObject,w]])),f.target.setPointerCapture(C)},D=C=>{const w=E.capturedMap.get(C);w&&$S(E.capturedMap,v.eventObject,w,C)};let P={};for(let C in f){let w=f[C];typeof w!="function"&&(P[C]=w)}let z={...v,...P,pointer:S,intersections:h,stopped:g.stopped,delta:p,unprojectedPoint:T,ray:b.ray,camera:_,stopPropagation(){const C="pointerId"in f&&E.capturedMap.get(f.pointerId);if((!C||C.has(v.eventObject))&&(z.stopped=g.stopped=!0,E.hovered.size&&Array.from(E.hovered.values()).find(w=>w.eventObject===v.eventObject))){const w=h.slice(0,h.indexOf(v));o([...w,v])}},target:{hasPointerCapture:A,setPointerCapture:N,releasePointerCapture:D},currentTarget:{hasPointerCapture:A,setPointerCapture:N,releasePointerCapture:D},nativeEvent:f};if(m(z),g.stopped===!0)break}}}return h}function o(h){const{internal:f}=s.getState();for(const p of f.hovered.values())if(!h.length||!h.find(m=>m.object===p.object&&m.index===p.index&&m.instanceId===p.instanceId)){const g=p.eventObject.__r3f;if(f.hovered.delete(Ku(p)),g!=null&&g.eventCount){const v=g.handlers,x={...p,intersections:h};v.onPointerOut==null||v.onPointerOut(x),v.onPointerLeave==null||v.onPointerLeave(x)}}}function l(h,f){for(let p=0;p<f.length;p++){const m=f[p].__r3f;m==null||m.handlers.onPointerMissed==null||m.handlers.onPointerMissed(h)}}function c(h){switch(h){case"onPointerLeave":case"onPointerCancel":return()=>o([]);case"onLostPointerCapture":return f=>{const{internal:p}=s.getState();"pointerId"in f&&p.capturedMap.has(f.pointerId)&&requestAnimationFrame(()=>{p.capturedMap.has(f.pointerId)&&(p.capturedMap.delete(f.pointerId),o([]))})}}return function(p){const{onPointerMissed:m,internal:g}=s.getState();g.lastEvent.current=p;const v=h==="onPointerMove",x=h==="onClick"||h==="onContextMenu"||h==="onDoubleClick",S=n(p,v?e:void 0),_=x?t(p):0;h==="onPointerDown"&&(g.initialClick=[p.offsetX,p.offsetY],g.initialHits=S.map(T=>T.eventObject)),x&&!S.length&&_<=2&&(l(p,g.interaction),m&&m(p)),v&&o(S);function E(T){const A=T.eventObject,N=A.__r3f;if(!(N!=null&&N.eventCount))return;const D=N.handlers;if(v){if(D.onPointerOver||D.onPointerEnter||D.onPointerOut||D.onPointerLeave){const P=Ku(T),z=g.hovered.get(P);z?z.stopped&&T.stopPropagation():(g.hovered.set(P,T),D.onPointerOver==null||D.onPointerOver(T),D.onPointerEnter==null||D.onPointerEnter(T))}D.onPointerMove==null||D.onPointerMove(T)}else{const P=D[h];P?(!x||g.initialHits.includes(A))&&(l(p,g.interaction.filter(z=>!g.initialHits.includes(z))),P(T)):x&&g.initialHits.includes(A)&&l(p,g.interaction.filter(z=>!g.initialHits.includes(z)))}}i(S,p,_,E)}}return{handlePointer:c}}const Uy=s=>!!(s!=null&&s.render),tM=Lt.createContext(null),mD=(s,t)=>{const e=X3((c,h)=>{const f=new I,p=new I,m=new I;function g(_=h().camera,E=p,T=h().size){const{width:A,height:N,top:D,left:P}=T,z=A/N;E.isVector3?m.copy(E):m.set(...E);const C=_.getWorldPosition(f).distanceTo(m);if(jS(_))return{width:A/_.zoom,height:N/_.zoom,top:D,left:P,factor:1,distance:C,aspect:z};{const w=_.fov*Math.PI/180,F=2*Math.tan(w/2)*C,$=F*(A/N);return{width:$,height:F,top:D,left:P,factor:A/$,distance:C,aspect:z}}}let v;const x=_=>c(E=>({performance:{...E.performance,current:_}})),b=new ut;return{set:c,get:h,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},scene:null,xr:null,invalidate:(_=1)=>s(h(),_),advance:(_,E)=>t(_,E,h()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new yg,pointer:b,mouse:b,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const _=h();v&&clearTimeout(v),_.performance.current!==_.performance.min&&x(_.performance.min),v=setTimeout(()=>x(h().performance.max),_.performance.debounce)}},size:{width:0,height:0,top:0,left:0},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:g},setEvents:_=>c(E=>({...E,events:{...E.events,..._}})),setSize:(_,E,T=0,A=0)=>{const N=h().camera,D={width:_,height:E,top:T,left:A};c(P=>({size:D,viewport:{...P.viewport,...g(N,p,D)}}))},setDpr:_=>c(E=>{const T=JS(_);return{viewport:{...E.viewport,dpr:T,initialDpr:E.viewport.initialDpr||T}}}),setFrameloop:(_="always")=>{const E=h().clock;E.stop(),E.elapsedTime=0,_!=="never"&&(E.start(),E.elapsedTime=0),c(()=>({frameloop:_}))},previousRoot:void 0,internal:{interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,lastEvent:Lt.createRef(),active:!1,frames:0,priority:0,subscribe:(_,E,T)=>{const A=h().internal;return A.priority=A.priority+(E>0?1:0),A.subscribers.push({ref:_,priority:E,store:T}),A.subscribers=A.subscribers.sort((N,D)=>N.priority-D.priority),()=>{const N=h().internal;N!=null&&N.subscribers&&(N.priority=N.priority-(E>0?1:0),N.subscribers=N.subscribers.filter(D=>D.ref!==_))}}}}}),n=e.getState();let i=n.size,o=n.viewport.dpr,l=n.camera;return e.subscribe(()=>{const{camera:c,size:h,viewport:f,gl:p,set:m}=e.getState();if(h.width!==i.width||h.height!==i.height||f.dpr!==o){i=h,o=f.dpr,fD(c,h),f.dpr>0&&p.setPixelRatio(f.dpr);const g=typeof HTMLCanvasElement<"u"&&p.domElement instanceof HTMLCanvasElement;p.setSize(h.width,h.height,g)}c!==l&&(l=c,m(g=>({viewport:{...g.viewport,...g.viewport.getCurrentViewport(c)}})))}),e.subscribe(c=>s(c)),e};function eM(){const s=Lt.useContext(tM);if(!s)throw new Error("R3F: Hooks can only be used within the Canvas component!");return s}function hs(s=e=>e,t){return eM()(s,t)}function wg(s,t=0){const e=eM(),n=e.getState().internal.subscribe,i=KS(s);return Sc(()=>n(i,t,e),[t,n,e]),null}function gD(s){const t=K3(s);return t.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Lt.version}),t}const nM=0,Bo={},vD=/^three(?=[A-Z])/,Lf=s=>`${s[0].toUpperCase()}${s.slice(1)}`;let _D=0;const yD=s=>typeof s=="function";function iM(s){if(yD(s)){const t=`${_D++}`;return Bo[t]=s,t}else Object.assign(Bo,s)}function sM(s,t){const e=Lf(s),n=Bo[e];if(s!=="primitive"&&!n)throw new Error(`R3F: ${e} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(s==="primitive"&&!t.object)throw new Error("R3F: Primitives without 'object' are invalid!");if(t.args!==void 0&&!Array.isArray(t.args))throw new Error("R3F: The args prop must be an array!")}function xD(s,t,e){var n;return s=Lf(s)in Bo?s:s.replace(vD,""),sM(s,t),s==="primitive"&&(n=t.object)!=null&&n.__r3f&&delete t.object.__r3f,jh(t.object,e,s,t)}function SD(s){if(!s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?Jh(s.parent,s):oi(s.object)&&(s.object.visible=!1),s.isHidden=!0,Xo(s)}}function aM(s){if(s.isHidden){var t;s.props.attach&&(t=s.parent)!=null&&t.object?Kh(s.parent,s):oi(s.object)&&s.props.visible!==!1&&(s.object.visible=!0),s.isHidden=!1,Xo(s)}}function Cg(s,t,e){const n=t.root.getState();if(!(!s.parent&&s.object!==n.scene)){if(!t.object){var i,o;const l=Bo[Lf(t.type)];t.object=(i=t.props.object)!=null?i:new l(...(o=t.props.args)!=null?o:[]),t.object.__r3f=t}if(_a(t.object,t.props),t.props.attach)Kh(s,t);else if(oi(t.object)&&oi(s.object)){const l=s.object.children.indexOf(e?.object);if(e&&l!==-1){const c=s.object.children.indexOf(t.object);if(c!==-1){s.object.children.splice(c,1);const h=c<l?l-1:l;s.object.children.splice(h,0,t.object)}else t.object.parent=s.object,s.object.children.splice(l,0,t.object),t.object.dispatchEvent({type:"added"}),s.object.dispatchEvent({type:"childadded",child:t.object})}else s.object.add(t.object)}for(const l of t.children)Cg(t,l);Xo(t)}}function em(s,t){t&&(t.parent=s,s.children.push(t),Cg(s,t))}function Ny(s,t,e){if(!t||!e)return;t.parent=s;const n=s.children.indexOf(e);n!==-1?s.children.splice(n,0,t):s.children.push(t),Cg(s,t,e)}function rM(s){if(typeof s.dispose=="function"){const t=()=>{try{s.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT<"u"?t():Cy.unstable_scheduleCallback(Cy.unstable_IdlePriority,t)}}function Rm(s,t,e){if(!t)return;t.parent=null;const n=s.children.indexOf(t);n!==-1&&s.children.splice(n,1),t.props.attach?Jh(s,t):oi(t.object)&&oi(s.object)&&(s.object.remove(t.object),dD(ZS(t),t.object));const i=t.props.dispose!==null&&e!==!1;for(let o=t.children.length-1;o>=0;o--){const l=t.children[o];Rm(t,l,i)}t.children.length=0,delete t.object.__r3f,i&&t.type!=="primitive"&&t.object.type!=="Scene"&&rM(t.object),e===void 0&&Xo(t)}function MD(s,t){for(const e of[s,s.alternate])if(e!==null)if(typeof e.ref=="function"){e.refCleanup==null||e.refCleanup();const n=e.ref(t);typeof n=="function"&&(e.refCleanup=n)}else e.ref&&(e.ref.current=t)}const rh=[];function bD(){for(const[e]of rh){const n=e.parent;if(n){e.props.attach?Jh(n,e):oi(e.object)&&oi(n.object)&&n.object.remove(e.object);for(const i of e.children)i.props.attach?Jh(e,i):oi(i.object)&&oi(e.object)&&e.object.remove(i.object)}e.isHidden&&aM(e),e.object.__r3f&&delete e.object.__r3f,e.type!=="primitive"&&rM(e.object)}for(const[e,n,i]of rh){e.props=n;const o=e.parent;if(o){var s,t;const l=Bo[Lf(e.type)];e.object=(s=e.props.object)!=null?s:new l(...(t=e.props.args)!=null?t:[]),e.object.__r3f=e,MD(i,e.object),_a(e.object,e.props),e.props.attach?Kh(o,e):oi(e.object)&&oi(o.object)&&o.object.add(e.object);for(const c of e.children)c.props.attach?Kh(e,c):oi(c.object)&&oi(e.object)&&e.object.add(c.object);Xo(e)}}rh.length=0}const nm=()=>{},Ly={};let Ju=nM;const ED=0,TD=4,Dm=gD({isPrimaryRenderer:!1,warnsIfNotActing:!1,supportsMutation:!0,supportsPersistence:!1,supportsHydration:!1,createInstance:xD,removeChild:Rm,appendChild:em,appendInitialChild:em,insertBefore:Ny,appendChildToContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||em(e,t)},removeChildFromContainer(s,t){const e=s.getState().scene.__r3f;!t||!e||Rm(e,t)},insertInContainerBefore(s,t,e){const n=s.getState().scene.__r3f;!t||!e||!n||Ny(n,t,e)},getRootHostContext:()=>Ly,getChildHostContext:()=>Ly,commitUpdate(s,t,e,n,i){var o,l,c;sM(t,n);let h=!1;if((s.type==="primitive"&&e.object!==n.object||((o=n.args)==null?void 0:o.length)!==((l=e.args)==null?void 0:l.length)||(c=n.args)!=null&&c.some((p,m)=>{var g;return p!==((g=e.args)==null?void 0:g[m])}))&&(h=!0),h)rh.push([s,{...n},i]);else{const p=cD(s,n);Object.keys(p).length&&(Object.assign(s.props,p),_a(s.object,p))}(i.sibling===null||(i.flags&TD)===ED)&&bD()},finalizeInitialChildren:()=>!1,commitMount(){},getPublicInstance:s=>s?.object,prepareForCommit:()=>null,preparePortalMount:s=>jh(s.getState().scene,s,"",{}),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance:SD,unhideInstance:aM,createTextInstance:nm,hideTextInstance:nm,unhideTextInstance:nm,scheduleTimeout:typeof setTimeout=="function"?setTimeout:void 0,cancelTimeout:typeof clearTimeout=="function"?clearTimeout:void 0,noTimeout:-1,getInstanceFromNode:()=>null,beforeActiveInstanceBlur(){},afterActiveInstanceBlur(){},detachDeletedInstance(){},prepareScopeUpdate(){},getInstanceFromScope:()=>null,shouldAttemptEagerTransition:()=>!1,trackSchedulerEvent:()=>{},resolveEventType:()=>null,resolveEventTimeStamp:()=>-1.1,requestPostPaintCallback(){},maySuspendCommit:()=>!1,preloadInstance:()=>!0,startSuspendingCommit(){},suspendInstance(){},waitForCommitToBeReady:()=>null,NotPendingTransition:null,HostTransitionContext:Lt.createContext(null),setCurrentUpdatePriority(s){Ju=s},getCurrentUpdatePriority(){return Ju},resolveUpdatePriority(){var s;if(Ju!==nM)return Ju;switch(typeof window<"u"&&((s=window.event)==null?void 0:s.type)){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return ah.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return ah.ContinuousEventPriority;default:return ah.DefaultEventPriority}},resetFormInstance(){}}),Sr=new Map,xo={objects:"shallow",strict:!1};function AD(s,t){if(!t&&typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement&&s.parentElement){const{width:e,height:n,top:i,left:o}=s.parentElement.getBoundingClientRect();return{width:e,height:n,top:i,left:o}}else if(!t&&typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas)return{width:s.width,height:s.height,top:0,left:0};return{width:0,height:0,top:0,left:0,...t}}function wD(s){const t=Sr.get(s),e=t?.fiber,n=t?.store;t&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,o=n||mD(Lm,Iy),l=e||Dm.createContainer(o,ah.ConcurrentRoot,null,!1,null,"",i,i,i,null);t||Sr.set(s,{fiber:l,store:o});let c,h,f=!1,p=null;return{async configure(m={}){let g;p=new Promise(yt=>g=yt);let{gl:v,size:x,scene:b,events:S,onCreated:_,shadows:E=!1,linear:T=!1,flat:A=!1,legacy:N=!1,orthographic:D=!1,frameloop:P="always",dpr:z=[1,2],performance:C,raycaster:w,camera:F,onPointerMissed:$}=m,W=o.getState(),J=W.gl;if(!W.gl){const yt={canvas:s,powerPreference:"high-performance",antialias:!0,alpha:!0},Ot=typeof v=="function"?await v(yt):v;Uy(Ot)?J=Ot:J=new kS({...yt,...v}),W.set({gl:J})}let rt=W.raycaster;rt||W.set({raycaster:rt=new PS});const{params:k,...et}=w||{};if($e.equ(et,rt,xo)||_a(rt,{...et}),$e.equ(k,rt.params,xo)||_a(rt,{params:{...rt.params,...k}}),!W.camera||W.camera===h&&!$e.equ(h,F,xo)){h=F;const yt=F?.isCamera,Ot=yt?F:D?new xa(0,0,0,0,.1,1e3):new ln(75,0,.1,1e3);yt||(Ot.position.z=5,F&&(_a(Ot,F),Ot.manual||("aspect"in F||"left"in F||"right"in F||"bottom"in F||"top"in F)&&(Ot.manual=!0,Ot.updateProjectionMatrix())),!W.camera&&!(F!=null&&F.rotation)&&Ot.lookAt(0,0,0)),W.set({camera:Ot}),rt.camera=Ot}if(!W.scene){let yt;b!=null&&b.isScene?(yt=b,jh(yt,o,"",{})):(yt=new Jm,jh(yt,o,"",{}),b&&_a(yt,b)),W.set({scene:yt})}S&&!W.events.handlers&&W.set({events:S(o)});const q=AD(s,x);if($e.equ(q,W.size,xo)||W.setSize(q.width,q.height,q.top,q.left),z&&W.viewport.dpr!==JS(z)&&W.setDpr(z),W.frameloop!==P&&W.setFrameloop(P),W.onPointerMissed||W.set({onPointerMissed:$}),C&&!$e.equ(C,W.performance,xo)&&W.set(yt=>({performance:{...yt.performance,...C}})),!W.xr){var ct;const yt=(nt,St)=>{const qt=o.getState();qt.frameloop!=="never"&&Iy(nt,!0,qt,St)},Ot=()=>{const nt=o.getState();nt.gl.xr.enabled=nt.gl.xr.isPresenting,nt.gl.xr.setAnimationLoop(nt.gl.xr.isPresenting?yt:null),nt.gl.xr.isPresenting||Lm(nt)},Qt={connect(){const nt=o.getState().gl;nt.xr.addEventListener("sessionstart",Ot),nt.xr.addEventListener("sessionend",Ot)},disconnect(){const nt=o.getState().gl;nt.xr.removeEventListener("sessionstart",Ot),nt.xr.removeEventListener("sessionend",Ot)}};typeof((ct=J.xr)==null?void 0:ct.addEventListener)=="function"&&Qt.connect(),W.set({xr:Qt})}if(J.shadowMap){const yt=J.shadowMap.enabled,Ot=J.shadowMap.type;if(J.shadowMap.enabled=!!E,$e.boo(E))J.shadowMap.type=zl;else if($e.str(E)){var vt;const Qt={basic:Yy,percentage:$h,soft:zl,variance:Ki};J.shadowMap.type=(vt=Qt[E])!=null?vt:zl}else $e.obj(E)&&Object.assign(J.shadowMap,E);(yt!==J.shadowMap.enabled||Ot!==J.shadowMap.type)&&(J.shadowMap.needsUpdate=!0)}return Re.enabled=!N,f||(J.outputColorSpace=T?Ma:kn,J.toneMapping=A?gs:Im),W.legacy!==N&&W.set(()=>({legacy:N})),W.linear!==T&&W.set(()=>({linear:T})),W.flat!==A&&W.set(()=>({flat:A})),v&&!$e.fun(v)&&!Uy(v)&&!$e.equ(v,J,xo)&&_a(J,v),c=_,f=!0,g(),this},render(m){return!f&&!p&&this.configure(),p.then(()=>{Dm.updateContainer(pn.jsx(CD,{store:o,children:m,onCreated:c,rootElement:s}),l,null,()=>{})}),o},unmount(){oM(s)}}}function CD({store:s,children:t,onCreated:e,rootElement:n}){return Sc(()=>{const i=s.getState();i.set(o=>({internal:{...o.internal,active:!0}})),e&&e(i),s.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),pn.jsx(tM.Provider,{value:s,children:t})}function oM(s,t){const e=Sr.get(s),n=e?.fiber;if(n){const i=e?.store.getState();i&&(i.internal.active=!1),Dm.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var o,l,c,h;i.events.disconnect==null||i.events.disconnect(),(o=i.gl)==null||(l=o.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(h=i.gl)!=null&&h.xr&&i.xr.disconnect(),rD(i.scene),Sr.delete(s)}catch{}},500)})}}const RD=new Set,DD=new Set,UD=new Set;function im(s,t){if(s.size)for(const{callback:e}of s.values())e(t)}function Yl(s,t){switch(s){case"before":return im(RD,t);case"after":return im(DD,t);case"tail":return im(UD,t)}}let sm,am;function Um(s,t,e){let n=t.clock.getDelta();t.frameloop==="never"&&typeof s=="number"&&(n=s-t.clock.elapsedTime,t.clock.oldTime=t.clock.elapsedTime,t.clock.elapsedTime=s),sm=t.internal.subscribers;for(let i=0;i<sm.length;i++)am=sm[i],am.ref.current(am.store.getState(),n,e);return!t.internal.priority&&t.gl.render&&t.gl.render(t.scene,t.camera),t.internal.frames=Math.max(0,t.internal.frames-1),t.frameloop==="always"?1:t.internal.frames}let Qh=!1,Nm=!1,rm,Py,So;function lM(s){Py=requestAnimationFrame(lM),Qh=!0,rm=0,Yl("before",s),Nm=!0;for(const e of Sr.values()){var t;So=e.store.getState(),So.internal.active&&(So.frameloop==="always"||So.internal.frames>0)&&!((t=So.gl.xr)!=null&&t.isPresenting)&&(rm+=Um(s,So))}if(Nm=!1,Yl("after",s),rm===0)return Yl("tail",s),Qh=!1,cancelAnimationFrame(Py)}function Lm(s,t=1){var e;if(!s)return Sr.forEach(n=>Lm(n.store.getState(),t));(e=s.gl.xr)!=null&&e.isPresenting||!s.internal.active||s.frameloop==="never"||(t>1?s.internal.frames=Math.min(60,s.internal.frames+t):Nm?s.internal.frames=2:s.internal.frames=1,Qh||(Qh=!0,requestAnimationFrame(lM)))}function Iy(s,t=!0,e,n){if(t&&Yl("before",s),e)Um(s,e,n);else for(const i of Sr.values())Um(s,i.store.getState());t&&Yl("after",s)}const om={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function ND(s){const{handlePointer:t}=pD(s);return{priority:1,enabled:!0,compute(e,n,i){n.pointer.set(e.offsetX/n.size.width*2-1,-(e.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(om).reduce((e,n)=>({...e,[n]:t(n)}),{}),update:()=>{var e;const{events:n,internal:i}=s.getState();(e=i.lastEvent)!=null&&e.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:e=>{const{set:n,events:i}=s.getState();if(i.disconnect==null||i.disconnect(),n(o=>({events:{...o.events,connected:e}})),i.handlers)for(const o in i.handlers){const l=i.handlers[o],[c,h]=om[o];e.addEventListener(c,l,{passive:h})}},disconnect:()=>{const{set:e,events:n}=s.getState();if(n.connected){if(n.handlers)for(const i in n.handlers){const o=n.handlers[i],[l]=om[i];n.connected.removeEventListener(l,o)}e(i=>({events:{...i.events,connected:void 0}}))}}}}function Oy(s,t){let e;return(...n)=>{window.clearTimeout(e),e=window.setTimeout(()=>s(...n),t)}}function LD({debounce:s,scroll:t,polyfill:e,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=e||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[o,l]=Lt.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=Lt.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:o,orientationHandler:null}),h=s?typeof s=="number"?s:s.scroll:null,f=s?typeof s=="number"?s:s.resize:null,p=Lt.useRef(!1);Lt.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,g,v]=Lt.useMemo(()=>{const _=()=>{if(!c.current.element)return;const{left:E,top:T,width:A,height:N,bottom:D,right:P,x:z,y:C}=c.current.element.getBoundingClientRect(),w={left:E,top:T,width:A,height:N,bottom:D,right:P,x:z,y:C};c.current.element instanceof HTMLElement&&n&&(w.height=c.current.element.offsetHeight,w.width=c.current.element.offsetWidth),Object.freeze(w),p.current&&!zD(c.current.lastBounds,w)&&l(c.current.lastBounds=w)};return[_,f?Oy(_,f):_,h?Oy(_,h):_]},[l,n,h,f]);function x(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(_=>_.removeEventListener("scroll",v,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function b(){c.current.element&&(c.current.resizeObserver=new i(v),c.current.resizeObserver.observe(c.current.element),t&&c.current.scrollContainers&&c.current.scrollContainers.forEach(_=>_.addEventListener("scroll",v,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{v()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const S=_=>{!_||_===c.current.element||(x(),c.current.element=_,c.current.scrollContainers=cM(_),b())};return ID(v,!!t),PD(g),Lt.useEffect(()=>{x(),b()},[t,v,g]),Lt.useEffect(()=>x,[]),[S,o,m]}function PD(s){Lt.useEffect(()=>{const t=s;return window.addEventListener("resize",t),()=>void window.removeEventListener("resize",t)},[s])}function ID(s,t){Lt.useEffect(()=>{if(t){const e=s;return window.addEventListener("scroll",e,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",e,!0)}},[s,t])}function cM(s){const t=[];if(!s||s===document.body)return t;const{overflow:e,overflowX:n,overflowY:i}=window.getComputedStyle(s);return[e,n,i].some(o=>o==="auto"||o==="scroll")&&t.push(s),[...t,...cM(s.parentElement)]}const OD=["x","y","top","bottom","left","right","width","height"],zD=(s,t)=>OD.every(e=>s[e]===t[e]);function BD({ref:s,children:t,fallback:e,resize:n,style:i,gl:o,events:l=ND,eventSource:c,eventPrefix:h,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:b,performance:S,raycaster:_,camera:E,scene:T,onPointerMissed:A,onCreated:N,...D}){Lt.useMemo(()=>iM(N3),[]);const P=iD(),[z,C]=LD({scroll:!0,debounce:{scroll:50,resize:0},...n}),w=Lt.useRef(null),F=Lt.useRef(null);Lt.useImperativeHandle(s,()=>w.current);const $=KS(A),[W,J]=Lt.useState(!1),[rt,k]=Lt.useState(!1);if(W)throw W;if(rt)throw rt;const et=Lt.useRef(null);Sc(()=>{const ct=w.current;if(C.width>0&&C.height>0&&ct){et.current||(et.current=wD(ct));async function vt(){await et.current.configure({gl:o,scene:T,events:l,shadows:f,linear:p,flat:m,legacy:g,orthographic:v,frameloop:x,dpr:b,performance:S,raycaster:_,camera:E,size:C,onPointerMissed:(...yt)=>$.current==null?void 0:$.current(...yt),onCreated:yt=>{yt.events.connect==null||yt.events.connect(c?eD(c)?c.current:c:F.current),h&&yt.setEvents({compute:(Ot,Qt)=>{const nt=Ot[h+"X"],St=Ot[h+"Y"];Qt.pointer.set(nt/Qt.size.width*2-1,-(St/Qt.size.height)*2+1),Qt.raycaster.setFromCamera(Qt.pointer,Qt.camera)}}),N?.(yt)}}),et.current.render(pn.jsx(P,{children:pn.jsx(aD,{set:k,children:pn.jsx(Lt.Suspense,{fallback:pn.jsx(sD,{set:J}),children:t??null})})}))}vt()}}),Lt.useEffect(()=>{const ct=w.current;if(ct)return()=>oM(ct)},[]);const q=c?"none":"auto";return pn.jsx("div",{ref:F,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:q,...i},...D,children:pn.jsx("div",{ref:z,style:{width:"100%",height:"100%"},children:pn.jsx("canvas",{ref:w,style:{display:"block"},children:e})})})}function FD(s){return pn.jsx(qS,{children:pn.jsx(BD,{...s})})}const uM=parseInt(Fo.replace(/\D+/g,"")),hM=uM>=125?"uv1":"uv2";var HD=Object.defineProperty,VD=(s,t,e)=>t in s?HD(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,GD=(s,t,e)=>(VD(s,t+"",e),e);class kD{constructor(){GD(this,"_listeners")}addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const o=i.indexOf(e);o!==-1&&i.splice(o,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let o=0,l=i.length;o<l;o++)i[o].call(this,t);t.target=null}}}var WD=Object.defineProperty,XD=(s,t,e)=>t in s?WD(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e,ae=(s,t,e)=>(XD(s,typeof t!="symbol"?t+"":t,e),e);const Qu=new Mr,zy=new Fs,qD=Math.cos(70*(Math.PI/180)),By=(s,t)=>(s%t+t)%t;let YD=class extends kD{constructor(t,e){super(),ae(this,"object"),ae(this,"domElement"),ae(this,"enabled",!0),ae(this,"target",new I),ae(this,"minDistance",0),ae(this,"maxDistance",1/0),ae(this,"minZoom",0),ae(this,"maxZoom",1/0),ae(this,"minPolarAngle",0),ae(this,"maxPolarAngle",Math.PI),ae(this,"minAzimuthAngle",-1/0),ae(this,"maxAzimuthAngle",1/0),ae(this,"enableDamping",!1),ae(this,"dampingFactor",.05),ae(this,"enableZoom",!0),ae(this,"zoomSpeed",1),ae(this,"enableRotate",!0),ae(this,"rotateSpeed",1),ae(this,"enablePan",!0),ae(this,"panSpeed",1),ae(this,"screenSpacePanning",!0),ae(this,"keyPanSpeed",7),ae(this,"zoomToCursor",!1),ae(this,"autoRotate",!1),ae(this,"autoRotateSpeed",2),ae(this,"reverseOrbit",!1),ae(this,"reverseHorizontalOrbit",!1),ae(this,"reverseVerticalOrbit",!1),ae(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),ae(this,"mouseButtons",{LEFT:or.ROTATE,MIDDLE:or.DOLLY,RIGHT:or.PAN}),ae(this,"touches",{ONE:lr.ROTATE,TWO:lr.DOLLY_PAN}),ae(this,"target0"),ae(this,"position0"),ae(this,"zoom0"),ae(this,"_domElementKeyEvents",null),ae(this,"getPolarAngle"),ae(this,"getAzimuthalAngle"),ae(this,"setPolarAngle"),ae(this,"setAzimuthalAngle"),ae(this,"getDistance"),ae(this,"getZoomScale"),ae(this,"listenToKeyEvents"),ae(this,"stopListenToKeyEvents"),ae(this,"saveState"),ae(this,"reset"),ae(this,"update"),ae(this,"connect"),ae(this,"dispose"),ae(this,"dollyIn"),ae(this,"dollyOut"),ae(this,"getScale"),ae(this,"setScale"),this.object=t,this.domElement=e,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>p.phi,this.getAzimuthalAngle=()=>p.theta,this.setPolarAngle=V=>{let Q=By(V,2*Math.PI),bt=p.phi;bt<0&&(bt+=2*Math.PI),Q<0&&(Q+=2*Math.PI);let H=Math.abs(Q-bt);2*Math.PI-H<H&&(Q<bt?Q+=2*Math.PI:bt+=2*Math.PI),m.phi=Q-bt,n.update()},this.setAzimuthalAngle=V=>{let Q=By(V,2*Math.PI),bt=p.theta;bt<0&&(bt+=2*Math.PI),Q<0&&(Q+=2*Math.PI);let H=Math.abs(Q-bt);2*Math.PI-H<H&&(Q<bt?Q+=2*Math.PI:bt+=2*Math.PI),m.theta=Q-bt,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=V=>{V.addEventListener("keydown",lt),this._domElementKeyEvents=V},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",lt),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),h=c.NONE},this.update=(()=>{const V=new I,Q=new I(0,1,0),bt=new Xn().setFromUnitVectors(t.up,Q),H=bt.clone().invert(),Tt=new I,gt=new Xn,zt=2*Math.PI;return function(){const dt=n.object.position;bt.setFromUnitVectors(t.up,Q),H.copy(bt).invert(),V.copy(dt).sub(n.target),V.applyQuaternion(bt),p.setFromVector3(V),n.autoRotate&&h===c.NONE&&J($()),n.enableDamping?(p.theta+=m.theta*n.dampingFactor,p.phi+=m.phi*n.dampingFactor):(p.theta+=m.theta,p.phi+=m.phi);let Ft=n.minAzimuthAngle,te=n.maxAzimuthAngle;isFinite(Ft)&&isFinite(te)&&(Ft<-Math.PI?Ft+=zt:Ft>Math.PI&&(Ft-=zt),te<-Math.PI?te+=zt:te>Math.PI&&(te-=zt),Ft<=te?p.theta=Math.max(Ft,Math.min(te,p.theta)):p.theta=p.theta>(Ft+te)/2?Math.max(Ft,p.theta):Math.min(te,p.theta)),p.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,p.phi)),p.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(v,n.dampingFactor):n.target.add(v),n.zoomToCursor&&C||n.object.isOrthographicCamera?p.radius=Qt(p.radius):p.radius=Qt(p.radius*g),V.setFromSpherical(p),V.applyQuaternion(H),dt.copy(n.target).add(V),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(m.theta*=1-n.dampingFactor,m.phi*=1-n.dampingFactor,v.multiplyScalar(1-n.dampingFactor)):(m.set(0,0,0),v.set(0,0,0));let Te=!1;if(n.zoomToCursor&&C){let Se=null;if(n.object instanceof ln&&n.object.isPerspectiveCamera){const un=V.length();Se=Qt(un*g);const Tn=un-Se;n.object.position.addScaledVector(P,Tn),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const un=new I(z.x,z.y,0);un.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/g)),n.object.updateProjectionMatrix(),Te=!0;const Tn=new I(z.x,z.y,0);Tn.unproject(n.object),n.object.position.sub(Tn).add(un),n.object.updateMatrixWorld(),Se=V.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Se!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Se).add(n.object.position):(Qu.origin.copy(n.object.position),Qu.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Qu.direction))<qD?t.lookAt(n.target):(zy.setFromNormalAndCoplanarPoint(n.object.up,n.target),Qu.intersectPlane(zy,n.target))))}else n.object instanceof xa&&n.object.isOrthographicCamera&&(Te=g!==1,Te&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/g)),n.object.updateProjectionMatrix()));return g=1,C=!1,Te||Tt.distanceToSquared(n.object.position)>f||8*(1-gt.dot(n.object.quaternion))>f?(n.dispatchEvent(i),Tt.copy(n.object.position),gt.copy(n.object.quaternion),Te=!1,!0):!1}})(),this.connect=V=>{n.domElement=V,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",Xt),n.domElement.addEventListener("pointerdown",ce),n.domElement.addEventListener("pointercancel",R),n.domElement.addEventListener("wheel",pt)},this.dispose=()=>{var V,Q,bt,H,Tt,gt;n.domElement&&(n.domElement.style.touchAction="auto"),(V=n.domElement)==null||V.removeEventListener("contextmenu",Xt),(Q=n.domElement)==null||Q.removeEventListener("pointerdown",ce),(bt=n.domElement)==null||bt.removeEventListener("pointercancel",R),(H=n.domElement)==null||H.removeEventListener("wheel",pt),(Tt=n.domElement)==null||Tt.ownerDocument.removeEventListener("pointermove",B),(gt=n.domElement)==null||gt.ownerDocument.removeEventListener("pointerup",R),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",lt)};const n=this,i={type:"change"},o={type:"start"},l={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let h=c.NONE;const f=1e-6,p=new Em,m=new Em;let g=1;const v=new I,x=new ut,b=new ut,S=new ut,_=new ut,E=new ut,T=new ut,A=new ut,N=new ut,D=new ut,P=new I,z=new ut;let C=!1;const w=[],F={};function $(){return 2*Math.PI/60/60*n.autoRotateSpeed}function W(){return Math.pow(.95,n.zoomSpeed)}function J(V){n.reverseOrbit||n.reverseHorizontalOrbit?m.theta+=V:m.theta-=V}function rt(V){n.reverseOrbit||n.reverseVerticalOrbit?m.phi+=V:m.phi-=V}const k=(()=>{const V=new I;return function(bt,H){V.setFromMatrixColumn(H,0),V.multiplyScalar(-bt),v.add(V)}})(),et=(()=>{const V=new I;return function(bt,H){n.screenSpacePanning===!0?V.setFromMatrixColumn(H,1):(V.setFromMatrixColumn(H,0),V.crossVectors(n.object.up,V)),V.multiplyScalar(bt),v.add(V)}})(),q=(()=>{const V=new I;return function(bt,H){const Tt=n.domElement;if(Tt&&n.object instanceof ln&&n.object.isPerspectiveCamera){const gt=n.object.position;V.copy(gt).sub(n.target);let zt=V.length();zt*=Math.tan(n.object.fov/2*Math.PI/180),k(2*bt*zt/Tt.clientHeight,n.object.matrix),et(2*H*zt/Tt.clientHeight,n.object.matrix)}else Tt&&n.object instanceof xa&&n.object.isOrthographicCamera?(k(bt*(n.object.right-n.object.left)/n.object.zoom/Tt.clientWidth,n.object.matrix),et(H*(n.object.top-n.object.bottom)/n.object.zoom/Tt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function ct(V){n.object instanceof ln&&n.object.isPerspectiveCamera||n.object instanceof xa&&n.object.isOrthographicCamera?g=V:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function vt(V){ct(g/V)}function yt(V){ct(g*V)}function Ot(V){if(!n.zoomToCursor||!n.domElement)return;C=!0;const Q=n.domElement.getBoundingClientRect(),bt=V.clientX-Q.left,H=V.clientY-Q.top,Tt=Q.width,gt=Q.height;z.x=bt/Tt*2-1,z.y=-(H/gt)*2+1,P.set(z.x,z.y,1).unproject(n.object).sub(n.object.position).normalize()}function Qt(V){return Math.max(n.minDistance,Math.min(n.maxDistance,V))}function nt(V){x.set(V.clientX,V.clientY)}function St(V){Ot(V),A.set(V.clientX,V.clientY)}function qt(V){_.set(V.clientX,V.clientY)}function Ut(V){b.set(V.clientX,V.clientY),S.subVectors(b,x).multiplyScalar(n.rotateSpeed);const Q=n.domElement;Q&&(J(2*Math.PI*S.x/Q.clientHeight),rt(2*Math.PI*S.y/Q.clientHeight)),x.copy(b),n.update()}function Yt(V){N.set(V.clientX,V.clientY),D.subVectors(N,A),D.y>0?vt(W()):D.y<0&&yt(W()),A.copy(N),n.update()}function fe(V){E.set(V.clientX,V.clientY),T.subVectors(E,_).multiplyScalar(n.panSpeed),q(T.x,T.y),_.copy(E),n.update()}function ee(V){Ot(V),V.deltaY<0?yt(W()):V.deltaY>0&&vt(W()),n.update()}function Ue(V){let Q=!1;switch(V.code){case n.keys.UP:q(0,n.keyPanSpeed),Q=!0;break;case n.keys.BOTTOM:q(0,-n.keyPanSpeed),Q=!0;break;case n.keys.LEFT:q(n.keyPanSpeed,0),Q=!0;break;case n.keys.RIGHT:q(-n.keyPanSpeed,0),Q=!0;break}Q&&(V.preventDefault(),n.update())}function ge(){if(w.length==1)x.set(w[0].pageX,w[0].pageY);else{const V=.5*(w[0].pageX+w[1].pageX),Q=.5*(w[0].pageY+w[1].pageY);x.set(V,Q)}}function re(){if(w.length==1)_.set(w[0].pageX,w[0].pageY);else{const V=.5*(w[0].pageX+w[1].pageX),Q=.5*(w[0].pageY+w[1].pageY);_.set(V,Q)}}function O(){const V=w[0].pageX-w[1].pageX,Q=w[0].pageY-w[1].pageY,bt=Math.sqrt(V*V+Q*Q);A.set(0,bt)}function Ct(){n.enableZoom&&O(),n.enablePan&&re()}function xt(){n.enableZoom&&O(),n.enableRotate&&ge()}function At(V){if(w.length==1)b.set(V.pageX,V.pageY);else{const bt=$t(V),H=.5*(V.pageX+bt.x),Tt=.5*(V.pageY+bt.y);b.set(H,Tt)}S.subVectors(b,x).multiplyScalar(n.rotateSpeed);const Q=n.domElement;Q&&(J(2*Math.PI*S.x/Q.clientHeight),rt(2*Math.PI*S.y/Q.clientHeight)),x.copy(b)}function ht(V){if(w.length==1)E.set(V.pageX,V.pageY);else{const Q=$t(V),bt=.5*(V.pageX+Q.x),H=.5*(V.pageY+Q.y);E.set(bt,H)}T.subVectors(E,_).multiplyScalar(n.panSpeed),q(T.x,T.y),_.copy(E)}function Ht(V){const Q=$t(V),bt=V.pageX-Q.x,H=V.pageY-Q.y,Tt=Math.sqrt(bt*bt+H*H);N.set(0,Tt),D.set(0,Math.pow(N.y/A.y,n.zoomSpeed)),vt(D.y),A.copy(N)}function _t(V){n.enableZoom&&Ht(V),n.enablePan&&ht(V)}function Bt(V){n.enableZoom&&Ht(V),n.enableRotate&&At(V)}function ce(V){var Q,bt;n.enabled!==!1&&(w.length===0&&((Q=n.domElement)==null||Q.ownerDocument.addEventListener("pointermove",B),(bt=n.domElement)==null||bt.ownerDocument.addEventListener("pointerup",R)),jt(V),V.pointerType==="touch"?Jt(V):K(V))}function B(V){n.enabled!==!1&&(V.pointerType==="touch"?Dt(V):ot(V))}function R(V){var Q,bt,H;mt(V),w.length===0&&((Q=n.domElement)==null||Q.releasePointerCapture(V.pointerId),(bt=n.domElement)==null||bt.ownerDocument.removeEventListener("pointermove",B),(H=n.domElement)==null||H.ownerDocument.removeEventListener("pointerup",R)),n.dispatchEvent(l),h=c.NONE}function K(V){let Q;switch(V.button){case 0:Q=n.mouseButtons.LEFT;break;case 1:Q=n.mouseButtons.MIDDLE;break;case 2:Q=n.mouseButtons.RIGHT;break;default:Q=-1}switch(Q){case or.DOLLY:if(n.enableZoom===!1)return;St(V),h=c.DOLLY;break;case or.ROTATE:if(V.ctrlKey||V.metaKey||V.shiftKey){if(n.enablePan===!1)return;qt(V),h=c.PAN}else{if(n.enableRotate===!1)return;nt(V),h=c.ROTATE}break;case or.PAN:if(V.ctrlKey||V.metaKey||V.shiftKey){if(n.enableRotate===!1)return;nt(V),h=c.ROTATE}else{if(n.enablePan===!1)return;qt(V),h=c.PAN}break;default:h=c.NONE}h!==c.NONE&&n.dispatchEvent(o)}function ot(V){if(n.enabled!==!1)switch(h){case c.ROTATE:if(n.enableRotate===!1)return;Ut(V);break;case c.DOLLY:if(n.enableZoom===!1)return;Yt(V);break;case c.PAN:if(n.enablePan===!1)return;fe(V);break}}function pt(V){n.enabled===!1||n.enableZoom===!1||h!==c.NONE&&h!==c.ROTATE||(V.preventDefault(),n.dispatchEvent(o),ee(V),n.dispatchEvent(l))}function lt(V){n.enabled===!1||n.enablePan===!1||Ue(V)}function Jt(V){switch(Pt(V),w.length){case 1:switch(n.touches.ONE){case lr.ROTATE:if(n.enableRotate===!1)return;ge(),h=c.TOUCH_ROTATE;break;case lr.PAN:if(n.enablePan===!1)return;re(),h=c.TOUCH_PAN;break;default:h=c.NONE}break;case 2:switch(n.touches.TWO){case lr.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ct(),h=c.TOUCH_DOLLY_PAN;break;case lr.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;xt(),h=c.TOUCH_DOLLY_ROTATE;break;default:h=c.NONE}break;default:h=c.NONE}h!==c.NONE&&n.dispatchEvent(o)}function Dt(V){switch(Pt(V),h){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;At(V),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;ht(V),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;_t(V),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Bt(V),n.update();break;default:h=c.NONE}}function Xt(V){n.enabled!==!1&&V.preventDefault()}function jt(V){w.push(V)}function mt(V){delete F[V.pointerId];for(let Q=0;Q<w.length;Q++)if(w[Q].pointerId==V.pointerId){w.splice(Q,1);return}}function Pt(V){let Q=F[V.pointerId];Q===void 0&&(Q=new ut,F[V.pointerId]=Q),Q.set(V.pageX,V.pageY)}function $t(V){const Q=V.pointerId===w[0].pointerId?w[1]:w[0];return F[Q.pointerId]}this.dollyIn=(V=W())=>{yt(V),n.update()},this.dollyOut=(V=W())=>{vt(V),n.update()},this.getScale=()=>g,this.setScale=V=>{ct(V),n.update()},this.getZoomScale=()=>W(),e!==void 0&&this.connect(e),this.update()}};const Fy=new vn,$u=new I;class Rg extends vg{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const t=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],e=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],n=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(n),this.setAttribute("position",new Zt(t,3)),this.setAttribute("uv",new Zt(e,2))}applyMatrix4(t){const e=this.attributes.instanceStart,n=this.attributes.instanceEnd;return e!==void 0&&(e.applyMatrix4(t),n.applyMatrix4(t),e.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(t){let e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));const n=new Zh(e,6,1);return this.setAttribute("instanceStart",new bi(n,3,0)),this.setAttribute("instanceEnd",new bi(n,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(t,e=3){let n;t instanceof Float32Array?n=t:Array.isArray(t)&&(n=new Float32Array(t));const i=new Zh(n,e*2,1);return this.setAttribute("instanceColorStart",new bi(i,e,0)),this.setAttribute("instanceColorEnd",new bi(i,e,e)),this}fromWireframeGeometry(t){return this.setPositions(t.attributes.position.array),this}fromEdgesGeometry(t){return this.setPositions(t.attributes.position.array),this}fromMesh(t){return this.fromWireframeGeometry(new lg(t.geometry)),this}fromLineSegments(t){const e=t.geometry;return this.setPositions(e.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new vn);const t=this.attributes.instanceStart,e=this.attributes.instanceEnd;t!==void 0&&e!==void 0&&(this.boundingBox.setFromBufferAttribute(t),Fy.setFromBufferAttribute(e),this.boundingBox.union(Fy))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new _n),this.boundingBox===null&&this.computeBoundingBox();const t=this.attributes.instanceStart,e=this.attributes.instanceEnd;if(t!==void 0&&e!==void 0){const n=this.boundingSphere.center;this.boundingBox.getCenter(n);let i=0;for(let o=0,l=t.count;o<l;o++)$u.fromBufferAttribute(t,o),i=Math.max(i,n.distanceToSquared($u)),$u.fromBufferAttribute(e,o),i=Math.max(i,n.distanceToSquared($u));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(t){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(t)}}class fM extends Rg{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(t){const e=t.length-3,n=new Float32Array(2*e);for(let i=0;i<e;i+=3)n[2*i]=t[i],n[2*i+1]=t[i+1],n[2*i+2]=t[i+2],n[2*i+3]=t[i+3],n[2*i+4]=t[i+4],n[2*i+5]=t[i+5];return super.setPositions(n),this}setColors(t,e=3){const n=t.length-e,i=new Float32Array(2*n);if(e===3)for(let o=0;o<n;o+=e)i[2*o]=t[o],i[2*o+1]=t[o+1],i[2*o+2]=t[o+2],i[2*o+3]=t[o+3],i[2*o+4]=t[o+4],i[2*o+5]=t[o+5];else for(let o=0;o<n;o+=e)i[2*o]=t[o],i[2*o+1]=t[o+1],i[2*o+2]=t[o+2],i[2*o+3]=t[o+3],i[2*o+4]=t[o+4],i[2*o+5]=t[o+5],i[2*o+6]=t[o+6],i[2*o+7]=t[o+7];return super.setColors(i,e),this}fromLine(t){const e=t.geometry;return this.setPositions(e.attributes.position.array),this}}class Dg extends Ai{constructor(t){super({type:"LineMaterial",uniforms:kh.clone(kh.merge([Nt.common,Nt.fog,{worldUnits:{value:1},linewidth:{value:1},resolution:{value:new ut(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}}])),vertexShader:`
				#include <common>
				#include <fog_pars_vertex>
				#include <logdepthbuf_pars_vertex>
				#include <clipping_planes_pars_vertex>

				uniform float linewidth;
				uniform vec2 resolution;

				attribute vec3 instanceStart;
				attribute vec3 instanceEnd;

				#ifdef USE_COLOR
					#ifdef USE_LINE_COLOR_ALPHA
						varying vec4 vLineColor;
						attribute vec4 instanceColorStart;
						attribute vec4 instanceColorEnd;
					#else
						varying vec3 vLineColor;
						attribute vec3 instanceColorStart;
						attribute vec3 instanceColorEnd;
					#endif
				#endif

				#ifdef WORLD_UNITS

					varying vec4 worldPos;
					varying vec3 worldStart;
					varying vec3 worldEnd;

					#ifdef USE_DASH

						varying vec2 vUv;

					#endif

				#else

					varying vec2 vUv;

				#endif

				#ifdef USE_DASH

					uniform float dashScale;
					attribute float instanceDistanceStart;
					attribute float instanceDistanceEnd;
					varying float vLineDistance;

				#endif

				void trimSegment( const in vec4 start, inout vec4 end ) {

					// trim end segment so it terminates between the camera plane and the near plane

					// conservative estimate of the near plane
					float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
					float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
					float nearEstimate = - 0.5 * b / a;

					float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

					end.xyz = mix( start.xyz, end.xyz, alpha );

				}

				void main() {

					#ifdef USE_COLOR

						vLineColor = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

					#endif

					#ifdef USE_DASH

						vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
						vUv = uv;

					#endif

					float aspect = resolution.x / resolution.y;

					// camera space
					vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
					vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

					#ifdef WORLD_UNITS

						worldStart = start.xyz;
						worldEnd = end.xyz;

					#else

						vUv = uv;

					#endif

					// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
					// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
					// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
					// perhaps there is a more elegant solution -- WestLangley

					bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

					if ( perspective ) {

						if ( start.z < 0.0 && end.z >= 0.0 ) {

							trimSegment( start, end );

						} else if ( end.z < 0.0 && start.z >= 0.0 ) {

							trimSegment( end, start );

						}

					}

					// clip space
					vec4 clipStart = projectionMatrix * start;
					vec4 clipEnd = projectionMatrix * end;

					// ndc space
					vec3 ndcStart = clipStart.xyz / clipStart.w;
					vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

					// direction
					vec2 dir = ndcEnd.xy - ndcStart.xy;

					// account for clip-space aspect ratio
					dir.x *= aspect;
					dir = normalize( dir );

					#ifdef WORLD_UNITS

						// get the offset direction as perpendicular to the view vector
						vec3 worldDir = normalize( end.xyz - start.xyz );
						vec3 offset;
						if ( position.y < 0.5 ) {

							offset = normalize( cross( start.xyz, worldDir ) );

						} else {

							offset = normalize( cross( end.xyz, worldDir ) );

						}

						// sign flip
						if ( position.x < 0.0 ) offset *= - 1.0;

						float forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );

						// don't extend the line if we're rendering dashes because we
						// won't be rendering the endcaps
						#ifndef USE_DASH

							// extend the line bounds to encompass  endcaps
							start.xyz += - worldDir * linewidth * 0.5;
							end.xyz += worldDir * linewidth * 0.5;

							// shift the position of the quad so it hugs the forward edge of the line
							offset.xy -= dir * forwardOffset;
							offset.z += 0.5;

						#endif

						// endcaps
						if ( position.y > 1.0 || position.y < 0.0 ) {

							offset.xy += dir * 2.0 * forwardOffset;

						}

						// adjust for linewidth
						offset *= linewidth * 0.5;

						// set the world position
						worldPos = ( position.y < 0.5 ) ? start : end;
						worldPos.xyz += offset;

						// project the worldpos
						vec4 clip = projectionMatrix * worldPos;

						// shift the depth of the projected points so the line
						// segments overlap neatly
						vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
						clip.z = clipPose.z * clip.w;

					#else

						vec2 offset = vec2( dir.y, - dir.x );
						// undo aspect ratio adjustment
						dir.x /= aspect;
						offset.x /= aspect;

						// sign flip
						if ( position.x < 0.0 ) offset *= - 1.0;

						// endcaps
						if ( position.y < 0.0 ) {

							offset += - dir;

						} else if ( position.y > 1.0 ) {

							offset += dir;

						}

						// adjust for linewidth
						offset *= linewidth;

						// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
						offset /= resolution.y;

						// select end
						vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

						// back to clip space
						offset *= clip.w;

						clip.xy += offset;

					#endif

					gl_Position = clip;

					vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

					#include <logdepthbuf_vertex>
					#include <clipping_planes_vertex>
					#include <fog_vertex>

				}
			`,fragmentShader:`
				uniform vec3 diffuse;
				uniform float opacity;
				uniform float linewidth;

				#ifdef USE_DASH

					uniform float dashOffset;
					uniform float dashSize;
					uniform float gapSize;

				#endif

				varying float vLineDistance;

				#ifdef WORLD_UNITS

					varying vec4 worldPos;
					varying vec3 worldStart;
					varying vec3 worldEnd;

					#ifdef USE_DASH

						varying vec2 vUv;

					#endif

				#else

					varying vec2 vUv;

				#endif

				#include <common>
				#include <fog_pars_fragment>
				#include <logdepthbuf_pars_fragment>
				#include <clipping_planes_pars_fragment>

				#ifdef USE_COLOR
					#ifdef USE_LINE_COLOR_ALPHA
						varying vec4 vLineColor;
					#else
						varying vec3 vLineColor;
					#endif
				#endif

				vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

					float mua;
					float mub;

					vec3 p13 = p1 - p3;
					vec3 p43 = p4 - p3;

					vec3 p21 = p2 - p1;

					float d1343 = dot( p13, p43 );
					float d4321 = dot( p43, p21 );
					float d1321 = dot( p13, p21 );
					float d4343 = dot( p43, p43 );
					float d2121 = dot( p21, p21 );

					float denom = d2121 * d4343 - d4321 * d4321;

					float numer = d1343 * d4321 - d1321 * d4343;

					mua = numer / denom;
					mua = clamp( mua, 0.0, 1.0 );
					mub = ( d1343 + d4321 * ( mua ) ) / d4343;
					mub = clamp( mub, 0.0, 1.0 );

					return vec2( mua, mub );

				}

				void main() {

					#include <clipping_planes_fragment>

					#ifdef USE_DASH

						if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

						if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

					#endif

					float alpha = opacity;

					#ifdef WORLD_UNITS

						// Find the closest points on the view ray and the line segment
						vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
						vec3 lineDir = worldEnd - worldStart;
						vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

						vec3 p1 = worldStart + lineDir * params.x;
						vec3 p2 = rayEnd * params.y;
						vec3 delta = p1 - p2;
						float len = length( delta );
						float norm = len / linewidth;

						#ifndef USE_DASH

							#ifdef USE_ALPHA_TO_COVERAGE

								float dnorm = fwidth( norm );
								alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

							#else

								if ( norm > 0.5 ) {

									discard;

								}

							#endif

						#endif

					#else

						#ifdef USE_ALPHA_TO_COVERAGE

							// artifacts appear on some hardware if a derivative is taken within a conditional
							float a = vUv.x;
							float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
							float len2 = a * a + b * b;
							float dlen = fwidth( len2 );

							if ( abs( vUv.y ) > 1.0 ) {

								alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

							}

						#else

							if ( abs( vUv.y ) > 1.0 ) {

								float a = vUv.x;
								float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
								float len2 = a * a + b * b;

								if ( len2 > 1.0 ) discard;

							}

						#endif

					#endif

					vec4 diffuseColor = vec4( diffuse, alpha );
					#ifdef USE_COLOR
						#ifdef USE_LINE_COLOR_ALPHA
							diffuseColor *= vLineColor;
						#else
							diffuseColor.rgb *= vLineColor;
						#endif
					#endif

					#include <logdepthbuf_fragment>

					gl_FragColor = diffuseColor;

					#include <tonemapping_fragment>
					#include <${uM>=154?"colorspace_fragment":"encodings_fragment"}>
					#include <fog_fragment>
					#include <premultiplied_alpha_fragment>

				}
			`,clipping:!0}),this.isLineMaterial=!0,this.onBeforeCompile=function(){this.transparent?this.defines.USE_LINE_COLOR_ALPHA="1":delete this.defines.USE_LINE_COLOR_ALPHA},Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(e){this.uniforms.diffuse.value=e}},worldUnits:{enumerable:!0,get:function(){return"WORLD_UNITS"in this.defines},set:function(e){e===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(e){this.uniforms.linewidth.value=e}},dashed:{enumerable:!0,get:function(){return"USE_DASH"in this.defines},set(e){!!e!="USE_DASH"in this.defines&&(this.needsUpdate=!0),e===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(e){this.uniforms.dashScale.value=e}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(e){this.uniforms.dashSize.value=e}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(e){this.uniforms.dashOffset.value=e}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(e){this.uniforms.gapSize.value=e}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(e){this.uniforms.resolution.value.copy(e)}},alphaToCoverage:{enumerable:!0,get:function(){return"USE_ALPHA_TO_COVERAGE"in this.defines},set:function(e){!!e!="USE_ALPHA_TO_COVERAGE"in this.defines&&(this.needsUpdate=!0),e===!0?(this.defines.USE_ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.USE_ALPHA_TO_COVERAGE,this.extensions.derivatives=!1)}}}),this.setValues(t)}}const lm=new Me,Hy=new I,Vy=new I,Dn=new Me,Un=new Me,cs=new Me,cm=new I,um=new oe,Nn=new IS,Gy=new I,th=new vn,eh=new _n,us=new Me;let ds,_r;function ky(s,t,e){return us.set(0,0,-t,1).applyMatrix4(s.projectionMatrix),us.multiplyScalar(1/us.w),us.x=_r/e.width,us.y=_r/e.height,us.applyMatrix4(s.projectionMatrixInverse),us.multiplyScalar(1/us.w),Math.abs(Math.max(us.x,us.y))}function ZD(s,t){const e=s.matrixWorld,n=s.geometry,i=n.attributes.instanceStart,o=n.attributes.instanceEnd,l=Math.min(n.instanceCount,i.count);for(let c=0,h=l;c<h;c++){Nn.start.fromBufferAttribute(i,c),Nn.end.fromBufferAttribute(o,c),Nn.applyMatrix4(e);const f=new I,p=new I;ds.distanceSqToSegment(Nn.start,Nn.end,p,f),p.distanceTo(f)<_r*.5&&t.push({point:p,pointOnLine:f,distance:ds.origin.distanceTo(p),object:s,face:null,faceIndex:c,uv:null,[hM]:null})}}function jD(s,t,e){const n=t.projectionMatrix,o=s.material.resolution,l=s.matrixWorld,c=s.geometry,h=c.attributes.instanceStart,f=c.attributes.instanceEnd,p=Math.min(c.instanceCount,h.count),m=-t.near;ds.at(1,cs),cs.w=1,cs.applyMatrix4(t.matrixWorldInverse),cs.applyMatrix4(n),cs.multiplyScalar(1/cs.w),cs.x*=o.x/2,cs.y*=o.y/2,cs.z=0,cm.copy(cs),um.multiplyMatrices(t.matrixWorldInverse,l);for(let g=0,v=p;g<v;g++){if(Dn.fromBufferAttribute(h,g),Un.fromBufferAttribute(f,g),Dn.w=1,Un.w=1,Dn.applyMatrix4(um),Un.applyMatrix4(um),Dn.z>m&&Un.z>m)continue;if(Dn.z>m){const T=Dn.z-Un.z,A=(Dn.z-m)/T;Dn.lerp(Un,A)}else if(Un.z>m){const T=Un.z-Dn.z,A=(Un.z-m)/T;Un.lerp(Dn,A)}Dn.applyMatrix4(n),Un.applyMatrix4(n),Dn.multiplyScalar(1/Dn.w),Un.multiplyScalar(1/Un.w),Dn.x*=o.x/2,Dn.y*=o.y/2,Un.x*=o.x/2,Un.y*=o.y/2,Nn.start.copy(Dn),Nn.start.z=0,Nn.end.copy(Un),Nn.end.z=0;const b=Nn.closestPointToPointParameter(cm,!0);Nn.at(b,Gy);const S=Ym.lerp(Dn.z,Un.z,b),_=S>=-1&&S<=1,E=cm.distanceTo(Gy)<_r*.5;if(_&&E){Nn.start.fromBufferAttribute(h,g),Nn.end.fromBufferAttribute(f,g),Nn.start.applyMatrix4(l),Nn.end.applyMatrix4(l);const T=new I,A=new I;ds.distanceSqToSegment(Nn.start,Nn.end,A,T),e.push({point:A,pointOnLine:T,distance:ds.origin.distanceTo(A),object:s,face:null,faceIndex:g,uv:null,[hM]:null})}}}class dM extends cn{constructor(t=new Rg,e=new Dg({color:Math.random()*16777215})){super(t,e),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const t=this.geometry,e=t.attributes.instanceStart,n=t.attributes.instanceEnd,i=new Float32Array(2*e.count);for(let l=0,c=0,h=e.count;l<h;l++,c+=2)Hy.fromBufferAttribute(e,l),Vy.fromBufferAttribute(n,l),i[c]=c===0?0:i[c-1],i[c+1]=i[c]+Hy.distanceTo(Vy);const o=new Zh(i,2,1);return t.setAttribute("instanceDistanceStart",new bi(o,1,0)),t.setAttribute("instanceDistanceEnd",new bi(o,1,1)),this}raycast(t,e){const n=this.material.worldUnits,i=t.camera;i===null&&!n&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const o=t.params.Line2!==void 0&&t.params.Line2.threshold||0;ds=t.ray;const l=this.matrixWorld,c=this.geometry,h=this.material;_r=h.linewidth+o,c.boundingSphere===null&&c.computeBoundingSphere(),eh.copy(c.boundingSphere).applyMatrix4(l);let f;if(n)f=_r*.5;else{const m=Math.max(i.near,eh.distanceToPoint(ds.origin));f=ky(i,m,h.resolution)}if(eh.radius+=f,ds.intersectsSphere(eh)===!1)return;c.boundingBox===null&&c.computeBoundingBox(),th.copy(c.boundingBox).applyMatrix4(l);let p;if(n)p=_r*.5;else{const m=Math.max(i.near,th.distanceToPoint(ds.origin));p=ky(i,m,h.resolution)}th.expandByScalar(p),ds.intersectsBox(th)!==!1&&(n?ZD(this,e):jD(this,i,e))}onBeforeRender(t){const e=this.material.uniforms;e&&e.resolution&&(t.getViewport(lm),this.material.uniforms.resolution.value.set(lm.z,lm.w))}}class KD extends dM{constructor(t=new fM,e=new Dg({color:Math.random()*16777215})){super(t,e),this.isLine2=!0,this.type="Line2"}}const JD=Lt.forwardRef(function({points:t,color:e=16777215,vertexColors:n,linewidth:i,lineWidth:o,segments:l,dashed:c,...h},f){var p,m;const g=hs(_=>_.size),v=Lt.useMemo(()=>l?new dM:new KD,[l]),[x]=Lt.useState(()=>new Dg),b=(n==null||(p=n[0])==null?void 0:p.length)===4?4:3,S=Lt.useMemo(()=>{const _=l?new Rg:new fM,E=t.map(T=>{const A=Array.isArray(T);return T instanceof I||T instanceof Me?[T.x,T.y,T.z]:T instanceof ut?[T.x,T.y,0]:A&&T.length===3?[T[0],T[1],T[2]]:A&&T.length===2?[T[0],T[1],0]:T});if(_.setPositions(E.flat()),n){e=16777215;const T=n.map(A=>A instanceof Gt?A.toArray():A);_.setColors(T.flat(),b)}return _},[t,l,n,b]);return Lt.useLayoutEffect(()=>{v.computeLineDistances()},[t,v]),Lt.useLayoutEffect(()=>{c?x.defines.USE_DASH="":delete x.defines.USE_DASH,x.needsUpdate=!0},[c,x]),Lt.useEffect(()=>()=>{S.dispose(),x.dispose()},[S]),Lt.createElement("primitive",Co({object:v,ref:f},h),Lt.createElement("primitive",{object:S,attach:"geometry"}),Lt.createElement("primitive",Co({object:x,attach:"material",color:e,vertexColors:!!n,resolution:[g.width,g.height],linewidth:(m=i??o)!==null&&m!==void 0?m:1,dashed:c,transparent:b===4},h)))}),QD=()=>parseInt(Fo.replace(/\D+/g,"")),$D=QD(),tU=Lt.forwardRef(({makeDefault:s,camera:t,regress:e,domElement:n,enableDamping:i=!0,keyEvents:o=!1,onChange:l,onStart:c,onEnd:h,...f},p)=>{const m=hs(D=>D.invalidate),g=hs(D=>D.camera),v=hs(D=>D.gl),x=hs(D=>D.events),b=hs(D=>D.setEvents),S=hs(D=>D.set),_=hs(D=>D.get),E=hs(D=>D.performance),T=t||g,A=n||x.connected||v.domElement,N=Lt.useMemo(()=>new YD(T),[T]);return wg(()=>{N.enabled&&N.update()},-1),Lt.useEffect(()=>(o&&N.connect(o===!0?A:o),N.connect(A),()=>void N.dispose()),[o,A,e,N,m]),Lt.useEffect(()=>{const D=C=>{m(),e&&E.regress(),l&&l(C)},P=C=>{c&&c(C)},z=C=>{h&&h(C)};return N.addEventListener("change",D),N.addEventListener("start",P),N.addEventListener("end",z),()=>{N.removeEventListener("start",P),N.removeEventListener("end",z),N.removeEventListener("change",D)}},[l,c,h,N,m,b]),Lt.useEffect(()=>{if(s){const D=_().controls;return S({controls:N}),()=>S({controls:D})}},[s,N]),Lt.createElement("primitive",Co({ref:p,object:N,enableDamping:i},f))});class eU extends Ai{constructor(){super({uniforms:{time:{value:0},pixelRatio:{value:1}},vertexShader:`
        uniform float pixelRatio;
        uniform float time;
        attribute float size;  
        attribute float speed;  
        attribute float opacity;
        attribute vec3 noise;
        attribute vec3 color;
        varying vec3 vColor;
        varying float vOpacity;

        void main() {
          vec4 modelPosition = modelMatrix * vec4(position, 1.0);
          modelPosition.y += sin(time * speed + modelPosition.x * noise.x * 100.0) * 0.2;
          modelPosition.z += cos(time * speed + modelPosition.x * noise.y * 100.0) * 0.2;
          modelPosition.x += cos(time * speed + modelPosition.x * noise.z * 100.0) * 0.2;
          vec4 viewPosition = viewMatrix * modelPosition;
          vec4 projectionPostion = projectionMatrix * viewPosition;
          gl_Position = projectionPostion;
          gl_PointSize = size * 25. * pixelRatio;
          gl_PointSize *= (1.0 / - viewPosition.z);
          vColor = color;
          vOpacity = opacity;
        }
      `,fragmentShader:`
        varying vec3 vColor;
        varying float vOpacity;
        void main() {
          float distanceToCenter = distance(gl_PointCoord, vec2(0.5));
          float strength = 0.05 / distanceToCenter - 0.1;
          gl_FragColor = vec4(vColor, strength * vOpacity);
          #include <tonemapping_fragment>
          #include <${$D>=154?"colorspace_fragment":"encodings_fragment"}>
        }
      `})}get time(){return this.uniforms.time.value}set time(t){this.uniforms.time.value=t}get pixelRatio(){return this.uniforms.pixelRatio.value}set pixelRatio(t){this.uniforms.pixelRatio.value=t}}const pM=s=>s&&s.constructor===Float32Array,nU=s=>[s.r,s.g,s.b],mM=s=>s instanceof ut||s instanceof I||s instanceof Me,gM=s=>Array.isArray(s)?s:mM(s)?s.toArray():[s,s,s];function Ll(s,t,e){return Lt.useMemo(()=>{if(t!==void 0){if(pM(t))return t;if(t instanceof Gt){const n=Array.from({length:s*3},()=>nU(t)).flat();return Float32Array.from(n)}else if(mM(t)||Array.isArray(t)){const n=Array.from({length:s*3},()=>gM(t)).flat();return Float32Array.from(n)}return Float32Array.from({length:s},()=>t)}return Float32Array.from({length:s},e)},[t])}const iU=Lt.forwardRef(({noise:s=1,count:t=100,speed:e=1,opacity:n=1,scale:i=1,size:o,color:l,children:c,...h},f)=>{Lt.useMemo(()=>iM({SparklesImplMaterial:eU}),[]);const p=Lt.useRef(null),m=hs(T=>T.viewport.dpr),g=gM(i),v=Lt.useMemo(()=>Float32Array.from(Array.from({length:t},()=>g.map(Ym.randFloatSpread)).flat()),[t,...g]),x=Ll(t,o,Math.random),b=Ll(t,n),S=Ll(t,e),_=Ll(t*3,s),E=Ll(l===void 0?t*3:t,pM(l)?l:new Gt(l),()=>1);return wg(T=>{p.current&&p.current.material&&(p.current.material.time=T.clock.elapsedTime)}),Lt.useImperativeHandle(f,()=>p.current,[]),Lt.createElement("points",Co({key:`particle-${t}-${JSON.stringify(i)}`},h,{ref:p}),Lt.createElement("bufferGeometry",null,Lt.createElement("bufferAttribute",{attach:"attributes-position",args:[v,3]}),Lt.createElement("bufferAttribute",{attach:"attributes-size",args:[x,1]}),Lt.createElement("bufferAttribute",{attach:"attributes-opacity",args:[b,1]}),Lt.createElement("bufferAttribute",{attach:"attributes-speed",args:[S,1]}),Lt.createElement("bufferAttribute",{attach:"attributes-color",args:[E,3]}),Lt.createElement("bufferAttribute",{attach:"attributes-noise",args:[_,3]})),c||Lt.createElement("sparklesImplMaterial",{transparent:!0,pixelRatio:m,depthWrite:!1}))}),sU=({color:s="grey",lineWidth:t=3})=>{const e=Lt.useRef(null),n=Lt.useRef(null),i=Lt.useRef(1),[o,l]=Lt.useState(1),c=[[-1,-1,-1,1],[1,-1,-1,1],[1,1,-1,1],[-1,1,-1,1],[-1,-1,1,1],[1,-1,1,1],[1,1,1,1],[-1,1,1,1],[-1,-1,-1,-1],[1,-1,-1,-1],[1,1,-1,-1],[-1,1,-1,-1],[-1,-1,1,-1],[1,-1,1,-1],[1,1,1,-1],[-1,1,1,-1]],h=[[0,1],[1,2],[2,3],[3,0],[4,5],[5,6],[6,7],[7,4],[0,4],[1,5],[2,6],[3,7],[8,9],[9,10],[10,11],[11,8],[12,13],[13,14],[14,15],[15,12],[8,12],[9,13],[10,14],[11,15],[0,8],[1,9],[2,10],[3,11],[4,12],[5,13],[6,14],[7,15]],f=v=>{const[x,b,S,_]=v,E=1.5,T=5,A=T/(T-_);return[x*A*E,b*A*E,S*A*E]},p=(v,x)=>{v.rotation.y+=.01*x,v.rotation.x+=.01*x},m=v=>{i.current+=.005*o,i.current>=1?l(-1):i.current<=0&&l(1),v.children.forEach(x=>{x.material.opacity=i.current})};return wg(v=>{const x=v.clock.getDelta();e.current&&p(e.current,x),n.current&&m(n.current)}),pn.jsxs("group",{ref:e,scale:[2,2,2],children:[pn.jsx(iU,{position:[0,0,0],count:50,size:5,scale:[2,2,2],color:"gray"}),pn.jsx("group",{ref:n,children:h.map((v,x)=>{const[b,S]=v,_=f(c[b]),E=f(c[S]);return pn.jsx(JD,{points:[new I(..._),new I(...E)],color:s,lineWidth:t,transparent:!0},x)})})]})},uU=()=>pn.jsxs(FD,{camera:{position:[0,0,20],fov:40},gl:{antialias:!0},children:[pn.jsx(sU,{}),pn.jsx(tU,{enableRotate:!0,autoRotate:!0,autoRotateSpeed:.5})]});export{uU as T,pn as j};
